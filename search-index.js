var searchIndex = JSON.parse('{\
"libsignal_protocol":{"doc":"Rust implementation of the <strong>Signal Protocol</strong> for asynchronous","t":"GNNDDEEEDNDEDDIQDDINDDDDDDDDQDDDINDNGNNNDDDDDNIDDIDNNDDDNDDNDINDEGEDIDNCDDIDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMMMLLLLLLLLLLLLLLLLLLLLLALFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLKLLLKLLKLLKLLLLKLLKLLFFLLLLLLLLLLLLLLLLMMAFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLALLLLLLLLLLMLMLMMLKLLKLLLLKLLLLMFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLMFFFLLLLLLLMLLLLLMLLKLLLKLLKLLKLLKLLMFFFFFFFLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNGNNENNNNNNLLLLLLLLLLLLMMDDLLLLFLLLLLLLLLLLLLLLLLLLLLLLLDIDENNDGDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Aci","Aci","Aci","AliceSignalProtocolParameters","BobSignalProtocolParameters","CiphertextMessage","CiphertextMessageType","ContentHint","DecryptionErrorMessage","Default","DeviceId","Direction","DisplayableFingerprint","Fingerprint","GenericSignedPreKey","Id","IdentityKey","IdentityKeyPair","IdentityKeyStore","Implicit","InMemIdentityKeyStore","InMemKyberPreKeyStore","InMemPreKeyStore","InMemSenderKeyStore","InMemSessionStore","InMemSignalProtocolStore","InMemSignedPreKeyStore","KeyPair","KeyPair","KyberPayload","KyberPreKeyId","KyberPreKeyRecord","KyberPreKeyStore","Plaintext","PlaintextContent","PlaintextContent","Pni","Pni","Pni","PreKey","PreKeyBundle","PreKeyBundleContent","PreKeyId","PreKeyRecord","PreKeySignalMessage","PreKeySignalMessage","PreKeyStore","PrivateKey","ProtocolAddress","ProtocolStore","PublicKey","Receiving","Resendable","ScannableFingerprint","SealedSenderDecryptionResult","SenderCertificate","SenderKey","SenderKeyDistributionMessage","SenderKeyMessage","SenderKeyMessage","SenderKeyRecord","SenderKeyStore","Sending","ServerCertificate","ServiceId","ServiceIdFixedWidthBinaryBytes","ServiceIdKind","SessionRecord","SessionStore","SignalMessage","SignalMessage","SignalProtocolError","SignedPreKeyId","SignedPreKeyRecord","SignedPreKeyStore","UnidentifiedSenderMessageContent","Unknown","Whisper","alice_base_key","all_kyber_pre_key_ids","all_kyber_pre_key_ids","all_pre_key_ids","all_pre_key_ids","all_signed_pre_key_ids","all_signed_pre_key_ids","archive_current_state","as_ref","as_ref","as_ref","as_ref","base_key","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_agreement","calculate_agreement","calculate_signature","calculate_signature","calculate_signature_for_multipart_message","certificate","certificate","chain_id","chain_id","chain_key","ciphertext","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","content_hint","contents","counter","create_sender_key_distribution_message","ct_eq","current_ratchet_key_matches","decode","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_id","device_id","device_id","device_id","device_id","device_id","display","display_string","distribution_id","distribution_id","ec_pre_key_id","ec_pre_key_public","ec_pre_key_signature","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","expiration","extract_decryption_error_message_from_serialized_content","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_original","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_djb_public_key_bytes","from_public_and_private","from_storage","from_storage","from_storage","generate","generate","generate","get_identity","get_identity","get_identity","get_identity_key_pair","get_identity_key_pair","get_identity_key_pair","get_kyber_ciphertext","get_kyber_pre_key","get_kyber_pre_key","get_kyber_pre_key","get_local_registration_id","get_local_registration_id","get_local_registration_id","get_pre_key","get_pre_key","get_pre_key","get_receiver_chain_key_bytes","get_sender_chain_key_bytes","get_signed_pre_key","get_signed_pre_key","get_signed_pre_key","get_storage","get_storage","get_storage","group_decrypt","group_encrypt","group_id","has_kyber_pre_key","has_usable_sender_chain","hash","hash","hash","hash","hash","hash","hash","id","id","id","identity_key","identity_key","identity_key","identity_key","identity_store","incremental_mac","initialize_alice_session_record","initialize_bob_session_record","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_trusted_identity","is_trusted_identity","is_trusted_identity","iteration","iteration","kem","key","key_id","key_pair","key_pair","key_pair","key_type","key_type","kyber_ciphertext","kyber_pre_key_id","kyber_pre_key_id","kyber_pre_key_id","kyber_pre_key_public","kyber_pre_key_public","kyber_pre_key_signature","kyber_pre_key_signature","kyber_pre_key_store","load_existing_sessions","load_sender_key","load_sender_key","load_sender_key","load_session","load_session","load_session","local_identity_key_bytes","local_registration_id","mark_kyber_pre_key_used","mark_kyber_pre_key_used","mark_kyber_pre_key_used","message","message","message","message_decrypt","message_decrypt_prekey","message_decrypt_signal","message_encrypt","message_type","message_version","message_version","message_version","message_version","modify","msg_type","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_fresh","our_base_key_pair","our_identity_key_pair","our_identity_key_pair","our_kyber_pre_key_pair","our_one_time_pre_key_pair","our_ratchet_key_pair","our_signed_pre_key_pair","parse_from_service_id_binary","parse_from_service_id_fixed_width_binary","parse_from_service_id_string","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pre_key_id","pre_key_id","pre_key_id","pre_key_public","pre_key_public","pre_key_store","private_key","private_key","private_key","private_key","process_prekey","process_prekey_bundle","process_sender_key_distribution_message","public_key","public_key","public_key","public_key","public_key","public_key","public_key","public_key","public_key_bytes","ratchet_key","raw_uuid","registration_id","registration_id","registration_id","remote_identity_key_bytes","remote_registration_id","remove_pre_key","remove_pre_key","remove_pre_key","reset","save_identity","save_identity","save_identity","save_kyber_pre_key","save_kyber_pre_key","save_kyber_pre_key","save_pre_key","save_pre_key","save_pre_key","save_signed_pre_key","save_signed_pre_key","save_signed_pre_key","scannable","sealed_sender_decrypt","sealed_sender_decrypt_to_usmc","sealed_sender_encrypt","sealed_sender_encrypt_from_usmc","sealed_sender_multi_recipient_encrypt","sealed_sender_multi_recipient_encrypt_using_new_ephemeral_key_derivation","sealed_sender_multi_recipient_fan_out","secret_key","sender","sender_device_id","sender_e164","sender_e164","sender_e164","sender_key_store","sender_ratchet_key","sender_uuid","sender_uuid","sender_uuid","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized","serialized","serialized","serialized","serialized","serialized","serialized","serialized","serialized","service_id_binary","service_id_fixed_width_binary","service_id_string","session_store","session_version","set_their_kyber_pre_key","set_their_one_time_pre_key","sign_alternate_identity","signature","signature","signature","signature","signed_pre_key_id","signed_pre_key_id","signed_pre_key_public","signed_pre_key_signature","signed_pre_key_store","signer","signing_key","store_sender_key","store_sender_key","store_sender_key","store_session","store_session","store_session","their_base_key","their_identity_key","their_identity_key","their_kyber_ciphertext","their_kyber_pre_key","their_one_time_pre_key","their_ratchet_key","their_signed_pre_key","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u32","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate","verify_alternate_identity","verify_mac","verify_signature","verify_signature","verify_signature_for_multipart_message","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_kyber_pre_key","with_their_kyber_pre_key","with_their_one_time_pre_key","ApplicationCallbackError","BadKEMCiphertextLength","BadKEMKeyLength","BadKEMKeyType","BadKeyLength","BadKeyType","CiphertextMessageTooShort","DuplicatedMessage","Err","FfiBindingError","FingerprintParsingError","FingerprintVersionMismatch","InvalidArgument","InvalidKyberPreKeyId","InvalidMacKeyLength","InvalidMessage","InvalidPreKeyId","InvalidProtobufEncoding","InvalidRegistrationId","InvalidSealedSenderMessage","InvalidSenderKeySession","InvalidSessionStructure","InvalidSignedPreKeyId","InvalidState","LegacyCiphertextVersion","NoKeyTypeIdentifier","NoSenderKeyState","Ok","Result","SealedSenderSelfSend","SessionNotFound","SignalProtocolError","SignatureValidationFailed","UnknownSealedSenderVersion","UnrecognizedCiphertextVersion","UnrecognizedMessageVersion","UntrustedIdentity","WrongKEMKeyType","borrow","borrow_mut","fmt","fmt","from","into","source","to_string","try_from","try_into","type_id","vzip","distribution_id","distribution_id","Incremental","Validating","borrow","borrow","borrow_mut","borrow_mut","calculate_chunk_size","clone","clone","clone_into","clone_into","finalize","finalize","from","from","into","into","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","update","validating","vzip","vzip","Key","KeyKind","KeyPair","KeyType","Kyber1024","Kyber768","Public","PublicKey","Secret","SecretKey","SerializedCiphertext","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","ct_eq","decapsulate","deserialize","encapsulate","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_public_and_private","generate","into","into","into","into","into","key_length","key_length","key_length","key_type","new","public_key","secret_key","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"libsignal_protocol"],[1013,"libsignal_protocol::error"],[1063,"libsignal_protocol::error::SignalProtocolError"],[1065,"libsignal_protocol::incremental_mac"],[1096,"libsignal_protocol::kem"],[1186,"core::result"],[1187,"core::iter::traits::iterator"],[1188,"alloc::boxed"],[1189,"rand_core"],[1190,"rand::rng"],[1191,"core::cmp"],[1192,"uuid"],[1193,"subtle"],[1194,"core::marker"],[1195,"alloc::string"],[1196,"core::iter::traits::collect"],[1197,"core::fmt"],[1198,"core::fmt"],[1199,"core::pin"],[1200,"alloc::vec"],[1201,"core::option"],[1202,"std::time"],[1203,"core::hash"],[1204,"core::ops::function"],[1205,"num_enum"],[1206,"core::any"],[1207,"core::error"],[1208,"core::clone"],[1209,"digest::mac"],[1210,"crypto_common"],[1211,"digest::mac"]],"d":["A service ID representing an ACI (“ACcount Identifier”…","An Aci.","An ACI","","","","","","","","The type used in memory to represent a <em>device</em>, i.e. a …","Each Signal message can be considered to have exactly two …","","","","","A public key that represents the identity of a user.","The private identity of a user.","Interface defining the identity store, which may be …","","Reference implementation of traits::IdentityKeyStore.","Reference implementation of traits::KyberPreKeyStore.","Reference implementation of traits::PreKeyStore.","Reference implementation of traits::SenderKeyStore.","Reference implementation of traits::SessionStore.","Reference implementation of traits::ProtocolStore.","Reference implementation of traits::SignedPreKeyStore.","","","","A unique identifier selecting among this client’s known …","","Interface for storing signed Kyber pre-keys downloaded …","","","","A service ID representing a PNI (“Phone Number Identifier…","A Pni.","A PNI","","","","A unique identifier selecting among this client’s known …","","","","Interface for storing pre-keys downloaded from a server.","","Represents a unique Signal client instance as …","Mixes in all the store interfaces defined in this module.","","We are in the context of receiving a message.","","","","","","","","","","Interface for storing sender key records, allowing …","We are in the context of sending a message.","","A Signal service ID, which can be one of various types.","The fixed-width binary representation of a ServiceId.","Known types of ServiceId.","","Interface for a Signal client instance to store a session …","","","","A unique identifier selecting among this client’s known …","","Interface for storing signed pre-keys downloaded from a …","","","","","Returns all registered Kyber pre-key ids","Returns all registered Kyber pre-key ids","Returns all registered pre-key ids","Returns all registered pre-key ids","Returns all registered signed pre-key ids","Returns all registered signed pre-key idsconstant-time comparison as long as the two keys have a …","","Deserialize a public identity from a byte slice.","","","","","","","","","","","","","","","","","An identifier representing a particular Signal client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Generate a random new identity from randomness in <code>csprng</code>.","","Return the public identity for the given <code>address</code>, if known.","","","Return the single specific identity the store is assumed …","","","","Look up the signed kyber pre-key corresponding to …","","","Return a u32 specific to this store instance.","","","Look up the pre-key corresponding to <code>prekey_id</code>.","","","","","Look up the signed pre-key corresponding to …","","","","","","","","","","","","","","","","","","","","","Return the public identity of this user.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return whether an identity is trusted for the role …","","","","","Keys and protocol functions for standard key encapsulation …","","","","","","","","","","","","","","","","","Bulk version of <code>SessionStore::load_session</code>.","Look up the entry corresponding to …","","","Look up the session corresponding to <code>address</code>.","","","","","Mark the entry for <code>kyber_prekey_id</code> as “used”. This …","","","","","","","","","","","","","","","","","A unique identifier for the target user. This is usually a …","","","","","","Create a new address.","","","","Initialize a public-facing identity from a public key.","Create a key pair from a public <code>identity_key</code> and a private …","","","","","","","","","","Create a new instance.","Create an empty pre-key store.","Create an empty signed pre-key store.","Create an empty kyber pre-key store.","Create an empty session store.","Create an empty sender key store.","Create an object with the minimal implementation of …","","","","","","","","","Parses from the standard binary representation, returning …","Parses from the standard binary representation, returning …","Parses from the standard String representation, returning …","","","","","","","","","","","","","","Return the private key that defines this identity.","","","","","","","","","","Return the public key representing this identity.","Return the public key that defines this identity.","","","","","","Returns the UUID inside this service ID, discarding the …","","","","","","Remove the entry for <code>prekey_id</code>.","","","Clear the mapping of known keys.","Record an identity into the store. The identity is then …","","","Set the entry for <code>kyber_prekey_id</code> to the value of <code>record</code>.","","","Set the entry for <code>prekey_id</code> to the value of <code>record</code>.","","","Set the entry for <code>signed_prekey_id</code> to the value of <code>record</code>.","","","","Decrypt a Sealed Sender message <code>ciphertext</code> in either the …","Decrypt the payload of a sealed-sender message in either …","Encrypt the plaintext message <code>ptext</code>, generate an …","This method implements the single-key single-recipient KEM …","This method implements a single-key multi-recipient KEM as …","For testing only.","Split out the encoded message from …","","","","","","","","","","","","","","","","","Return an owned byte slice which can be deserialized with …","Return a byte slice which can later be deserialized with …","","","","","","","","","","","","","","The standard variable-width binary representation for a …","The standard fixed-width binary representation for a …","The standard string representation for a Signal service ID.","","","","","Generate a signature claiming that <code>other</code> represents the …","","","","","","","","","","","","Assign <code>record</code> to the entry for <code>(sender, distribution_id)</code>.","","","Set the entry for <code>address</code> to the value of <code>record</codeiven a trusted identity <code>self</code>, verify that <code>other</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","error in method call ‘{0}’: {1}","bad KEM ciphertext length &lt;{1}&gt; for key with type &lt;{0}&gt;","bad KEM key length &lt;{1}&gt; for key with type &lt;{0}&gt;","bad KEM key type &lt;{0:#04x}&gt;","bad key length &lt;{1}&gt; for key with type &lt;{0}&gt;","bad key type &lt;{0:#04x}&gt;","ciphertext serialized bytes were too short &lt;{0}&gt;","message with old counter {0} / {1}","Contains the error value","error while invoking an ffi callback: {0}","fingerprint parsing error","fingerprint version number mismatch them {0} us {1}","invalid argument: {0}","invalid Kyber prekey identifier","invalid MAC key length &lt;{0}&gt;","invalid {0:?} message: {1}","invalid prekey identifier","protobuf encoding was invalid","session for {0} has invalid registration ID {1:X}","invalid sealed sender message: {0}","invalid sender key session with distribution ID …","invalid session: {0}","invalid signed prekey identifier","invalid state for call to {0} to succeed: {1}","ciphertext version was too old &lt;{0}&gt;","no key type identifier","missing sender key state for distribution ID …","Contains the success value","","self send of a sealed sender message","session with {0} not found","","invalid signature detected","unknown sealed sender message version {0}","ciphertext version was unrecognized &lt;{0}&gt;","unrecognized message version &lt;{0}&gt;","untrusted identity for address {0}","unexpected KEM key type &lt;{0:#04x}&gt; (expected &lt;{1:#04x}&gt;)","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A public/secret key pair for a KEM protocol.","Designates a supported KEM protocol","Kyber1024 key","Kyber768 key","","A KEM public key with the ability to encapsulate a shared …","","A KEM secret key with the ability to decapsulate a shared …","","","","","","","","","","","","","","","","","","","","","","A constant-time comparison as long as the two keys have a …","Decapsulates a <code>SharedSecret</code> that was encapsulated into a …","Create a <code>Key&lt;Kind&gt;</code> instance from a byte string created …","Create a <code>SharedSecret</code> and a <code>Ciphertext</code>. The <code>Ciphertext</code> can …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize public and secret keys that were serialized by …","Creates a public-secret key pair for a specified KEM …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Return the <code>KeyType</code> that identifies the KEM protocol for …","","","","Create a binary representation of the key that includes a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,27,28,0,0,0,0,0,0,39,0,0,0,0,0,104,0,0,0,39,0,0,0,0,0,0,0,0,104,0,0,0,0,36,0,66,0,27,28,36,0,0,0,0,0,66,0,0,0,0,0,51,39,0,0,0,36,0,0,66,0,0,51,0,0,0,0,0,0,0,66,0,0,0,0,0,39,36,1,6,8,9,8,10,8,1,12,13,14,15,13,12,17,75,76,54,67,27,28,29,30,16,18,21,31,32,33,34,35,66,36,12,37,13,14,15,17,38,24,25,39,59,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,75,76,54,67,27,28,29,30,16,18,21,31,32,33,34,35,66,36,12,37,13,14,15,17,38,24,25,39,59,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,18,21,18,21,18,24,25,14,15,15,14,27,28,29,30,16,18,21,31,32,33,34,35,36,12,37,13,14,15,17,38,24,25,39,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,27,28,29,30,16,18,21,31,32,33,34,35,36,12,37,13,14,15,17,38,24,25,39,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,29,30,16,34,42,44,46,32,54,54,12,0,16,1,34,9,10,6,49,50,54,104,104,16,18,32,24,25,40,45,1,30,38,59,41,67,59,33,33,14,15,67,67,67,12,13,14,15,12,13,14,15,27,28,29,30,16,18,34,36,39,42,44,46,51,0,25,0,27,27,28,29,29,30,30,16,31,31,32,33,34,66,36,12,37,13,14,15,17,38,24,25,39,59,40,42,42,43,44,44,45,46,46,47,51,38,75,76,54,67,67,27,28,29,29,30,16,16,18,21,21,31,32,33,34,34,35,35,66,36,12,37,13,14,15,17,17,38,24,25,39,39,59,40,41,42,42,43,44,44,45,1,46,46,47,48,9,10,6,49,50,8,51,16,21,104,43,47,21,35,43,80,48,8,80,48,8,1,83,6,8,80,48,8,81,9,8,1,1,82,10,8,104,43,47,0,0,54,41,1,27,28,29,30,42,44,46,104,104,45,35,13,41,67,8,0,0,0,75,76,54,67,27,28,29,30,16,18,21,31,32,33,34,35,66,36,12,37,13,14,15,17,38,24,25,39,59,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,80,48,8,14,15,0,25,24,104,104,45,16,18,13,13,41,67,41,67,41,67,8,49,56,50,8,79,49,8,1,1,83,6,8,13,59,59,0,0,0,0,66,12,13,14,15,41,54,30,75,76,54,104,104,30,21,31,33,34,35,12,37,13,14,15,24,25,41,45,48,9,10,6,49,50,8,1,75,75,76,76,76,76,76,28,28,28,29,30,16,34,42,44,46,13,41,67,41,67,8,35,45,47,21,0,0,0,104,104,18,34,35,24,45,21,16,38,28,13,41,67,1,1,81,9,8,48,80,48,8,83,6,8,81,9,8,82,10,8,33,0,0,0,0,0,0,0,43,54,25,25,59,59,8,12,25,59,59,104,104,16,18,32,34,35,66,40,45,1,54,12,13,14,15,17,38,24,25,28,28,28,8,1,75,75,35,104,104,24,25,13,41,41,41,8,25,15,56,50,8,79,49,8,76,75,76,76,75,75,75,75,104,104,38,27,28,29,30,16,18,21,31,32,33,34,35,36,12,37,13,14,15,17,38,24,25,39,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,27,29,30,31,42,44,46,39,75,76,54,67,27,27,28,29,30,16,16,18,18,21,21,31,32,33,34,34,35,35,35,66,36,36,12,12,37,13,13,14,14,15,15,17,17,38,38,24,25,39,59,40,41,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,27,36,75,76,54,67,27,28,29,30,16,18,21,31,32,33,34,35,66,36,12,37,13,14,15,17,38,24,25,39,59,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,75,76,54,67,27,28,29,30,16,18,21,31,32,33,34,35,66,36,12,37,13,14,15,17,38,24,25,39,59,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,24,25,34,12,16,14,16,75,76,54,67,27,28,29,30,16,18,21,31,32,33,34,35,66,36,12,37,13,14,15,17,38,24,25,39,59,40,41,42,43,44,45,1,46,47,48,9,10,6,49,50,8,51,41,75,75,4,4,4,4,4,4,4,4,20,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,20,0,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,105,106,0,0,93,96,93,96,0,93,96,93,96,93,96,93,96,93,96,93,93,96,93,96,93,96,93,96,93,96,93,93,96,0,0,0,0,68,68,0,0,0,0,0,68,100,101,102,86,68,100,101,102,86,68,100,101,102,86,68,100,101,102,86,102,102,102,102,68,102,68,68,100,101,68,100,101,102,86,86,86,68,100,101,102,86,103,100,101,102,86,86,86,102,68,100,101,102,86,68,68,68,100,101,102,102,102,86,68,100,101,102,86,68,100,101,102,86,68,100,101,102,86],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[5,[[3,[2]],4]]]],[6,[[0,[7]]]],[8,[[0,[7]]]],[9,[[0,[7]]]],[8,[[0,[7]]]],[10,[[0,[7]]]],[8,[[0,[7]]]],[1,[[5,[11,4]]]],[12,[[3,[2]]]],[13,[[3,[2]]]],[14,[[3,[2]]]],[15,[[3,[2]]]],[13,16],[12,[[3,[2]]]],[17,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,16],[[20,[[19,[[3,[2]]]]]]]],[[21,16],[[20,[[19,[[3,[2]]]]]]]],[[18,[3,[2]],-1],[[20,[[19,[[3,[2]]]]]]],[22,23]],[[21,[3,[2]],-1],[[20,[[19,[[3,[2]]]]]]],[22,23]],[[18,[3,[[3,[2]]]],-1],[[20,[[19,[[3,[2]]]]]]],[22,23]],[24,[[20,[[3,[2]]]]]],[25,[[20,[[3,[2]]]]]],[14,26],[15,[[20,[26]]]],[15,[[20,[[3,[2]]]]]],[14,[[3,[2]]]],[27,27],[28,28],[29,29],[30,30],[16,16],[18,18],[21,21],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[12,12],[37,37],[13,13],[14,14],[15,15],[17,17],[38,38],[24,24],[25,25],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[1,1],[46,46],[47,47],[48,48],[9,9],[10,10],[6,6],[49,49],[50,50],[8,8],[51,51],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[29,29],52],[[30,30],52],[[16,16],52],[[34,34],52],[[42,42],52],[[44,44],52],[[46,46],52],[[32,[3,[2]]],[[20,[53]]]],[54,[[20,[39]]]],[54,[[20,[[3,[2]]]]]],[12,26],[[30,55,56,-1],[[20,[15]]],[23,22]],[[16,16],57],[[1,16],[[5,[53,4]]]],[[[3,[2]]],[[20,[34]]]],[[],9],[[],10],[[],6],[[],49],[[],50],[[[3,[2]]],[[20,[54]]]],[[[3,[2]]],[[20,[-1]]],58],[[[3,[2]]],[[20,[-1]]],58],[[[3,[2]]],[[20,[16]]]],[[[3,[2]]],[[20,[18]]]],[[[3,[2]]],[[20,[32]]]],[[[3,[2]]],[[20,[24]]]],[[[3,[2]]],[[20,[25]]]],[[[3,[2]]],[[5,[40,4]]]],[[[3,[2]]],[[20,[45]]]],[[[3,[2]]],[[5,[1,4]]]],[30,29],[38,26],[59,[[20,[29]]]],[41,[[20,[29]]]],0,0,0,[33,[[20,[60]]]],[14,55],[15,[[20,[55]]]],0,0,0,[-1,-2,[],[[62,[61]]]],[-1,-2,[],[[62,[61]]]],[-1,-2,[],[[62,[61]]]],[-1,-2,[],[[62,[61]]]],[-1,-2,[],[[62,[61]]]],[-1,-2,[],[[62,[61]]]],[-1,-2,[],[[62,[61]]]],[-1,-2,[],[[62,[61]]]],[[27,27],53],[[28,28],53],[[29,29],53],[[30,30],53],[[16,16],53],[[18,18],53],[[34,34],53],[[36,36],53],[[39,39],53],[[42,42],53],[[44,44],53],[[46,46],53],[[51,51],53],0,[25,[[20,[63]]]],[[[3,[2]]],[[20,[38]]]],[[27,64],65],[[27,64],65],[[28,64],65],[[29,64],65],[[29,64],65],[[30,64],65],[[30,64],65],[[16,64],65],[[31,64],65],[[31,64],65],[[32,64],65],[[33,64],65],[[34,64],65],[[66,64],65],[[36,64],65],[[12,64],65],[[37,64],65],[[13,64],65],[[14,64],65],[[15,64],65],[[17,64],65],[[38,64],65],[[24,64],65],[[25,64],65],[[39,64],65],[[59,64],65],[[40,64],65],[[42,64],65],[[42,64],65],[[43,64],65],[[44,64],65],[[44,64],65],[[45,64],65],[[46,64],65],[[46,64],65],[[47,64],65],[[51,64],65],[[[3,[2]],36,63,26],[[20,[38]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,67],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,29],[-1,-1,[]],[-1,-1,[]],[34,16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[35,21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[16,34],[-1,-1,[]],[21,35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[38,17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,42],[-1,-1,[]],[-1,-1,[]],[26,44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,46],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[2]]],[[20,[16]]]],[[[3,[2]],[3,[2]]],[[20,[21]]]],0,0,0,[-1,21,[23,22]],[-1,35,[22,23]],[[68,42,18],[[20,[43]]]],[[-1,30],[[70,[[19,[69]]]]],[]],[[48,30],[[70,[[19,[69]]]]]],[[8,30],[[70,[[19,[69]]]]]],[-1,[[70,[[19,[69]]]]],[]],[48,[[70,[[19,[69]]]]]],[8,[[70,[[19,[69]]]]]],[1,[[5,[[72,[[71,[2]]]],4]]]],[[-1,42],[[70,[[19,[69]]]]],[]],[[6,42],[[70,[[19,[69]]]]]],[[8,42],[[70,[[19,[69]]]]]],[-1,[[70,[[19,[69]]]]],[]],[48,[[70,[[19,[69]]]]]],[8,[[70,[[19,[69]]]]]],[[-1,44],[[70,[[19,[69]]]]],[]],[[9,44],[[70,[[19,[69]]]]]],[[8,44],[[70,[[19,[69]]]]]],[[1,16],[[5,[[72,[[19,[[3,[2]]]]]],4]]]],[1,[[5,[[71,[2]],4]]]],[[-1,46],[[70,[[19,[69]]]]],[]],[[10,46],[[70,[[19,[69]]]]]],[[8,46],[[70,[[19,[69]]]]]],0,0,0,[[[3,[2]],56,30],[[20,[[71,[2]]]]]],[[56,30,55,[3,[2]],-1],[[20,[14]]],[23,22]],[54,[[20,[[72,[[3,[2]]]]]]]],[41,53],[[1,73],[[5,[53,4]]]],[[27,-1],11,74],[[28,-1],11,74],[[29,-1],11,74],[[30,-1],11,74],[[42,-1],11,74],[[44,-1],11,74],[[46,-1],11,74],[-1,20,[]],[-1,20,[]],[45,[[20,[44]]]],[35,34],[13,34],[41,[[20,[34]]]],0,0,0,[[75,-1],[[20,[1]]],[23,22]],[76,[[20,[1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,30,34,51],[[70,[[19,[69]]]]],[]],[[48,30,34,51],[[70,[[19,[69]]]]]],[[8,30,34,51],[[70,[[19,[69]]]]]],[14,26],[15,[[20,[26]]]],0,[25,[[20,[16]]]],[24,[[20,[26]]]],[-1,20,[]],[-1,20,[]],[45,[[20,[21]]]],0,0,[13,[[72,[77]]]],[13,[[72,[42]]]],[41,[[20,[[72,[42]]]]]],0,[41,[[20,[[72,[78]]]]]],0,[41,[[20,[[72,[[3,[2]]]]]]]],0,0,[[49,[3,[30]]],[[20,[[71,[1]]]]]],[[-1,30,55],[[70,[[19,[69]]]]],[]],[[50,30,55],[[70,[[19,[69]]]]]],[[8,30,55],[[70,[[19,[69]]]]]],[[-1,30],[[70,[[19,[69]]]]],[]],[[49,30],[[70,[[19,[69]]]]]],[[8,30],[[70,[[19,[69]]]]]],[1,[[5,[[71,[2]],4]]]],[1,[[5,[26,4]]]],[[-1,42],[[70,[[19,[69]]]]],[]],[[6,42],[[70,[[19,[69]]]]]],[[8,42],[[70,[[19,[69]]]]]],[13,12],[59,[[20,[[3,[2]]]]]],0,[[66,30,79,80,81,82,83,-1],[[20,[[71,[2]]]]],[23,22]],[[13,30,79,80,81,82,83,-1],[[20,[[71,[2]]]]],[23,22]],[[12,30,79,80,-1],[[20,[[71,[2]]]]],[23,22]],[[[3,[2]],30,79,80,73],[[20,[66]]]],[66,36],[12,2],[13,2],[14,2],[15,2],[[41,-1],[[20,[41]]],84],[54,[[20,[36]]]],[30,85],[[35,21,34,16,16],75],[[35,21,[72,[21]],21,[72,[86]],34,16,[72,[77]]],76],[[36,25,[71,[2]],39,[72,[[71,[2]]]]],[[20,[54]]]],[[63,[3,[2]]],-1,58],[[63,[3,[2]]],-1,58],[[60,29],30],[[16,18],21],[[[3,[2]],[3,[2]]],[[20,[31]]]],[[26,26,[3,[2]],34,[3,[2]],34],[[20,[33]]]],[16,34],[[34,18],35],[[2,[3,[2]],16,26,26,[3,[2]],34,34],[[20,[12]]]],[[42,77],37],[[2,26,[72,[44]],46,[72,[37]],16,34,12],[[20,[13]]]],[[2,55,26,26,[19,[[3,[2]]]],-1,18],[[20,[14]]],[22,23]],[[2,55,26,26,[71,[2]],16],[[20,[15]]]],[[26,16,18,-1],[[20,[24]]],[23,22]],[[60,[72,[60]],16,29,63,24,18,-1],[[20,[25]]],[23,22]],[[26,29,[72,[[11,[44,16]]]],46,16,[71,[2]],34],[[20,[41]]]],[[44,21],45],[[35,26],48],[[],9],[[],10],[[],6],[[],49],[[],50],[[35,26],[[20,[8]]]],[[],1],[75,21],[75,35],[76,35],[76,[[72,[86]]]],[76,[[72,[21]]]],[76,21],[76,21],[[[3,[2]]],[[72,[28]]]],[87,[[72,[28]]]],[85,[[72,[28]]]],[[29,29],[[72,[52]]]],[[30,30],[[72,[52]]]],[[16,16],[[72,[52]]]],[[34,34],[[72,[52]]]],[[42,42],[[72,[52]]]],[[44,44],[[72,[52]]]],[[46,46],[[72,[52]]]],[13,[[72,[44]]]],[41,[[20,[[72,[44]]]]]],0,[41,[[20,[[72,[16]]]]]],0,0,[35,18],[45,[[20,[18]]]],[47,[[20,[18]]]],0,[[13,30,1,80,81,82,83],[[20,[0]]]],[[30,79,80,41,73,-1],[[20,[11]]],[23,22]],[[30,15,56],[[20,[11]]]],[-1,20,[]],[-1,20,[]],[18,[[20,[16]]]],[34,16],[35,16],[24,[[20,[16]]]],[45,[[20,[16]]]],0,[16,[[20,[[3,[2]]]]]],[38,[[72,[16]]]],[28,55],[13,26],[41,[[20,[26]]]],0,[1,[[5,[[72,[[71,[2]]]],4]]]],[1,[[5,[26,4]]]],[[-1,44],[[70,[[19,[69]]]]],[]],[[9,44],[[70,[[19,[69]]]]]],[[8,44],[[70,[[19,[69]]]]]],[48,11],[[-1,30,34],[[70,[[19,[69]]]]],[]],[[48,30,34],[[70,[[19,[69]]]]]],[[8,30,34],[[70,[[19,[69]]]]]],[[-1,42,43],[[70,[[19,[69]]]]],[]],[[6,42,43],[[70,[[19,[69]]]]]],[[8,42,43],[[70,[[19,[69]]]]]],[[-1,44,45],[[70,[[19,[69]]]]],[]],[[9,44,45],[[70,[[19,[69]]]]]],[[8,44,45],[[70,[[19,[69]]]]]],[[-1,46,47],[[70,[[19,[69]]]]],[]],[[10,46,47],[[70,[[19,[69]]]]]],[[8,46,47],[[70,[[19,[69]]]]]],0,[[[3,[2]],16,63,[72,[60]],60,29,80,79,81,82,83],[[20,[59]]]],[[[3,[2]],80],[[20,[54]]]],[[30,25,[3,[2]],79,80,73,-1],[[20,[[71,[2]]]]],[23,22]],[[30,54,80,-1],[[20,[[71,[2]]]]],[23,22]],[[[3,[30]],[3,[1]],54,80,-1],[[20,[[71,[2]]]]],[23,22]],[[[3,[30]],[3,[1]],54,80,-1],[[20,[[71,[2]]]]],[23,22]],[[[3,[2]]],[[20,[[71,[[71,[2]]]]]]]],[43,[[20,[88]]]],[54,[[20,[25]]]],[25,[[20,[29]]]],[25,[[20,[[72,[85]]]]]],[59,[[20,[[72,[85]]]]]],0,0,[12,16],[25,[[20,[85]]]],[59,[[20,[85]]]],0,[-1,[[20,[[71,[2]]]]],[]],[-1,[[20,[[71,[2]]]]],[]],[16,[[19,[[3,[2]]]]]],[18,[[71,[2]]]],[32,[[20,[[71,[2]]]]]],[34,[[19,[[3,[2]]]]]],[35,[[19,[[3,[2]]]]]],[66,[[3,[2]]]],[40,[[5,[[71,[2]],4]]]],[45,[[20,[[71,[2]]]]]],[1,[[5,[[71,[2]],4]]]],[54,[[20,[[3,[2]]]]]],[12,[[3,[2]]]],[13,[[3,[2]]]],[14,[[3,[2]]]],[15,[[3,[2]]]],[17,[[3,[2]]]],[38,[[3,[2]]]],[24,[[20,[[3,[2]]]]]],[25,[[20,[[3,[2]]]]]],[28,[[71,[2]]]],[28,87],[28,60],0,[1,[[5,[26,4]]]],[[75,78],11],[[75,16],11],[[35,34,-1],[[20,[[19,[[3,[2]]]]]]],[23,22]],[-1,[[20,[[71,[2]]]]],[]],[-1,[[20,[[71,[2]]]]],[]],[24,[[20,[[3,[2]]]]]],[25,[[20,[[3,[2]]]]]],[13,46],[41,[[20,[46]]]],[41,[[20,[16]]]],[41,[[20,[[3,[2]]]]]],0,[25,[[20,[24]]]],[15,[[20,[16]]]],[[-1,30,55,40],[[70,[[19,[69]]]]],[]],[[50,30,55,40],[[70,[[19,[69]]]]]],[[8,30,55,40],[[70,[[19,[69]]]]]],[[-1,30,1],[[70,[[19,[69]]]]],[]],[[49,30,1],[[70,[[19,[69]]]]]],[[8,30,1],[[70,[[19,[69]]]]]],[76,16],[75,34],[76,34],[76,[[72,[77]]]],[75,[[72,[78]]]],[75,[[72,[16]]]],[75,16],[75,16],[-1,[[20,[63]]],[]],[-1,[[20,[63]]],[]],[38,63],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[39,26],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[2,[[5,[27,[89,[27]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[3,[2]]],[[20,[16]]]],[[[3,[2]]],[[20,[18]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[18,[[20,[21]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[3,[2]]],[[20,[34]]]],[[[3,[2]]],[[20,[35]]]],[18,[[20,[35]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[2,[[5,[36,[89,[36]]]]]],[[[3,[2]]],[[20,[12]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[3,[2]]],[[20,[13]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[3,[2]]],[[20,[14]]]],[[[3,[2]]],[[20,[15]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[3,[2]]],[[20,[17]]]],[-1,[[5,[-2]]],[],[]],[[[3,[2]]],[[20,[38]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[67,[[20,[41]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[],[[5,[27,[89,[27]]]]]],[[],[[5,[36,[89,[36]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[[24,16],[[20,[53]]]],[[25,16,63],[[20,[53]]]],[[34,34,[3,[2]]],[[20,[53]]]],[[12,34,34,[3,[2]]],[[20,[53]]]],[[16,[3,[2]],[3,[2]]],[[20,[53]]]],[[14,16],[[20,[53]]]],[[16,[3,[[3,[2]]]],[3,[2]]],[[20,[53]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[41,42,78,[71,[2]]],41],[[75,78],75],[[75,16],75],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[4,64],65],[[4,64],65],[-1,-1,[]],[-1,-2,[],[]],[4,[[72,[91]]]],[-1,60,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,90,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[[[93,[-1]]],[[93,[-1]]],[94,95,94]],[[[96,[-1]]],[[96,[-1]]],[94,95,94]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[93,[-1]]],[[97,[-1]]],[95,94]],[[[96,[-1]]],[[5,[92,98]]],[95,94]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,92],[[93,[-1]]],[95,94]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,90,[]],[-1,90,[]],[[[93,[-1]],[3,[2]]],[[0,[7]]],[95,94]],[[[96,[-1]],[3,[2]]],[[5,[92,98]]],[95,94]],[[[93,[-1]],-2],[[96,[-1]]],[95,94],99],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,68],[100,100],[101,101],[[[102,[-1]]],[[102,[-1]]],[94,103]],[86,86],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[102,[100]],[102,[100]]],57],[[[102,[101]],77],[[20,[[19,[[3,[2]]]]]]]],[[[3,[2]]],[[20,[[102,[-1]]]]],103],[[[102,[100]]],[[11,[[19,[[3,[2]]]],77]]]],[[68,68],53],[[[102,[100]],[102,[100]]],53],[[68,64],65],[[68,64],65],[[100,64],65],[[101,64],65],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[2]],[3,[2]]],[[20,[86]]]],[68,86],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,92],[68,92],[68,92],[[[102,[-1]]],68,103],[[78,88],86],0,0,[[[102,[-1]]],[[19,[[3,[2]]]]],103],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,60,[]],[2,[[20,[68]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[3,[2]]],[[20,[[102,[100]]]]]],[[[3,[2]]],[[20,[[102,[101]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,90,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"SessionRecord",0],[15,"u8"],[15,"slice"],[4,"SignalProtocolError",1013],[4,"Result",1186],[3,"InMemKyberPreKeyStore",0],[8,"Iterator",1187],[3,"InMemSignalProtocolStore",0],[3,"InMemPreKeyStore",0],[3,"InMemSignedPreKeyStore",0],[15,"tuple"],[3,"SignalMessage",0],[3,"PreKeySignalMessage",0],[3,"SenderKeyMessage",0],[3,"SenderKeyDistributionMessage",0],[3,"PublicKey",0],[3,"PlaintextContent",0],[3,"PrivateKey",0],[3,"Box",1188],[6,"Result",1013],[3,"KeyPair",0],[8,"CryptoRng",1189],[8,"Rng",1190],[3,"ServerCertificate",0],[3,"SenderCertificate",0],[15,"u32"],[4,"ServiceIdKind",0],[4,"ServiceId",0],[3,"DeviceId",0],[3,"ProtocolAddress",0],[3,"DisplayableFingerprint",0],[3,"ScannableFingerprint",0],[3,"Fingerprint",0],[3,"IdentityKey",0],[3,"IdentityKeyPair",0],[4,"CiphertextMessageType",0],[3,"KyberPayload",0],[3,"DecryptionErrorMessage",0],[4,"ContentHint",0],[3,"SenderKeyRecord",0],[3,"PreKeyBundle",0],[3,"KyberPreKeyId",0],[3,"KyberPreKeyRecord",0],[3,"PreKeyId",0],[3,"PreKeyRecord",0],[3,"SignedPreKeyId",0],[3,"SignedPreKeyRecord",0],[3,"InMemIdentityKeyStore",0],[3,"InMemSessionStore",0],[3,"InMemSenderKeyStore",0],[4,"Direction",0],[4,"Ordering",1191],[15,"bool"],[3,"UnidentifiedSenderMessageContent",0],[3,"Uuid",1192],[8,"SenderKeyStore",0],[3,"Choice",1193],[8,"Sized",1194],[3,"SealedSenderDecryptionResult",0],[3,"String",1195],[15,"char"],[8,"FromIterator",1196],[15,"u64"],[3,"Formatter",1197],[6,"Result",1197],[4,"CiphertextMessage",0],[3,"PreKeyBundleContent",0],[4,"KeyType",1096],[8,"Future",1198],[3,"Pin",1199],[3,"Vec",1200],[4,"Option",1201],[3,"SystemTime",1202],[8,"Hasher",1203],[3,"AliceSignalProtocolParameters",0],[3,"BobSignalProtocolParameters",0],[6,"SerializedCiphertext",1096],[6,"PublicKey",1096],[8,"SessionStore",0],[8,"IdentityKeyStore",0],[8,"PreKeyStore",0],[8,"SignedPreKeyStore",0],[8,"KyberPreKeyStore",0],[8,"FnOnce",1204],[15,"str"],[3,"KeyPair",1096],[6,"ServiceIdFixedWidthBinaryBytes",0],[6,"SecretKey",1096],[3,"TryFromPrimitiveError",1205],[3,"TypeId",1206],[8,"Error",1207],[15,"usize"],[3,"Incremental",1065],[8,"Clone",1208],[8,"Mac",1209],[3,"Validating",1065],[6,"Output",1210],[3,"MacError",1209],[8,"IntoIterator",1196],[3,"Public",1096],[3,"Secret",1096],[3,"Key",1096],[8,"KeyKind",1096],[8,"GenericSignedPreKey",0],[13,"NoSenderKeyState",1063],[13,"InvalidSenderKeySession",1063]],"b":[[344,"impl-Display-for-ServiceIdKind"],[345,"impl-Debug-for-ServiceIdKind"],[347,"impl-Debug-for-DeviceId"],[348,"impl-Display-for-DeviceId"],[349,"impl-Display-for-ProtocolAddress"],[350,"impl-Debug-for-ProtocolAddress"],[352,"impl-Display-for-DisplayableFingerprint"],[353,"impl-Debug-for-DisplayableFingerprint"],[371,"impl-Display-for-KyberPreKeyId"],[372,"impl-Debug-for-KyberPreKeyId"],[374,"impl-Display-for-PreKeyId"],[375,"impl-Debug-for-PreKeyId"],[377,"impl-Display-for-SignedPreKeyId"],[378,"impl-Debug-for-SignedPreKeyId"],[822,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-IdentityKeyPair"],[823,"impl-TryFrom%3CPrivateKey%3E-for-IdentityKeyPair"],[1053,"impl-Display-for-SignalProtocolError"],[1054,"impl-Debug-for-SignalProtocolError"],[1133,"impl-Display-for-KeyType"],[1134,"impl-Debug-for-KeyType"],[1168,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-Key%3CPublic%3E"],[1169,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-Key%3CSecret%3E"]]},\
"libsignal_service":{"doc":"","t":"DRRNNEIDNENNNNRMMALLLLLLLLALLAAFLLALLLLLLLLLLLLLLALLLLLAAMLAAAAAACAAALALAALLLALLLLLLLLLLLLLLLLALLLLALLLLACENNLLFFLLLLLLLLLLDLLLLLLFLLLLLLLLNNENNDDEGNNMLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLMLLLLMCCCNDECNCCNCCCDCNCNCCNCCNCNCNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMCMLLLLLLLLLLLLMLLLCDLLMLMLMLMLMMMMMMLLMLMLDNNNNIENNNNDEDEDDNNDNNNNNNNDNNNNDDNNNNNNNMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLFLLMLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLMMMMLMMMMLMMMMLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMLLLLLLLLLLLLKLMMMMMMMMFCNENNDDNCQCCCIELLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLCLDDNNNENNMMMLLLLLLMMLLMLLLLLLLLLLMLLLMMLMMLLLLLLLLLLLLLMMLLLDDDIDDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMKKKMMMMMMLLLLKKKMMMLLLLLLLLLLLLLLLLLLLLLLLCCCCCDCCDDCCCCSSSSCDIYCCCCCCCCCCDDLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLMLLLLLLLLLLLDLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDNDDDDDDDDDDEDDDDDDNDDDDDDDAMLLMMLMLMMLMMLMLLMMMMMLMMMLLMMMMMAMLMLMMMMMMMMLLMMMLMLLLLMMMMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMAMLMLMLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMAMLMMLMMMMAMMLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLMLMLMLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMALLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMALMAMAALMAMMLLLLMMLMMLLLLMMMMLMMLLMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLMMMMLMLMAMMLMMMMMMLMMLLLMMMLMMLLMMMMMALLMMLLMMAMMLLMMMLMLMMMMMMMLLLLMMMMMMLMLMLMMMMLMMMLMAMLMMMMLMMLMMMLMALMMALMMLMLLLLLLLLLLLLLLLMMMMLMLLMLMLMLMLMMMMLMMAMAMLMLMLMALMLMLMLMLLLLMMMMMMMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMALMLMLMLMMMMLMLMAMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLENNNNNLLLLLLLLLLLLLLLLLLLENNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNNNNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLALLLLLMMMMMLLLLLLLMLMAALLLMMMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMLLLLLLNNNNNELLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLLDLLLLLLMLLLLLLLMLLLLLNDDNNEDDNNNDNNEDDNDDNNMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMLMLMLMLLAALMLMLMLLMLMLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLDDDDDMLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLMALLLLLLLLLLLMLLLLLLLLLLLMLLLLLLMLLLMMMLMLMALMALMLMLMLLLLMLMLLLLLLLLLLLLLLLLLLMMMLLLLLLLMMLLLLLNNNENLLLLLLLLLLLLLLLLLLLNNNENLLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLLDNDEDNAAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLMLLLLLLLLLMLLLLLLLLNNELLLLLLLLLLLLLLLLLLLEDNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLDNELLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLNNDELLLLLLLLLLLMLLLLLLMLLLLLLLLLLMLLLLLLLLLLNNNNNENNLLLLLLLLLLLLLLLLLLLNENNNLLLLLLLLLLLLLLLLDAMMMMLLLLLLMMMMLLLLLMMMMMMMMMMMMMMMMLLLLLDDDDDDDDDDDDDDDDDDDDDDLMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMMMMMLLMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLMMLLLLLLNDNNENNLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLMLLLMLLLLLLLLLLLMLLLLLLLLLLEDNLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLLDLLLLLLMLLMLLLLLMLLLLLLEDNLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLLDLLLLLLLLLMLLLMLLMLMLMMLLLLLDLLLLLLLLLLLMLLMLLLLLENNLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLMLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLLLLLLLLLLLLLMLMLMMALMLMMALMLMMLMLMLMLMALMLLLMMMALLLLLLLLLMALMMMLMLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLNNNNEENNNNENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNELLLLLLLLLLLLLLLLLLLNNNENLLLLLLLLLLLLLLLLLLLNNNNENLLLLLLLLLLLLLLLLLLLDNELMLLLLLLLLLLLLLLLLMLLLLLLLMLMLMLMLMMLLLLLLLLLLNNNNNENLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLMMMLLLLLLLLLLLMLLLLLLLLLMLLNNELLLLLLLLLLLLLLLLLLLENNNNDNNNNELMLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLDLLLLLLMLMLLLLLLMLAMLLLLLLMLLENNNNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENNLLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLLDNNNNDNNCCDECENNNNMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLFLLLLLFMMMMMLMMLMLLLLLLLLLLLLLLLLMLLLLLMMMDNDDENNQNRDDDNNDENNNNNRDDDDNNDNNNNNNNDDDDNNINDNDEDNNNEEDNNDNDNNNNNNEDNDNNMMMLMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMLLLLLLLLLLLLLLLLLLLLMLMLLLLKLLLLLLLLLLLLLLLLLLLLLMMMLMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLKLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMMMMMMMMMMKLMLMMMMMMMMMMKKMMMLKKLLMMMMLMLLLLMLLLLLLLLLLLLLLMMLMMMMLLMMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMMMMMMDLLLLLLLLLLLLLLLDENCNCNNDENNDDNNDGDNNNMMLLLLLLLLLLLLLLLLMLLLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMMLMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLMLLLLLLLLMMMMMNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLILKLKKCCFCDLLMLLMLLLLAAAAAAAAFFFFFFFFFFFFFFFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccountManager","GROUP_LEAVE_FLAG","GROUP_UPDATE_FLAG","InvalidPublicKey","InvalidUuid","LinkError","MaybeSend","Profile","ProfileCipherError","ProfileManagerError","ProtocolError","ProvisioningError","ServiceError","ServiceError","USER_AGENT","about","about_emoji","attachment_cipher","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cipher","clone","clone_into","configuration","content","decrypt_device_name","default","deserialize","envelope","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","groups_v2","into","into","into","into","link_device","messagepipe","models","name","new","pre_keys","prelude","profile_cipher","profile_name","profile_service","proto","protocol","provisioning","push_service","receiver","retrieve_profile","sender","serialize","service_address","session_store","set_account_attributes","source","source","sticker_cipher","submit_recaptcha_challenge","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unidentified_access","update_device_name","update_pre_key_bundle","upload_versioned_profile","upload_versioned_profile_without_avatar","utils","vzip","vzip","vzip","vzip","websocket","zkgroup","AttachmentCipherError","MacError","PaddingError","borrow","borrow_mut","decrypt_in_place","encrypt_in_place","eq","fmt","fmt","from","into","to_string","try_from","try_into","type_id","vzip","ServiceCipher","borrow","borrow_mut","clone","clone_into","fmt","from","get_preferred_protocol_address","into","new","open_envelope","to_owned","try_from","try_into","type_id","vzip","Cdn","ContactDiscovery","Endpoint","Production","Service","ServiceConfiguration","ServiceCredentials","SignalServers","SignalingKey","Staging","Storage","aci","authorization","base_url","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_authority","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","device_id","e164","eq","fmt","fmt","from","from","from","from","from","from","from_str","into","into","into","into","login","password","phonenumber","pni","serialize","signaling_key","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unidentified_sender_trust_root","vzip","vzip","vzip","vzip","zkgroup_server_public_params","AttachmentPointer","AttachmentPointerFlags","CallMessage","CallMessage","Content","ContentBody","DataMessage","DataMessage","DataMessageFlags","EditMessage","EditMessage","GroupContext","GroupContextV2","GroupType","Metadata","NullMessage","NullMessage","PniSignatureMessage","PniSignatureMessage","Reaction","ReceiptMessage","ReceiptMessage","ServiceError","StoryMessage","StoryMessage","SyncMessage","SynchronizeMessage","TypingMessage","TypingMessage","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_body","from_proto","into","into","into","into_proto","metadata","needs_receipt","sender","sender_device","server_guid","sync_message","timestamp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unidentified_sender","vzip","vzip","vzip","Envelope","EnvelopeEntity","borrow","borrow_mut","content","deserialize","destination_uuid","from","guid","into","report_spam_token","serialize","server_timestamp","source","source_device","source_uuid","story","timestamp","try_from","try_into","type","type_id","urgent","vzip","AccessControl","AnnouncementOnly","AttributeAccess","Avatar","BincodeError","CredentialsCache","CredentialsCacheError","DeleteMember","DeletePendingMember","DeleteRequestingMember","Description","Group","GroupChange","GroupChanges","GroupDecodingError","GroupsManager","InMemoryCredentialsCache","InviteLinkAccess","InviteLinkPassword","Member","MemberAccess","ModifyMemberProfileKey","ModifyMemberRole","NewMember","NewPendingMember","NewRequestingMember","NotAci","PendingMember","PromotePendingMember","PromoteRequestingMember","ProtobufDecodeError","ReadError","RequestingMember","Timer","Timer","Title","WriteError","WrongBlob","WrongEnumValue","ZkGroupDeserializationFailure","ZkGroupVerificationFailure","access_control","add_from_invite_link","added_by_uuid","attributes","avatar","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decrypt_group","decrypt_group_context","default","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disappearing_messages_timer","duration","editor","eq","eq","eq","eq","eq","eq","fetch_encrypted_group","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get_authorization_for_today","get_group","into","into","into","into","into","into","into","into","into","into","into","into","invite_link_password","joined_at_revision","members","members","new","pending_members","profile_key","profile_key","requesting_members","retrieve_avatar","revision","revision","role","role","serialize","serialize","serialize","serialize","serialize","serialize","source","timestamp","timestamp","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","uuid","uuid","uuid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","profile_key","profile_key","role","role","uuid","uuid","uuid","uuid","derive_v2_migration_master_key","Envelope","Envelope","Incoming","KeepAliveRequest","Message","MessagePipe","PanicingWebSocketService","QueueEmpty","ServiceCredentials","Stream","WebSocketMessage","WebSocketRequestMessage","WebSocketResponseMessage","WebSocketService","WebSocketStreamItem","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","from","from","from","from","from_socket","into","into","into","into","send_message","send_message","stream","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","web_socket_message","ws","Attachment","Contact","MissingAvatarContentType","MissingProfileKey","MissingUuid","ParseContactError","Protobuf","Uuid","archived","avatar","blocked","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color","content_type","deserialize","deserialize","expire_timer","fmt","fmt","fmt","fmt","from","from","from","from","from","from_proto","inbox_position","into","into","into","name","phone_number","profile_key","profile_key","reader","serialize","serialize","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uuid","verified","vzip","vzip","vzip","KyberPreKeyEntity","PreKeyEntity","PreKeyState","PreKeysStore","SignedPreKey","SignedPreKeyEntity","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","identity_key","into","into","into","into","into","key_id","key_id","key_id","next_pq_pre_key_id","next_pre_key_id","next_signed_pre_key_id","pq_last_resort_key","pq_pre_keys","pre_keys","public_key","public_key","public_key","serialize","serialize","serialize","serialize","set_next_pq_pre_key_id","set_next_pre_key_id","set_next_signed_pre_key_id","signature","signature","signed_pre_key","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","AccessControl","AttachmentIdentifier","AttachmentPointer","Contacts","Content","DeviceId","Envelope","Group","GroupMasterKey","GroupSecretParams","Member","MessageReceiver","MessageSender","MessageSenderError","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","PendingMember","ProfileKey","ProtobufMessage","ProtobufMessage","PushService","RequestingMember","ServiceAddress","ServiceCipher","ServiceConfiguration","ServiceCredentials","ServiceError","SessionStoreExt","SignalingKey","Timer","Uuid","UuidError","as_braced","as_bytes","as_fields","as_hyphenated","as_ref","as_simple","as_u128","as_u64_pair","as_urn","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","bytes","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","create","decode","decode_length_delimited","decrypt_blob","decrypt_blob_with_padding","decrypt_profile_key","decrypt_service_id","default","default","derive_access_key","derive_from_master_key","deserialize","deserialize","deserialize","deserialize","encode","encode_buffer","encode_hex","encode_hex_upper","encode_length_delimited","encode_length_delimited_to_vec","encode_to_vec","encoded_len","encrypt_blob","encrypt_blob_with_padding","encrypt_profile_key","encrypt_profile_key_bytes","encrypt_service_id","encrypt_uid_struct","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_le","from_bytes_ref","from_fields","from_fields_le","from_slice","from_slice_le","from_str","from_u128","from_u128_le","from_u64_pair","generate","generate","get_bytes","get_commitment","get_group_identifier","get_master_key","get_profile_key_version","get_public_params","get_timestamp","get_variant","get_version","get_version_num","hash","hash","hash","hyphenated","into","into","into","into","into","into","into_bytes","is_max","is_nil","max","merge","merge_length_delimited","new","nil","parse_str","partial_cmp","partial_cmp","phonenumber","serialize","serialize","serialize","serialize","simple","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_u128_le","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","type_id","type_id","type_id","type_id","type_id","type_id","urn","vzip","vzip","vzip","vzip","vzip","vzip","EncryptionError","InputTooLong","ProfileCipher","ProfileCipherError","Utf8Error","borrow","borrow","borrow_mut","borrow_mut","decrypt_about","decrypt_avatar","decrypt_emoji","decrypt_name","encrypt_about","encrypt_emoji","encrypt_name","fmt","fmt","from","from","from","from","into","into","into_inner","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ProfileName","as_ref","borrow","borrow_mut","clone","clone_into","deserialize","deserialize","deserialize","empty","eq","family_name","fmt","fmt","from","given_name","into","is_cjkv","is_empty","serialize","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ProfileService","borrow","borrow_mut","from","from_socket","into","retrieve_profile_by_id","try_from","try_into","type_id","vzip","AccessControl","AttachmentPointer","AvatarUploadAttributes","BannedMember","BodyRange","CallMessage","ContactDetails","Content","DataMessage","DecryptionErrorMessage","DeviceName","EditMessage","Envelope","Group","GroupAttributeBlob","GroupChange","GroupChanges","GroupContext","GroupContextV2","GroupDetails","GroupExternalCredential","GroupInviteLink","GroupJoinInfo","Initial","Member","NullMessage","Pack","PaymentAddress","PendingMember","PniSignatureMessage","Preview","ProvisionEnvelope","ProvisionMessage","ProvisioningUuid","ProvisioningVersion","ReceiptMessage","RequestingMember","SenderCertificate","ServerCertificate","StoryMessage","SyncMessage","TabletSupport","TextAttachment","TypingMessage","UnidentifiedSenderMessage","Verified","WebSocketMessage","WebSocketRequestMessage","WebSocketResponseMessage","access_control","access_control","aci","aci","aci","aci","aci_identity_key_private","aci_identity_key_private","aci_identity_key_public","aci_identity_key_public","acl","action","action","actions","active","active","add_from_invite_link","add_from_invite_link","add_from_invite_link","add_from_invite_link","added_by_user_id","address","algorithm","allows_replies","allows_replies","announcements_only","answer","archived","archived","archived","archived","associated_value","attachment","attachment_identifier","attachment_pointer","attachments","attributes","attributes","author","author","avatar","avatar","avatar","avatar","avatar","background","banned_members","blocked","blocked","blocked","blocked","blocked","blur_hash","blur_hash","body","body","body","body","body","body","body","body","body_range","body_ranges","body_ranges","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","busy","call_event","call_link_update","call_log_event","call_message","call_message","caption","caption","cdn_number","cdn_number","certificate","certificate","certificate","certificate","change_epoch","ciphertext","ciphertext","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color","color","color","color","configuration","contact","contact_details","contacts","content","content","content","content_type","content_type","contents","cover","credential","data_message","data_message","data_message","date","date","date","decrypt","decryption_error_message","decryption_error_message","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delete","description","description","description","description","destination_aci","destination_aci","destination_device_id","destination_device_id","destination_service_id","destination_service_id","device_id","device_id","digest","digest","disappearing_messages_timer","edit_message","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encrypted_message","encrypted_message","encrypted_static","encrypted_static","envelope","ephemeral_public","ephemeral_public","ephemeral_public","ephemeral_public","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expire_timer","expire_timer","expire_timer","expire_timer","expire_timer","expire_timer","fetch_latest","file_name","file_name","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_request","gift_badge","group","group_attribute_blob","group_call_update","group_change","group_change","group_change","group_changes","group_changes","group_context","group_details","group_id","group_id","group_invite_link","group_v2","hangup","has_file_attachment","has_story_context","has_text_attachment","hash","headers","headers","height","height","ice_update","id","id","id","id","id","id","id","id","identity_key","identity_key","image","inbox_position","inbox_position","inbox_position","inbox_position","incremental_digest","incremental_digest","incremental_mac_chunk_size","incremental_mac_chunk_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invite_link_password","is_prekey_signal_message","is_queue_empty","is_reaction","is_receipt","is_signal_key_encrypted","is_signal_message","is_signal_service_envelope","is_story","is_story_reaction","is_unidentified_sender","is_urgent","is_valid","is_view_once","is_view_once","joined_at_revision","key","key","key","keys","legacy_hangup","length","length","master_key","master_key","member","member","member_count","members","members","members","members","members","members_e164","members_e164","message","message","message_request_response","name","name","name","name","name","name","null_message","null_message","null_message","number","number","number","number","offer","opaque","outgoing_payment","pack","padding","padding","padding","padding","partial_cmp","path","path","payment","payment_address","pending_admin_approval","pending_members","pni","pni","pni","pni","pni_change_number","pni_identity_key_private","pni_identity_key_private","pni_identity_key_public","pni_identity_key_public","pni_signature_message","policy","presentation","presentation","preview","preview","profile_key","profile_key","profile_key","profile_key","profile_key","profile_key","profile_key","profile_key","profile_key","profile_key","provisioning_code","provisioning_code","provisioning_version","provisioning_version","public_key","public_key","public_key","public_key","quote","ratchet_key","ratchet_key","reaction","read","read_receipts","read_receipts","receipt_message","receipt_message","reporting_token","reporting_token","request","request","requesting_members","required_protocol_version","required_protocol_version","response","revision","revision","revision","revision","role","role","sender_certificate","sender_key_distribution_message","sender_key_distribution_message","sent","server_certificate","server_guid","server_guid","server_signature","server_timestamp","server_timestamp","set_action","set_add_from_invite_link","set_add_from_invite_link","set_attributes","set_members","set_role","set_state","set_text_style","set_type","set_type","set_type","set_type","signature","signature","signature","signature","signature","signature","signature","size","size","source_address","source_device","source_device","source_service_id","source_service_id","start","start","state","state","status","status","sticker","sticker_pack_operation","stickers","story","story","story_context","story_message","story_message","sync_message","sync_message","synthetic_iv","synthetic_iv","target_sent_timestamp","target_sent_timestamp","text","text","text_attachment","text_background_color","text_background_color","text_foreground_color","text_foreground_color","text_style","text_style","thumbnail","thumbnail","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","title","title","title","title","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typing_message","typing_message","unidentified_sender_message","upload_timestamp","upload_timestamp","urgent","urgent","url","url","user_agent","user_agent","user_id","user_id","user_id","uuid","uuid","verb","verb","verified","verified","verified","view_once_open","viewed","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","web_socket_message","width","width","with_padding","AccessRequired","Administrator","Any","Member","Unknown","Unsatisfiable","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","AttachmentIdentifier","Borderless","CdnId","CdnKey","Flags","Gif","VoiceMessage","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","encode","encoded_len","eq","eq","fmt","fmt","from","from","from_i32","hash","into","into","is_valid","merge","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AssociatedValue","Bold","Italic","MentionAci","Monospace","None","Spoiler","Strikethrough","Style","Style","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","encode","encoded_len","eq","eq","fmt","fmt","from","from","from_i32","hash","into","into","is_valid","merge","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Answer","Busy","Hangup","IceUpdate","Offer","Opaque","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","default","default","default","default","default","default","device_id","device_id","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hangup","id","id","id","id","id","id","id","id","id","id","into","into","into","into","into","into","line","line","mid","mid","offer","opaque","opaque","opaque","opaque","opaque","opaque","opaque","sdp","sdp","sdp","sdp","sdp","sdp","set_type","set_type","set_urgency","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","urgency","urgency","vzip","vzip","vzip","vzip","vzip","vzip","HangupAccepted","HangupBusy","HangupDeclined","HangupNeedPermission","HangupNormal","Type","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","OfferAudioCall","OfferVideoCall","Type","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Droppable","HandleImmediately","Urgency","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Avatar","borrow","borrow_mut","clear","clone","clone_into","content_type","content_type","default","encoded_len","eq","fmt","from","into","length","length","to_owned","try_from","try_into","type_id","vzip","CdnSelectorAttachments","Contact","Delete","EndSession","ExpirationTimerUpdate","Flags","GiftBadge","GroupCallUpdate","Initial","Mentions","MessageTimers","Payment","Payments","ProfileKeyUpdate","ProtocolVersion","Quote","Reaction","Reactions","Sticker","StoryContext","ViewOnce","ViewOnceVideo","address","attachments","author_aci","author_aci","author_aci","author_aci","avatar","body_ranges","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contact","data","default","default","default","default","default","default","default","default","default","default","default","email","emoji","emoji","emoji","emoji","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","era_id","era_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","hash","hash","id","id","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","item","name","number","organization","organization","pack_id","pack_id","pack_key","pack_key","partial_cmp","partial_cmp","payment","quote","receipt_credential_presentation","receipt_credential_presentation","remove","remove","sent_timestamp","sent_timestamp","set_type","sticker_id","sticker_id","target_author_aci","target_author_aci","target_sent_timestamp","target_sent_timestamp","target_sent_timestamp","target_sent_timestamp","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Avatar","Email","Name","Phone","PostalAddress","avatar","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","city","city","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","country","country","default","default","default","default","default","display_name","display_name","email","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","family_name","family_name","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","given_name","given_name","into","into","into","into","into","is_profile","is_profile","label","label","label","label","label","label","middle_name","middle_name","neighborhood","neighborhood","phone","pobox","pobox","postal_address","postcode","postcode","prefix","prefix","region","region","set_type","set_type","set_type","street","street","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type","type","type_id","type_id","type_id","type_id","type_id","value","value","value","value","vzip","vzip","vzip","vzip","vzip","Custom","Home","Mobile","Type","Work","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Custom","Home","Mobile","Type","Work","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Custom","Home","Type","Work","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Activation","Activation","Amount","Item","Notification","Notification","activation","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","encode","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","merge","note","note","notification","set_type","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Activated","Request","Type","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Amount","MobileCoin","MobileCoin","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","merge","pico_mob","pico_mob","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MobileCoin","MobileCoin","Transaction","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","merge","receipt","receipt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GiftBadge","Normal","QuotedAttachment","Type","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","content_type","content_type","default","default","encoded_len","eq","eq","file_name","file_name","fmt","fmt","from","from","from_i32","hash","into","into","is_valid","partial_cmp","thumbnail","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Ciphertext","KeyExchange","PlaintextContent","PrekeyBundle","Receipt","Type","UnidentifiedSender","Unknown","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Avatar","Content","Description","DisappearingMessagesDuration","Title","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","vzip","Actions","actions","add_banned_members","add_members","add_pending_members","add_requesting_members","borrow","borrow_mut","clear","clone","clone_into","default","delete_banned_members","delete_members","delete_pending_members","delete_requesting_members","encoded_len","eq","fmt","from","into","modify_add_from_invite_link_access","modify_announcements_only","modify_attributes_access","modify_avatar","modify_description","modify_disappearing_messages_timer","modify_invite_link_password","modify_member_access","modify_member_profile_keys","modify_member_roles","modify_title","promote_pending_members","promote_pending_pni_aci_members","promote_requesting_members","revision","source_service_id","to_owned","try_from","try_into","type_id","vzip","AddBannedMemberAction","AddMemberAction","AddPendingMemberAction","AddRequestingMemberAction","DeleteBannedMemberAction","DeleteMemberAction","DeletePendingMemberAction","DeleteRequestingMemberAction","ModifyAddFromInviteLinkAccessControlAction","ModifyAnnouncementsOnlyAction","ModifyAttributesAccessControlAction","ModifyAvatarAction","ModifyDescriptionAction","ModifyDisappearingMessagesTimerAction","ModifyInviteLinkPasswordAction","ModifyMemberProfileKeyAction","ModifyMemberRoleAction","ModifyMembersAccessControlAction","ModifyTitleAction","PromotePendingMemberAction","PromotePendingPniAciMemberProfileKeyAction","PromoteRequestingMemberAction","add_from_invite_link_access","add_from_invite_link_access","added","added","added","added","announcements_only","attributes_access","attributes_access","avatar","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deleted_user_id","deleted_user_id","deleted_user_id","deleted_user_id","description","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invite_link_password","join_from_invite_link","members_access","members_access","pni","presentation","presentation","presentation","profile_key","profile_key","profile_key","role","role","role","role","set_add_from_invite_link_access","set_attributes_access","set_members_access","set_role","set_role","timer","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_id","user_id","user_id","user_id","user_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GroupChangeState","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","group_change","group_state","into","to_owned","try_from","try_into","type_id","vzip","Deliver","Member","Quit","RequestInfo","Type","Unknown","Update","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","default","default","e164","e164","encoded_len","eq","eq","fmt","fmt","from","from","from_i32","hash","into","into","is_valid","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Avatar","Member","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","content_type","content_type","default","default","e164","e164","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","length","length","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Contents","GroupInviteLinkContentsV1","V1Contents","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","group_master_key","into","into","invite_link_password","merge","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Administrator","Default","Role","Unknown","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Sticker","borrow","borrow_mut","clear","clone","clone_into","content_type","content_type","default","emoji","emoji","encoded_len","eq","fmt","from","id","id","into","to_owned","try_from","try_into","type_id","vzip","Address","MobileCoinAddress","MobileCoinAddress","address","address","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","merge","signature","signature","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Delivery","Read","Type","Viewed","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Certificate","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","expires","expires","fmt","from","identity_key","identity_key","into","sender_device","sender_device","sender_e164","sender_e164","sender_uuid","sender_uuid","signer","to_owned","try_from","try_into","type_id","vzip","Certificate","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","id","id","into","key","key","to_owned","try_from","try_into","type_id","vzip","Attachment","FileAttachment","TextAttachment","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","vzip","Blocked","CallEvent","CallLinkUpdate","CallLogEvent","Configuration","Contacts","FetchLatest","Keys","MessageRequestResponse","OutgoingPayment","PniChangeNumber","Read","Request","Sent","StickerPackOperation","ViewOnceOpen","Viewed","acis","admin_pass_key","admin_pass_key","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_event","call_log_event","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complete","complete","conversation_id","conversation_id","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","destination_e164","destination_e164","destination_service_id","destination_service_id","direction","direction","edit_message","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event","event","expiration_start_timestamp","expiration_start_timestamp","fetch_latest","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group_id","group_id","group_ids","id","id","identity_key_pair","identity_key_pair","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_recipient_update","is_recipient_update","last_resort_kyber_pre_key","last_resort_kyber_pre_key","link_previews","link_previews","message","message_request_response","new_e164","new_e164","note","note","numbers","outgoing_payment","pack_id","pack_id","pack_key","pack_key","payment_detail","provisioning_version","provisioning_version","read_receipts","read_receipts","recipient_service_id","recipient_service_id","registration_id","registration_id","request","root_key","root_key","sender_aci","sender_aci","sender_aci","sender_aci","sender_aci","sender_aci","sent","set_direction","set_event","set_type","set_type","set_type","set_type","set_type","set_type","signed_pre_key","signed_pre_key","sticker_pack_operation","storage_service","storage_service","story_message","story_message_recipients","thread_aci","thread_aci","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type","type","type","type","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typing_indicators","typing_indicators","unidentified_delivery_indicators","unidentified_delivery_indicators","unidentified_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Accepted","AdHocCall","AudioCall","Delete","Direction","Event","GroupCall","Incoming","NotAccepted","Outgoing","Type","UnknownAction","UnknownDirection","UnknownType","VideoCall","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_i32","from_i32","from_i32","hash","hash","hash","into","into","into","is_valid","is_valid","is_valid","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Clear","Type","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","LocalProfile","StorageManifest","SubscriptionStatus","Type","Unknown","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Accept","Block","BlockAndDelete","Delete","Type","Unknown","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","MobileCoin","MobileCoin","PaymentDetail","amount_pico_mob","amount_pico_mob","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","encode","encoded_len","encoded_len","eq","eq","fee_pico_mob","fee_pico_mob","fmt","fmt","from","from","into","into","ledger_block_index","ledger_block_index","ledger_block_timestamp","ledger_block_timestamp","merge","output_public_keys","receipt","receipt","recipient_address","recipient_address","spent_key_images","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Blocked","Configuration","Contacts","Keys","PniIdentity","Type","Unknown","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","StoryMessageRecipient","UnidentifiedDeliveryStatus","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","destination_service_id","destination_service_id","destination_service_id","destination_service_id","distribution_list_ids","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","is_allowed_to_reply","is_allowed_to_reply","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unidentified","unidentified","vzip","vzip","Install","Remove","Type","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Background","Bold","Color","Condensed","Default","Gradient","Gradient","Regular","Script","Serif","Style","angle","angle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","colors","default","default","encode","encoded_len","encoded_len","end_color","end_color","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_i32","hash","into","into","into","is_valid","merge","partial_cmp","positions","start_color","start_color","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Action","Started","Stopped","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Message","borrow","borrow_mut","clear","clone","clone_into","content","content","content_hint","content_hint","default","encoded_len","eq","fmt","from","group_id","group_id","into","message","sender_certificate","set_content_hint","set_type","to_owned","try_from","try_into","type","type","type_id","vzip","ContentHint","Default","Implicit","Message","PlaintextContent","PrekeyMessage","Resendable","SenderkeyMessage","Type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_i32","from_i32","hash","hash","into","into","is_valid","is_valid","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Default","State","Unverified","Verified","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Request","Response","Type","Unknown","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","ConfirmCodeResponse","DecodeError","EncryptOnlyProvisioningCipher","InvalidData","InvalidProfileKey","NewDeviceRegistration","NewDeviceRegistration","ProtocolError","ProvisionEnvelope","ProvisionMessage","ProvisioningCipher","ProvisioningError","ProvisioningVersion","SecondaryDeviceProvisioning","ServiceError","Url","WsClosing","WsError","aci_private_key","aci_public_key","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decrypt","deserialize","device_id","encrypt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_key_pair","from_public","generate","generate_registration_id","into","into","into","into","into","link_device","phone_number","pni_private_key","pni_public_key","pni_registration_id","profile_key","public_key","registration_id","service_ids","source","storage_capable","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uuid","vzip","vzip","vzip","vzip","vzip","reason","reason","reason","AccountAttributes","AccountIdentity","AttachmentV2UploadAttributes","AuthCredentials","AvatarWrite","Base64DecodeError","BincodeError","ByteStream","CredentialsCacheError","DEFAULT_DEVICE_ID","DeviceCapabilities","DeviceId","DeviceInfo","GroupsV2DecryptionError","GroupsV2Error","HttpAuth","HttpAuthOverride","Identified","InvalidDeviceName","InvalidFrameError","InvalidUrl","JsonDecodeError","KEEPALIVE_TIMEOUT_SECONDS","LinkAccountAttributes","LinkCapabilities","LinkRequest","LinkResponse","Locked","MacError","MismatchedDevices","MismatchedDevicesException","NewAvatar","NoAvatar","NoOverride","NotFoundError","ParseServiceAddress","PhoneNumberIdentity","PreKeyResponse","PreKeyResponseItem","PreKeyStatus","ProofRequired","ProofRequiredError","ProtobufDecodeError","PushService","RateLimitExceeded","RecaptchaAttributes","RecoveryPassword","RegistrationLockFailure","RegistrationMethod","RegistrationSessionMetadataResponse","ResponseError","RetainAvatar","SendError","ServiceError","ServiceIdType","ServiceIds","SessionId","SignalProtocolError","SignalServiceProfile","Sms","StaleDevices","StaleDevices","Timeout","Unauthorized","UnhandledResponseCode","Unidentified","UnsupportedContent","VerificationTransport","VerifyAccountResponse","Voice","WhoAmIResponse","WsClosing","WsError","about","about_emoji","account_attributes","aci","aci","aci","aci_pq_last_resort_pre_key","aci_signed_pre_key","allowed_to_request_code","announcement_group","as_str","avatar","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","capabilities","capabilities","captcha","captcha_required","change_number","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","create_verification_session","created","decrypt","default","default","default","delete_json","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_id","device_id","device_id","devices","devices","discoverable_by_phone_number","eq","eq","eq","eq","extra_devices","fetches_messages","fetches_messages","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_attachment","get_attachment_by_id","get_attachment_v2_upload_attributes","get_from_cdn","get_group","get_json","get_messages","get_pre_key","get_pre_key_status","get_pre_keys","get_protobuf","get_sender_certificate","get_sticker","get_sticker_pack_manifest","get_uuid_only_sender_certificate","gift_badges","gv1_migration","gv2","id","id","identity_key","identity_key","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","last_seen","length","link_device","missing_devices","name","name","name","name","next_call","next_sms","next_verification_attempt","number","number","options","password","password","patch_json","patch_verification_session","pin","pni","pni","pni","pni","pni","pni","pni_pq_last_resort_pre_key","pni_registration_id","pni_registration_id","pni_signed_pre_key","pnp","post_json","post_to_cdn0","pq_count","pq_pre_key","pre_key","push_challenge_required","put_json","put_protobuf","recovery_password","register_pre_keys","registration_id","registration_id","registration_id","registration_lock","request_verification_code","requested_information","retrieve_groups_v2_profile_avatar","retrieve_profile_avatar","retrieve_profile_by_id","send_messages","sender_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","session_id","set_account_attributes","signaling_key","signed_pre_key","source","stale_devices","storage","storage_capable","stories","submit_registration_request","submit_verification_code","svr1_credentials","svr2_credentials","time_remaining","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","token","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unidentified_access","unidentified_access_key","unlink_device","unrestricted_unidentified_access","unrestricted_unidentified_access","upload_attachment","username","username","uuid","uuid","verification_code","verified","video","voice","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whoami","write_profile","ws","http_code","reason","reason","reason","reason","reason","reason","reason","MessageReceiver","borrow","borrow_mut","clone","clone_into","create_message_pipe","from","into","new","retrieve_contacts","retrieve_messages","to_owned","try_from","try_into","type_id","vzip","AttachmentSpec","AttachmentUploadError","AttachmentUploadError","ContactDetails","Err","GroupDetails","IoError","MaximumRetriesLimitExceeded","MessageSender","MessageSenderError","NotFound","Ok","OutgoingPushMessage","OutgoingPushMessages","ProofRequired","ProtocolError","SendMessageResponse","SendMessageResult","SentMessage","ServiceError","ServiceError","UntrustedIdentity","blur_hash","borderless","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caption","clone","clone","clone_into","clone_into","content","content_type","deserialize","destination_device_id","destination_registration_id","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","height","into","into","into","into","into","into","into","into","length","messages","needs_sync","needs_sync","new","online","preview","recipient","recipient","send_contact_details","send_message","send_message_to_group","serialize","serialize","source","source","timestamp","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unidentified","upload_attachment","voice_note","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","address","options","token","uuid","InvalidUuid","NoUuid","ParseServiceAddressError","ServiceAddress","aci","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","eq","fmt","fmt","fmt","from","from","from","from","into","into","pni","serialize","source","to_owned","to_owned","to_protocol_address","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","uuid","vzip","vzip","SessionStoreExt","compute_safety_number","delete_all_sessions","delete_service_addr_device_session","delete_session","get_sub_device_sessions","AttachmentCipherError","decrypt_in_place","derive_key","encrypt_in_place","UnidentifiedAccess","borrow","borrow_mut","certificate","from","into","key","try_from","try_into","type_id","vzip","serde_base64","serde_optional_base64","serde_optional_private_key","serde_optional_public_key","serde_phone_number","serde_private_key","serde_public_key","serde_signaling_key","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","SignalRequestStream","SignalWebSocket","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","from_socket","get_attachment_v2_upload_attributes","into","into","is_closed","is_used","poll_next","request","send_messages","send_messages_unidentified","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_request_stream"],"q":[[0,"libsignal_service"],[106,"libsignal_service::attachment_cipher"],[123,"libsignal_service::cipher"],[139,"libsignal_service::configuration"],[213,"libsignal_service::content"],[299,"libsignal_service::envelope"],[323,"libsignal_service::groups_v2"],[565,"libsignal_service::groups_v2::GroupChange"],[573,"libsignal_service::groups_v2::utils"],[574,"libsignal_service::messagepipe"],[628,"libsignal_service::models"],[687,"libsignal_service::pre_keys"],[767,"libsignal_service::prelude"],[982,"libsignal_service::profile_cipher"],[1017,"libsignal_service::profile_name"],[1044,"libsignal_service::profile_service"],[1055,"libsignal_service::proto"],[2291,"libsignal_service::proto::access_control"],[2316,"libsignal_service::proto::attachment_pointer"],[2358,"libsignal_service::proto::body_range"],[2403,"libsignal_service::proto::call_message"],[2547,"libsignal_service::proto::call_message::hangup"],[2572,"libsignal_service::proto::call_message::offer"],[2594,"libsignal_service::proto::call_message::opaque"],[2616,"libsignal_service::proto::contact_details"],[2637,"libsignal_service::proto::data_message"],[2890,"libsignal_service::proto::data_message::contact"],[3026,"libsignal_service::proto::data_message::contact::email"],[3050,"libsignal_service::proto::data_message::contact::phone"],[3074,"libsignal_service::proto::data_message::contact::postal_address"],[3097,"libsignal_service::proto::data_message::payment"],[3177,"libsignal_service::proto::data_message::payment::activation"],[3199,"libsignal_service::proto::data_message::payment::amount"],[3236,"libsignal_service::proto::data_message::payment::notification"],[3273,"libsignal_service::proto::data_message::quote"],[3317,"libsignal_service::proto::envelope"],[3344,"libsignal_service::proto::group_attribute_blob"],[3365,"libsignal_service::proto::group_change"],[3407,"libsignal_service::proto::group_change::actions"],[3823,"libsignal_service::proto::group_changes"],[3842,"libsignal_service::proto::group_context"],[3886,"libsignal_service::proto::group_details"],[3926,"libsignal_service::proto::group_invite_link"],[3963,"libsignal_service::proto::member"],[3986,"libsignal_service::proto::pack"],[4009,"libsignal_service::proto::payment_address"],[4048,"libsignal_service::proto::receipt_message"],[4071,"libsignal_service::proto::sender_certificate"],[4099,"libsignal_service::proto::server_certificate"],[4120,"libsignal_service::proto::story_message"],[4139,"libsignal_service::proto::sync_message"],[4540,"libsignal_service::proto::sync_message::call_event"],[4612,"libsignal_service::proto::sync_message::call_log_event"],[4633,"libsignal_service::proto::sync_message::fetch_latest"],[4657,"libsignal_service::proto::sync_message::message_request_response"],[4682,"libsignal_service::proto::sync_message::outgoing_payment"],[4731,"libsignal_service::proto::sync_message::request"],[4757,"libsignal_service::proto::sync_message::sent"],[4800,"libsignal_service::proto::sync_message::sticker_pack_operation"],[4822,"libsignal_service::proto::text_attachment"],[4892,"libsignal_service::proto::typing_message"],[4914,"libsignal_service::proto::unidentified_sender_message"],[4943,"libsignal_service::proto::unidentified_sender_message::message"],[4990,"libsignal_service::proto::verified"],[5013,"libsignal_service::proto::web_socket_message"],[5036,"libsignal_service::provisioning"],[5126,"libsignal_service::provisioning::ProvisioningError"],[5129,"libsignal_service::push_service"],[5695,"libsignal_service::push_service::ServiceError"],[5703,"libsignal_service::receiver"],[5719,"libsignal_service::sender"],[5859,"libsignal_service::sender::MessageSenderError"],[5863,"libsignal_service::service_address"],[5906,"libsignal_service::session_store"],[5912,"libsignal_service::sticker_cipher"],[5916,"libsignal_service::unidentified_access"],[5927,"libsignal_service::utils"],[5935,"libsignal_service::utils::serde_base64"],[5937,"libsignal_service::utils::serde_optional_base64"],[5939,"libsignal_service::utils::serde_optional_private_key"],[5941,"libsignal_service::utils::serde_optional_public_key"],[5943,"libsignal_service::utils::serde_phone_number"],[5945,"libsignal_service::utils::serde_private_key"],[5947,"libsignal_service::utils::serde_public_key"],[5949,"libsignal_service::utils::serde_signaling_key"],[5951,"libsignal_service::websocket"],[5981,"libsignal_protocol::curve"],[5982,"alloc::string"],[5983,"core::result"],[5984,"serde::de"],[5985,"core::fmt"],[5986,"core::fmt"],[5987,"url"],[5988,"libsignal_protocol::storage::traits"],[5989,"core::option"],[5990,"serde::ser"],[5991,"core::error"],[5992,"core::any"],[5993,"libsignal_protocol::curve"],[5994,"rand_core"],[5995,"libsignal_protocol::address"],[5996,"core::convert"],[5997,"std::io"],[5998,"core::marker"],[5999,"alloc::vec"],[6000,"core::clone"],[6001,"libsignal_protocol::address"],[6002,"bincode::error"],[6003,"zkgroup::common::errors"],[6004,"zkgroup::common::errors"],[6005,"zkgroup::api::server_params"],[6006,"std::collections::hash::map"],[6007,"bytes::bytes"],[6008,"core::future::future"],[6009,"alloc::boxed"],[6010,"core::pin"],[6011,"futures_core::stream"],[6012,"serde::de"],[6013,"libsignal_protocol::state::signed_prekey"],[6014,"libsignal_protocol::state::kyber_prekey"],[6015,"uuid::fmt"],[6016,"uuid::fmt"],[6017,"bytes::buf::buf_impl"],[6018,"core::default"],[6019,"zkgroup::api::groups::profile_key_ciphertext"],[6020,"libsignal_protocol::address"],[6021,"libsignal_protocol::address"],[6022,"core::iter::traits::collect"],[6023,"zkgroup::crypto::uid_struct"],[6024,"core::fmt"],[6025,"zkgroup::api::profiles::profile_key_version"],[6026,"zkgroup::api::groups::group_params"],[6027,"uuid::timestamp"],[6028,"uuid"],[6029,"uuid"],[6030,"core::borrow"],[6031,"core::str::error"],[6032,"core::cmp"],[6033,"prost::encoding"],[6034,"url::parser"],[6035,"base64::decode"],[6036,"libsignal_protocol::address"],[6037,"std::io::error"],[6038,"core::marker"],[6039,"core::task::wake"],[6040,"core::task::poll"],[6041,"core::ops::function"]],"d":["","GROUP_LEAVE_FLAG signals that this message is a group …","GROUP_UPDATE_FLAG signals that this message updates the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Everything needed to support Signal Groups v2","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Link a new device, given a tsurl.","","","","","","","","","","","","","","","","","","","","Set profile attributes","","","","Upload a proof-required reCaptcha token and response.","","","","","","","","","","","","","","","","","Update (encrypted) device name","Checks the availability of pre-keys, and updates them as …","Upload a profile","Upload a profile","","","","","","","","","","","","","Decrypts an attachment in place, given the key material.","Encrypts an attachment in place, given the key material.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Decrypts incoming messages and encrypts outgoing messages.","","","","","","Returns the argument unchanged.","Equivalent of …","Calls <code>U::from(self)</code>.","","Opens (“decrypts”) an envelope.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Converts a proto::Content into a public Content, including …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","A unique UUID for this specific message, produced by the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Global cache for groups v2 credentials, as demonstrated in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Get an entry of the cache, key usually represents the day …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Overwrite the entire contents of the cache with new data.","","","","","","","","","","Given a 16-byte GroupV1 ID, derive the migration key.","","","","","","","WebSocketService that panics on every request, mainly for …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the stream of <code>Envelope</code>s","","","","","","","","","","","","","","","","","","Return a SignalWebSocket for sending messages and other …","Attachment represents an attachment received from a peer","Mirror of the protobuf ContactDetails message but with …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Stores the ID of keys published ahead of time","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","ID of the next PQ pre key","ID of the next pre key","ID of the next signed pre key","","","","","","","","","","","set the ID of the next PQ pre key","set the ID of the next pre key","set the ID of the next signed pre key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type used in memory to represent a <em>device</em>, i.e. a …","","","","","","","","","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","","","A Protocol Buffers message.","","","","","","","","","","","","A Universally Unique Identifier (UUID).","A general error that can occur when working with UUIDs.","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","","Get a borrowed <code>Simple</code> formatter.","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","","","","","","","","","","","","","Get a <code>Braced</code> formatter.","","Clears the message, resetting all fields to their default.","","","","","","","","","","","","","","","","Decodes an instance of the message from a buffer.","Decodes a length-delimited instance of the message from …","","","","","","","","","","","","","Encodes the message to a buffer.","A buffer that can be used for <code>encode_...</code> calls, that is …","","","Encodes the message with a length-delimiter to a buffer.","Encodes the message with a length-delimiter to a newly …","Encodes the message to a newly allocated buffer.","Returns the encoded length of the message without a length …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Creates a UUID from four field values.","Creates a UUID from four field values in little-endian …","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","","","","","","","","","If the UUID is the correct version (v1, v6, or v7) this …","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","","","","Get a <code>Hyphenated</code> formatter.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes self and returns the underlying byte value of the …","Tests if the UUID is max (all ones).","Tests if the UUID is nil (all zeros).","The ‘max UUID’ (all ones).","Decodes an instance of the message from a buffer, and …","Decodes a length-delimited instance of the message from …","","The ‘nil UUID’ (all zeros).","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","Get a <code>Simple</code> formatter.","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","","","Returns a 128bit little-endian value containing the value.","","","","","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","Get a <code>Urn</code> formatter.","","","","","","","","","Encrypt and decrypt a <code>ProfileName</code> and other profile …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Copying deserialization of a ProfileName.","Zero-copy deserialization of a ProfileName.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>AccessControl</code>.","","Returns the value of <code>aci</code>, or the default value if <code>aci</code> is …","Returns the value of <code>aci</code>, or the default value if <code>aci</code> is …","","","Returns the value of <code>aci_identity_key_private</code>, or the …","","Returns the value of <code>aci_identity_key_public</code>, or the …","","","Returns the enum value of <code>action</code>, or the default if the …","","","Returns the value of <code>active</code>, or the default value if <code>active</code>…","","Returns the enum value of <code>add_from_invite_link</code>, or the …","Returns the enum value of <code>add_from_invite_link</code>, or the …","","","","","","Returns the value of <code>allows_replies</code>, or the default value …","","","","Returns the value of <code>archived</code>, or the default value if …","Returns the value of <code>archived</code>, or the default value if …","","","","","","Nested message and enum types in <code>AttachmentPointer</code>.","","Returns the enum value of <code>attributes</code>, or the default if …","","Returns the value of <code>author</code>, or the default value if <code>author</code>…","","","","","","","","","Returns the value of <code>blocked</code>, or the default value if …","Returns the value of <code>blocked</code>, or the default value if …","","","","Returns the value of <code>blur_hash</code>, or the default value if …","","Returns the value of <code>body</code>, or the default value if <code>body</code> is …","Returns the value of <code>body</code>, or the default value if <code>body</code> is …","Returns the value of <code>body</code>, or the default value if <code>body</code> is …","Returns the value of <code>body</code>, or the default value if <code>body</code> is …","","","Encrypted ProvisionMessage","","Nested message and enum types in <code>BodyRange</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>CallMessage</code>.","","Returns the value of <code>caption</code>, or the default value if …","","Returns the value of <code>cdn_number</code>, or the default value if …","Next ID: 18","Returns the value of <code>certificate</code>, or the default value if …","Returns the value of <code>certificate</code>, or the default value if …","","","","Returns the value of <code>ciphertext</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>color</code>, or the default value if <code>color</code> …","Returns the value of <code>color</code>, or the default value if <code>color</code> …","","","","","Nested message and enum types in <code>ContactDetails</code>.","","Returns the value of <code>content</code>, or the default value if …","Contains an encrypted Content","","Returns the value of <code>content_type</code>, or the default value if …","","","","","Nested message and enum types in <code>DataMessage</code>.","","","Returns the value of <code>date</code>, or the default value if <code>date</code> is …","","","","Returns the value of <code>decryption_error_message</code>, or the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>description</code>, or the default value if …","","","","Returns the value of <code>destination_aci</code>, or the default value …","","Returns the value of <code>destination_device_id</code>, or the default …","","Returns the value of <code>destination_service_id</code>, or the …","","Returns the value of <code>device_id</code>, or the default value if …","","Returns the value of <code>digest</code>, or the default value if <code>digest</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>encrypted_message</code>, or the default …","","Returns the value of <code>encrypted_static</code>, or the default …","","Nested message and enum types in <code>Envelope</code>.","Returns the value of <code>ephemeral_public</code>, or the default …","Returns the value of <code>ephemeral_public</code>, or the default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>expire_timer</code>, or the default value if …","Returns the value of <code>expire_timer</code>, or the default value if …","Returns the value of <code>expire_timer</code>, or the default value if …","","","","","Returns the value of <code>file_name</code>, or the default value if …","","Returns the value of <code>flags</code>, or the default value if <code>flags</code> …","Returns the value of <code>flags</code>, or the default value if <code>flags</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>ProvisioningVersion</code>, or <code>None</code> if <code>value</code> …","Equivalent of …","","","Nested message and enum types in <code>GroupAttributeBlob</code>.","","Nested message and enum types in <code>GroupChange</code>.","Returns the value of <code>group_change</code>, or the default value if …","","Nested message and enum types in <code>GroupChanges</code>.","","Nested message and enum types in <code>GroupContext</code>.","Nested message and enum types in <code>GroupDetails</code>.","Returns the value of <code>group_id</code>, or the default value if …","","Nested message and enum types in <code>GroupInviteLink</code>.","","","","","","","","","Returns the value of <code>height</code>, or the default value if <code>height</code>…","","","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","","","","","Returns the value of <code>identity_key</code>, or the default value if …","","","Returns the value of <code>inbox_position</code>, or the default value …","Returns the value of <code>inbox_position</code>, or the default value …","","","Returns the value of <code>incremental_digest</code>, or the default …","","Returns the value of <code>incremental_mac_chunk_size</code>, or the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Equivalent of …","","Equivalent of …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>ProvisioningVersion</code>.","Returns the value of <code>is_view_once</code>, or the default value if …","","","Returns the value of <code>key</code>, or the default value if <code>key</code> is …","","","","","Returns the value of <code>length</code>, or the default value if <code>length</code>…","","Returns the value of <code>master_key</code>, or the default value if …","","Nested message and enum types in <code>Member</code>.","","","Returns the enum value of <code>members</code>, or the default if the …","","","","","","","Returns the value of <code>message</code>, or the default value if …","","","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","","","","Returns the value of <code>null_message</code>, or the default value if …","","","Returns the value of <code>number</code>, or the default value if <code>number</code>…","Returns the value of <code>number</code>, or the default value if <code>number</code>…","","","","","","Nested message and enum types in <code>Pack</code>.","Returns the value of <code>padding</code>, or the default value if …","Returns the value of <code>padding</code>, or the default value if …","","","","Returns the value of <code>path</code>, or the default value if <code>path</code> is …","","","Nested message and enum types in <code>PaymentAddress</code>.","","","Returns the value of <code>pni</code>, or the default value if <code>pni</code> is …","Returns the value of <code>pni</code>, or the default value if <code>pni</code> is …","","","","Returns the value of <code>pni_identity_key_private</code>, or the …","","Returns the value of <code>pni_identity_key_public</code>, or the …","","","","","","","","Returns the value of <code>profile_key</code>, or the default value if …","Returns the value of <code>profile_key</code>, or the default value if …","Returns the value of <code>profile_key</code>, or the default value if …","Returns the value of <code>profile_key</code>, or the default value if …","","","","","","","Returns the value of <code>provisioning_code</code>, or the default …","","Returns the value of <code>provisioning_version</code>, or the default …","NEXT ID: 13","Returns the value of <code>public_key</code>, or the default value if …","","","","","Returns the value of <code>ratchet_key</code>, or the default value if …","","","","Returns the value of <code>read_receipts</code>, or the default value …","","Nested message and enum types in <code>ReceiptMessage</code>.","","Returns the value of <code>reporting_token</code>, or the default value …","NEXT ID: 18","","","","Returns the value of <code>required_protocol_version</code>, or the …","","","Returns the value of <code>revision</code>, or the default value if …","","","","Returns the enum value of <code>role</code>, or the default if the …","","Nested message and enum types in <code>SenderCertificate</code>.","Returns the value of <code>sender_key_distribution_message</code>, or …","","","Nested message and enum types in <code>ServerCertificate</code>.","Returns the value of <code>server_guid</code>, or the default value if …","","","Returns the value of <code>server_timestamp</code>, or the default …","","Sets <code>action</code> to the provided enum value.","Sets <code>add_from_invite_link</code> to the provided enum value.","Sets <code>add_from_invite_link</code> to the provided enum value.","Sets <code>attributes</code> to the provided enum value.","Sets <code>members</code> to the provided enum value.","Sets <code>role</code> to the provided enum value.","Sets <code>state</code> to the provided enum value.","Sets <code>text_style</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Returns the value of <code>signature</code>, or the default value if …","Returns the value of <code>signature</code>, or the default value if …","Returns the value of <code>signature</code>, or the default value if …","","","","","Returns the value of <code>size</code>, or the default value if <code>size</code> is …","","","Returns the value of <code>source_device</code>, or the default value …","","Returns the value of <code>source_service_id</code>, or the default …","","Returns the value of <code>start</code>, or the default value if <code>start</code> …","","Returns the enum value of <code>state</code>, or the default if the …","","Returns the value of <code>status</code>, or the default value if <code>status</code>…","","","","","Returns the value of <code>story</code>, or the default value if <code>story</code> …","","","Nested message and enum types in <code>StoryMessage</code>.","","Nested message and enum types in <code>SyncMessage</code>.","","Returns the value of <code>synthetic_iv</code>, or the default value if …","","Returns the value of <code>target_sent_timestamp</code>, or the default …","","Returns the value of <code>text</code>, or the default value if <code>text</code> is …","","Nested message and enum types in <code>TextAttachment</code>.","Returns the value of <code>text_background_color</code>, or the default …","","Returns the value of <code>text_foreground_color</code>, or the default …","integer representation of hex color","Returns the enum value of <code>text_style</code>, or the default if …","","Returns the value of <code>thumbnail</code>, or the default value if …","","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","","","","","","","","","Returns the value of <code>title</code>, or the default value if <code>title</code> …","Returns the value of <code>title</code>, or the default value if <code>title</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>TypingMessage</code>.","","Nested message and enum types in <code>UnidentifiedSenderMessage</code>.","Returns the value of <code>upload_timestamp</code>, or the default …","","Returns the value of <code>urgent</code>, or the default value if <code>urgent</code>…","","Returns the value of <code>url</code>, or the default value if <code>url</code> is …","","Returns the value of <code>user_agent</code>, or the default value if …","","","","","Returns the value of <code>uuid</code>, or the default value if <code>uuid</code> is …","","Returns the value of <code>verb</code>, or the default value if <code>verb</code> is …","","Nested message and enum types in <code>Verified</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>WebSocketMessage</code>.","Returns the value of <code>width</code>, or the default value if <code>width</code> …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>AccessRequired</code>, or <code>None</code> if <code>value</code> is …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>AccessRequired</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Flags</code>, or <code>None</code> if <code>value</code> is not a …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Flags</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Style</code>, or <code>None</code> if <code>value</code> is not a …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Style</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>data</code>, or the default value if <code>data</code> is …","","","","","","","","Returns the value of <code>device_id</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Nested message and enum types in <code>Hangup</code>.","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>line</code>, or the default value if <code>line</code> is …","Legacy/deprecated; remove when old clients are gone.","Returns the value of <code>mid</code>, or the default value if <code>mid</code> is …","Legacy/deprecated; remove when old clients are gone.","Nested message and enum types in <code>Offer</code>.","Nested message and enum types in <code>Opaque</code>.","Returns the value of <code>opaque</code>, or the default value if <code>opaque</code>…","Returns the value of <code>opaque</code>, or the default value if <code>opaque</code>…","Returns the value of <code>opaque</code>, or the default value if <code>opaque</code>…","","","","Returns the value of <code>sdp</code>, or the default value if <code>sdp</code> is …","Returns the value of <code>sdp</code>, or the default value if <code>sdp</code> is …","Returns the value of <code>sdp</code>, or the default value if <code>sdp</code> is …","Legacy/deprecated; replaced by ‘opaque’","Legacy/deprecated; replaced by ‘opaque’","Legacy/deprecated; replaced by ‘opaque’","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>urgency</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","Returns the enum value of <code>urgency</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Urgency</code>, or <code>None</code> if <code>value</code> is not a …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Urgency</code>.","","","","","","","","","","","","","Returns the value of <code>content_type</code>, or the default value if …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the value of <code>length</code>, or the default value if <code>length</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>author_aci</code>, or the default value if …","Returns the value of <code>author_aci</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>Contact</code>.","","","","","","","","","","","","","","Returns the value of <code>emoji</code>, or the default value if <code>emoji</code> …","Returns the value of <code>emoji</code>, or the default value if <code>emoji</code> …","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>era_id</code>, or the default value if <code>era_id</code>…","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Flags</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>ProtocolVersion</code>, or <code>None</code> if <code>value</code> is …","","","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Flags</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ProtocolVersion</code>.","","","","Returns the value of <code>organization</code>, or the default value if …","","Returns the value of <code>pack_id</code>, or the default value if …","","Returns the value of <code>pack_key</code>, or the default value if …","","","","Nested message and enum types in <code>Payment</code>.","Nested message and enum types in <code>Quote</code>.","Returns the value of <code>receipt_credential_presentation</code>, or …","","Returns the value of <code>remove</code>, or the default value if <code>remove</code>…","","Returns the value of <code>sent_timestamp</code>, or the default value …","","Sets <code>type</code> to the provided enum value.","Returns the value of <code>sticker_id</code>, or the default value if …","","Returns the value of <code>target_author_aci</code>, or the default …","","Returns the value of <code>target_sent_timestamp</code>, or the default …","Returns the value of <code>target_sent_timestamp</code>, or the default …","","","Returns the value of <code>text</code>, or the default value if <code>text</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>city</code>, or the default value if <code>city</code> is …","","","","","","","","","","","","","","","","","Returns the value of <code>country</code>, or the default value if …","","","","","","","Returns the value of <code>display_name</code>, or the default value if …","","Nested message and enum types in <code>Email</code>.","","","","","","","","","","","Returns the value of <code>family_name</code>, or the default value if …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of <code>given_name</code>, or the default value if …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>is_profile</code>, or the default value if …","","Returns the value of <code>label</code>, or the default value if <code>label</code> …","Returns the value of <code>label</code>, or the default value if <code>label</code> …","Returns the value of <code>label</code>, or the default value if <code>label</code> …","","","","Returns the value of <code>middle_name</code>, or the default value if …","","Returns the value of <code>neighborhood</code>, or the default value if …","","Nested message and enum types in <code>Phone</code>.","Returns the value of <code>pobox</code>, or the default value if <code>pobox</code> …","","Nested message and enum types in <code>PostalAddress</code>.","Returns the value of <code>postcode</code>, or the default value if …","","Returns the value of <code>prefix</code>, or the default value if <code>prefix</code>…","","Returns the value of <code>region</code>, or the default value if <code>region</code>…","","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Returns the value of <code>street</code>, or the default value if <code>street</code>…","","Returns the value of <code>suffix</code>, or the default value if <code>suffix</code>…","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","Returns the value of <code>value</code>, or the default value if <code>value</code> …","Returns the value of <code>value</code>, or the default value if <code>value</code> …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","Nested message and enum types in <code>Activation</code>.","Nested message and enum types in <code>Amount</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the value of <code>note</code>, or the default value if <code>note</code> is …","","Nested message and enum types in <code>Notification</code>.","Sets <code>type</code> to the provided enum value.","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the value of <code>pico_mob</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the value of <code>receipt</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>content_type</code>, or the default value if …","","","","","","","Returns the value of <code>file_name</code>, or the default value if …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Nested message and enum types in <code>Actions</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>add_from_invite_link_access</code>, or …","","","","","","","Returns the enum value of <code>attributes_access</code>, or the …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the enum value of <code>members_access</code>, or the default …","","Only set when receiving from server","Only set when sending to server","Only set when sending to server","Only set when sending to server","Only set when receiving from server","Only set when receiving from server","Only set when receiving from server","Returns the enum value of <code>role</code>, or the default if the …","Returns the enum value of <code>role</code>, or the default if the …","","","Sets <code>add_from_invite_link_access</code> to the provided enum …","Sets <code>attributes_access</code> to the provided enum value.","Sets <code>members_access</code> to the provided enum value.","Sets <code>role</code> to the provided enum value.","Sets <code>role</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only set when receiving from server","Only set when receiving from server","Only set when receiving from server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>e164</code>, or the default value if <code>e164</code> is …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>content_type</code>, or the default value if …","","","","Returns the value of <code>e164</code>, or the default value if <code>e164</code> is …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>length</code>, or the default value if <code>length</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Role</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Role</code>.","","","","","","","","","","","","","Returns the value of <code>content_type</code>, or the default value if …","","","Returns the value of <code>emoji</code>, or the default value if <code>emoji</code> …","","","","","Returns the argument unchanged.","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the value of <code>address</code>, or the default value if …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the value of <code>signature</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","Returns the value of <code>expires</code>, or the default value if …","","","Returns the argument unchanged.","Returns the value of <code>identity_key</code>, or the default value if …","","Calls <code>U::from(self)</code>.","Returns the value of <code>sender_device</code>, or the default value …","","Returns the value of <code>sender_e164</code>, or the default value if …","","Returns the value of <code>sender_uuid</code>, or the default value if …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","","Calls <code>U::from(self)</code>.","Returns the value of <code>key</code>, or the default value if <code>key</code> is …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>admin_pass_key</code>, or the default value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>CallEvent</code>.","Nested message and enum types in <code>CallLogEvent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>complete</code>, or the default value if …","","Returns the value of <code>conversation_id</code>, or the default value …","","","","","","","","","","","","","","","","","","","Returns the value of <code>destination_e164</code>, or the default …","","Returns the value of <code>destination_service_id</code>, or the …","","Returns the enum value of <code>direction</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>event</code>, or the default if the …","","Returns the value of <code>expiration_start_timestamp</code>, or the …","","Nested message and enum types in <code>FetchLatest</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of <code>group_id</code>, or the default value if …","","","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","","Returns the value of <code>identity_key_pair</code>, or the default …","Serialized libsignal-client IdentityKeyPair","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>is_recipient_update</code>, or the default …","","Returns the value of <code>last_resort_kyber_pre_key</code>, or the …","Serialized libsignal-client KyberPreKeyRecord","Returns the value of <code>link_previews</code>, or the default value …","","","Nested message and enum types in <code>MessageRequestResponse</code>.","Returns the value of <code>new_e164</code>, or the default value if …","The e164 we have changed our number to","Returns the value of <code>note</code>, or the default value if <code>note</code> is …","","","Nested message and enum types in <code>OutgoingPayment</code>.","Returns the value of <code>pack_id</code>, or the default value if …","","Returns the value of <code>pack_key</code>, or the default value if …","","","Returns the value of <code>provisioning_version</code>, or the default …","","Returns the value of <code>read_receipts</code>, or the default value …","","Returns the value of <code>recipient_service_id</code>, or the default …","","Returns the value of <code>registration_id</code>, or the default value …","","Nested message and enum types in <code>Request</code>.","Returns the value of <code>root_key</code>, or the default value if …","","Returns the value of <code>sender_aci</code>, or the default value if …","Returns the value of <code>sender_aci</code>, or the default value if …","Returns the value of <code>sender_aci</code>, or the default value if …","","","","Nested message and enum types in <code>Sent</code>.","Sets <code>direction</code> to the provided enum value.","Sets <code>event</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Returns the value of <code>signed_pre_key</code>, or the default value …","Serialized libsignal-client SignedPreKeyRecord","Nested message and enum types in <code>StickerPackOperation</code>.","Returns the value of <code>storage_service</code>, or the default value …","","","","Returns the value of <code>thread_aci</code>, or the default value if …","","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>typing_indicators</code>, or the default …","","Returns the value of <code>unidentified_delivery_indicators</code>, or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","Converts an <code>i32</code> to a <code>Direction</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>Event</code>, or <code>None</code> if <code>value</code> is not a …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Direction</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Event</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","Returns the value of <code>amount_pico_mob</code>, or the default value …","@required","","","","","","","","","","","","","","","","Returns the value of <code>fee_pico_mob</code>, or the default value if …","@required","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>ledger_block_index</code>, or the default …","@required","Returns the value of <code>ledger_block_timestamp</code>, or the …","","","","Returns the value of <code>receipt</code>, or the default value if …","","Returns the value of <code>recipient_address</code>, or the default …","","","","","","","","","","","","","GROUPS        = 2;","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>destination_service_id</code>, or the …","Returns the value of <code>destination_service_id</code>, or the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>is_allowed_to_reply</code>, or the default …","","","","","","","","","","Returns the value of <code>unidentified</code>, or the default value if …","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","Returns the value of <code>angle</code>, or the default value if <code>angle</code> …","degrees","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>end_color</code>, or the default value if …","deprecated: this field will be removed in a future release.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Style</code>, or <code>None</code> if <code>value</code> is not a …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Style</code>.","","","percent from 0 to 1","Returns the value of <code>start_color</code>, or the default value if …","deprecated: this field will be removed in a future release.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Action</code>, or <code>None</code> if <code>value</code> is not a …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Action</code>.","","","","","","","","","","","","","Returns the value of <code>content</code>, or the default value if …","","Returns the enum value of <code>content_hint</code>, or the default if …","","","","","","Returns the argument unchanged.","Returns the value of <code>group_id</code>, or the default value if …","","Calls <code>U::from(self)</code>.","Nested message and enum types in <code>Message</code>.","","Sets <code>content_hint</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","","","","Returns the enum value of <code>type</code>, or the default if the …","","","","","Show an error immediately; it was important but we can’t …","Don’t show any error UI at all; this is something sent …","Further cases should line up with Envelope.Type, even …","","","Sender will try to resend; delay any error UI if possible","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","Converts an <code>i32</code> to a <code>ContentHint</code>, or <code>None</code> if <code>value</code> is not …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ContentHint</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>State</code>, or <code>None</code> if <code>value</code> is not a …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>State</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Generate a random key pair","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Account Identity (ACI)","","This type is used in registration lock handling. It’s …","","","","","","","","","","","","","","","","","","","Since we can’t use format!() with constants, the URLs …","","","","","","","","","","","","","","Phone number identityetches a list of all devices tied to the authenticated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Request AttachmentV2UploadAttributes","Downloads larger files in streaming fashion, e.g. …","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Upload larger file to CDN0 in legacy fashion, e.g. for …","","","","","","","","","","","","","Request a verification code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Upload attachment to CDN","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Method used to check our own UUID","Writes a profile and returns the avatar URL, if one was …","","","","","","","","","","Equivalent of Java’s <code>SignalServiceMessageReceiver</code>.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","One-off method to receive all pending messages.","","","","","","Attachment specification to be used for uploading.","","","","Contains the error value","","","","Equivalent of Java’s <code>SignalServiceMessageSender</code>.","","","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Upload contact details to the CDN and send a sync message","Send a message <code>content</code> to a single <code>recipient</code>.","Send a message to the recipients in a group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encrypts and uploads an attachment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","This is additional functions required to handle session …","","Remove the session records corresponding to all devices of …","Remove a session record for a recipient ID + device ID …","Remove a session record for a recipient ID + device ID …","Get the IDs of all known sub devices with active sessions …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A dispatching web socket client for the Signal web socket …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,12,12,0,0,0,9,0,12,12,9,12,0,1,1,0,16,9,12,1,16,9,12,1,0,1,1,0,0,0,1,1,0,9,9,12,12,1,16,9,9,9,12,12,12,12,1,0,16,9,12,1,16,0,0,1,16,0,0,0,0,0,0,0,0,0,0,16,0,1,0,0,16,9,12,0,16,1,9,12,16,9,12,1,16,9,12,1,16,9,12,1,0,16,16,16,16,0,16,9,12,1,0,0,0,45,45,45,45,0,0,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,0,46,46,46,46,46,46,46,46,59,59,0,60,59,0,0,0,0,60,59,19,19,58,58,19,60,59,58,19,60,59,58,58,19,60,58,19,60,60,19,19,60,60,59,58,58,58,19,60,59,60,58,19,60,59,19,19,19,19,60,19,58,19,60,60,58,19,60,59,58,19,60,59,58,19,60,59,58,58,19,60,59,58,0,0,0,62,0,0,0,62,0,0,62,0,0,0,0,0,62,0,62,0,0,62,0,0,62,0,62,0,62,56,61,56,62,61,56,62,61,56,62,61,56,62,61,56,62,61,56,62,62,62,62,62,62,62,62,62,62,56,56,61,56,62,62,56,61,61,61,61,0,61,61,56,62,61,56,62,61,56,62,61,56,62,61,61,56,62,0,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,83,83,83,89,0,0,83,83,83,83,0,0,0,0,0,0,83,83,0,83,83,83,83,83,83,89,0,83,83,89,75,0,0,83,83,75,89,89,89,89,81,80,78,80,81,87,75,76,77,78,79,80,81,82,83,84,89,87,75,76,77,78,79,80,81,82,83,84,89,82,90,76,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,0,87,76,81,77,78,79,80,81,84,81,84,82,77,78,79,80,81,84,87,75,75,77,78,79,80,81,82,83,84,89,89,87,75,76,77,78,79,80,81,82,83,84,89,89,89,89,89,90,76,87,87,87,75,76,77,78,79,80,81,82,83,84,89,81,77,80,81,87,81,77,79,81,87,81,82,77,78,77,78,79,80,81,84,89,78,79,81,77,78,79,80,81,82,83,84,75,89,87,75,76,77,78,79,80,80,81,82,83,84,89,87,75,76,77,78,79,80,81,82,83,84,89,87,75,76,77,78,79,80,81,82,83,84,89,0,77,78,79,87,75,76,77,78,79,80,81,82,83,84,89,90,76,378,379,380,381,380,378,379,381,0,0,103,0,382,382,0,0,103,0,373,0,0,0,0,0,382,105,110,103,382,105,110,103,103,382,105,110,103,105,382,105,110,103,373,110,105,382,105,110,103,382,105,110,103,382,105,110,103,382,105,110,103,0,105,0,0,116,116,116,0,116,116,114,114,114,112,114,116,112,114,116,114,112,112,114,114,112,114,116,116,112,114,116,116,116,114,114,112,114,116,114,114,114,114,112,112,114,116,116,112,114,116,112,114,116,112,114,116,114,114,112,114,116,0,0,0,0,0,0,120,121,123,122,124,120,121,123,122,124,120,121,122,120,121,123,122,124,120,121,123,122,124,124,120,121,123,122,124,120,121,122,33,33,33,124,124,124,120,121,122,120,123,122,124,33,33,33,121,122,124,120,120,121,123,123,122,122,124,120,121,123,122,124,120,121,123,122,124,120,121,123,122,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,51,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,117,51,48,102,97,21,117,51,48,102,97,21,51,21,354,117,51,48,102,97,21,117,51,48,102,97,21,51,48,21,354,354,97,97,97,97,51,102,21,97,51,102,97,21,354,51,51,51,354,354,354,354,97,97,97,97,97,97,117,51,48,117,117,51,51,51,51,48,48,117,51,51,51,51,51,51,48,48,102,97,21,51,51,51,51,51,51,51,51,51,51,51,97,21,21,21,97,97,21,97,51,51,51,51,117,51,48,51,117,51,48,102,97,21,51,51,51,51,354,354,102,51,51,51,48,0,51,102,97,21,51,51,51,117,51,48,102,97,21,117,51,48,51,117,51,51,51,48,102,97,21,117,51,48,102,97,21,51,51,117,51,48,102,97,21,51,117,51,48,102,97,21,13,13,0,0,13,156,13,156,13,156,156,156,156,156,156,156,13,13,156,156,13,13,156,13,156,13,13,156,13,156,13,156,13,156,13,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,160,160,160,160,160,160,160,160,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,0,0,0,0,0,0,0,0,86,162,118,162,118,162,162,162,162,184,66,66,189,164,164,100,166,100,166,186,182,184,71,71,86,70,118,164,118,164,177,71,168,0,67,100,100,167,167,181,118,164,86,166,179,86,118,164,63,118,164,168,168,169,170,171,67,169,170,171,67,0,67,71,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,70,63,63,63,0,73,168,168,168,168,172,173,172,173,189,4,4,169,170,174,172,173,175,167,176,171,162,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,194,118,164,118,164,63,67,0,63,55,55,191,168,168,192,167,184,0,73,65,178,178,184,55,73,73,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,67,178,178,86,166,180,180,70,70,55,55,183,183,168,168,86,73,169,170,174,172,173,175,167,176,171,162,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,175,175,175,175,0,175,4,175,4,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,67,118,164,67,118,164,63,168,168,67,168,67,168,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,194,170,67,71,0,67,0,88,88,0,190,0,0,66,66,0,67,70,71,67,71,194,169,170,168,168,70,169,170,181,164,169,170,181,164,180,180,178,118,164,118,164,168,168,168,168,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,86,55,169,67,55,169,55,169,55,67,55,55,194,67,67,185,168,168,184,63,70,177,177,88,88,0,186,166,100,181,164,100,86,181,164,170,170,63,181,118,164,181,118,164,180,73,180,162,118,162,118,70,70,63,0,64,63,64,63,194,169,169,67,0,166,86,162,68,162,68,63,162,162,162,162,73,184,185,187,67,179,162,67,71,118,162,67,71,118,185,187,162,162,162,162,171,171,86,166,67,183,183,67,63,162,162,0,73,55,55,174,63,86,67,67,174,88,88,86,166,185,185,0,73,73,63,0,55,55,189,55,55,66,100,166,100,100,185,180,179,174,55,69,181,172,173,68,172,173,68,184,168,168,55,55,55,55,55,177,177,180,180,170,170,67,63,167,55,55,67,0,73,0,73,4,4,65,65,179,179,0,179,179,179,179,179,179,168,168,55,67,66,183,55,67,69,66,183,186,187,188,167,178,167,178,86,166,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,193,169,170,174,172,173,175,167,176,171,162,194,55,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,174,55,69,181,174,55,69,181,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,0,73,0,168,168,55,55,178,178,162,162,185,187,188,176,176,169,169,0,63,118,63,63,169,170,174,172,173,175,167,176,171,162,194,55,73,70,177,67,64,69,66,71,178,179,180,63,168,181,88,118,164,182,183,68,65,4,184,185,186,187,188,100,86,189,190,191,192,166,193,0,168,168,63,0,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,0,204,205,205,0,204,204,204,205,204,205,204,205,204,205,204,204,205,205,204,205,204,205,204,205,204,204,204,205,204,205,204,204,205,204,205,204,205,204,205,204,205,0,208,208,209,208,208,208,208,0,209,208,209,208,209,208,209,208,209,208,208,209,209,208,209,208,209,208,209,208,208,208,209,208,209,208,208,209,208,209,208,209,208,209,208,209,0,0,0,0,0,0,210,211,212,213,214,215,210,211,212,213,214,215,210,211,212,213,214,215,210,211,212,213,214,215,210,211,212,213,214,215,215,215,210,211,212,213,214,215,214,214,210,211,212,213,214,215,210,211,212,213,214,215,210,211,212,213,214,215,210,211,212,213,214,215,0,210,211,212,213,214,210,211,212,213,214,210,211,212,213,214,215,212,212,212,212,0,0,210,211,212,210,211,212,210,211,212,210,211,212,210,214,215,210,211,212,213,214,215,210,211,212,213,214,215,210,211,212,213,214,215,210,214,210,214,210,211,212,213,214,215,215,215,210,211,212,213,214,215,217,217,217,217,217,0,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,216,216,0,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,218,218,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,0,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,230,0,0,229,229,0,0,0,230,230,230,0,230,229,0,0,0,230,0,0,230,230,222,220,220,221,220,221,222,220,220,222,223,224,225,226,221,227,228,229,230,220,222,223,224,225,226,221,227,228,229,230,220,222,223,224,225,226,221,227,228,220,222,223,224,225,226,221,227,228,229,230,220,222,223,224,225,226,221,227,228,229,230,229,230,0,223,220,222,223,224,225,226,221,227,228,229,230,222,223,224,223,224,220,222,223,224,225,226,221,227,228,220,222,223,224,225,226,221,227,228,229,230,226,226,220,222,223,224,225,226,221,227,228,229,230,220,222,223,224,225,226,221,227,228,229,230,229,230,229,230,220,220,220,222,223,224,225,226,221,227,228,229,230,229,230,227,222,222,222,222,223,223,223,223,229,230,0,0,228,228,224,224,221,221,220,223,223,224,224,224,225,224,225,220,220,220,222,223,224,225,226,221,227,228,229,230,220,222,223,224,225,226,221,227,228,229,230,220,222,223,224,225,226,221,227,228,229,230,220,220,220,222,223,224,225,226,221,227,228,229,230,220,222,223,224,225,226,221,227,228,229,230,0,0,0,0,0,236,233,234,235,232,236,233,234,235,232,236,232,232,233,234,235,232,236,233,234,235,232,236,233,234,235,232,236,232,232,233,234,235,232,236,233,233,0,233,234,235,232,236,233,234,235,232,236,233,233,233,234,235,232,236,233,234,235,232,236,233,233,233,234,235,232,236,236,236,234,235,232,234,235,232,233,233,232,232,0,232,232,0,232,232,233,233,232,232,234,235,232,232,232,233,233,233,234,235,232,236,233,234,235,232,236,233,234,235,232,236,234,235,232,234,235,232,233,234,235,232,236,234,235,234,235,233,234,235,232,236,238,238,238,0,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,237,237,237,0,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,239,239,0,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,243,0,0,0,243,0,0,240,240,241,242,243,240,241,242,243,240,241,242,240,241,242,243,240,241,242,243,240,241,242,243,240,241,242,243,240,241,242,243,240,241,242,243,240,241,242,243,240,241,242,243,243,241,241,0,242,240,241,242,243,241,240,241,242,243,240,241,242,243,242,242,240,241,242,243,240,241,242,243,244,244,0,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,0,0,246,245,246,245,246,245,245,246,245,246,245,246,245,246,245,246,245,246,245,246,245,246,246,245,245,245,246,245,246,245,246,245,246,245,246,0,248,0,247,248,247,248,247,247,248,247,248,247,248,247,248,247,248,247,248,247,248,247,248,248,247,247,247,248,247,248,247,248,247,248,247,248,231,231,0,0,249,231,249,231,249,249,231,249,231,231,249,249,249,231,249,249,231,249,249,249,231,249,231,231,231,249,231,231,231,249,249,231,249,231,249,231,249,231,249,231,201,201,201,201,201,0,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,250,0,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,0,0,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,252,254,258,262,265,273,253,253,269,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,255,259,263,266,268,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,272,254,271,271,261,257,260,261,257,260,261,256,264,256,264,252,253,271,256,264,270,267,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,256,257,260,261,264,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,253,271,252,272,273,0,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,203,0,203,203,0,203,203,275,203,275,203,275,275,203,275,203,203,275,203,275,275,275,275,203,275,203,275,203,203,203,275,203,203,203,275,203,275,203,275,203,275,203,275,203,0,0,276,277,276,277,276,277,276,277,276,277,276,276,276,277,277,277,276,277,276,277,276,277,276,277,276,277,276,276,276,277,276,277,276,277,276,277,276,277,0,0,279,278,279,278,279,278,278,279,278,279,278,279,278,279,278,279,278,279,278,279,278,278,279,278,279,278,279,278,279,278,279,278,279,278,279,197,197,0,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,0,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,0,0,282,281,281,281,282,281,282,281,281,282,281,282,281,282,281,282,281,282,281,282,281,282,281,282,282,281,281,281,282,281,282,281,282,281,282,281,282,202,202,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,0,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,0,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,0,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,289,286,286,288,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,0,0,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,288,288,301,301,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,287,287,287,301,301,287,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,301,301,287,287,0,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,298,298,289,301,301,300,300,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,287,300,300,293,293,287,0,300,300,299,299,289,0,294,294,294,294,299,293,293,293,293,299,299,300,300,0,286,286,291,292,295,291,292,295,0,301,301,290,294,296,298,301,302,300,300,0,297,297,287,287,298,298,287,291,292,295,301,302,287,291,292,295,301,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,290,294,296,298,301,302,290,294,296,298,301,302,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,293,293,293,293,287,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,286,302,304,309,309,304,0,0,309,303,304,303,0,304,303,309,309,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,309,303,304,310,0,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,307,307,307,0,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,308,308,308,308,0,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,0,312,0,311,311,311,312,311,312,311,311,312,311,312,311,312,311,312,311,312,311,311,311,312,311,312,311,312,311,311,311,311,312,311,311,311,311,311,311,311,312,311,312,311,312,311,312,311,312,305,305,305,305,305,0,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,0,0,313,314,313,314,313,314,313,314,313,314,313,314,313,314,313,314,314,313,314,313,314,313,314,313,314,313,314,314,314,313,314,313,314,313,314,313,314,313,313,313,314,306,306,0,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,0,199,316,199,199,0,316,199,199,199,0,315,315,315,199,316,315,199,316,315,315,199,316,315,199,316,199,315,315,199,316,315,316,315,315,315,199,316,315,199,316,315,199,316,199,199,315,199,316,199,316,199,315,315,315,315,199,316,315,199,316,315,199,316,315,199,316,315,199,316,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,0,317,317,317,317,317,317,317,317,317,317,0,318,318,319,319,319,318,319,0,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,319,318,198,0,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,200,200,0,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,0,14,14,14,14,0,322,14,0,0,0,0,0,0,14,322,14,14,323,323,320,14,321,322,323,320,14,321,322,323,320,321,323,320,320,14,14,321,322,323,320,14,14,14,14,321,322,323,320,320,320,0,320,14,321,322,323,0,323,323,323,323,323,320,323,323,14,321,14,320,14,321,322,323,320,14,321,322,323,320,14,321,322,323,321,320,14,321,322,323,383,384,385,0,30,0,0,0,6,6,20,6,0,0,0,0,6,6,0,0,330,6,6,6,6,0,0,0,0,0,6,6,0,6,38,38,330,6,6,30,0,0,0,0,6,6,0,6,0,331,0,0,0,6,38,6,0,0,0,331,6,0,326,0,6,6,6,6,330,6,0,0,326,0,6,6,161,161,346,98,98,345,346,346,327,328,326,161,30,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,30,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,25,347,161,336,327,328,30,98,328,57,329,330,38,327,326,331,30,98,328,57,329,330,38,327,326,331,332,20,335,161,328,332,333,20,98,334,335,25,328,336,337,332,57,329,338,339,327,340,341,342,343,344,345,161,333,334,342,345,20,338,25,30,328,38,326,343,25,347,30,30,98,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,6,30,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,6,6,6,6,6,6,6,6,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,328,328,328,335,327,338,161,30,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,335,340,20,343,335,25,347,161,327,327,327,339,341,337,57,329,20,20,25,98,98,339,341,348,345,346,25,347,346,328,20,20,332,342,342,327,20,20,331,20,25,342,347,25,20,327,20,20,20,20,328,98,334,335,25,328,336,337,57,329,346,347,348,331,20,25,342,6,344,328,341,328,20,20,340,340,340,30,98,328,57,329,330,38,327,326,331,30,98,6,336,337,30,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,30,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,336,30,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,161,25,20,25,161,20,57,329,339,341,346,327,25,25,30,98,334,335,25,328,336,337,332,57,329,330,38,338,339,327,340,341,326,331,342,343,344,346,347,348,345,161,333,6,20,20,20,386,387,388,389,390,391,392,393,0,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,0,0,365,0,371,0,364,365,0,0,365,371,0,0,365,365,0,0,0,364,365,365,363,363,362,355,361,359,363,360,364,365,362,355,361,359,363,360,364,365,363,359,360,359,360,362,363,361,362,362,363,362,355,361,359,363,364,364,365,365,362,355,361,359,363,360,364,364,364,365,365,365,365,363,362,355,361,359,363,360,364,365,363,355,361,359,360,355,363,355,359,360,360,360,362,355,364,365,355,359,360,364,365,362,355,361,359,363,360,364,365,362,355,361,359,363,360,364,365,362,362,355,361,359,363,360,364,365,359,360,363,362,355,361,359,363,360,364,365,363,394,395,395,396,351,351,0,0,23,351,23,351,23,351,23,351,23,23,23,351,351,23,351,351,23,23,351,23,23,23,351,351,23,23,351,351,23,23,23,23,351,23,351,23,23,351,23,0,367,367,367,367,367,0,0,0,0,0,369,369,369,369,369,369,369,369,369,369,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,374,104,374,104,104,104,374,104,104,104,374,104,104,104,374,104,104,104,104,374,104,374,104,374,104,374,104,104],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[[-1,-2],2,[],[]],0,0,[[3,4],[[7,[5,6]]]],[[],1],[-1,[[7,[1]]],8],0,[[9,10],11],[[9,10],11],[[12,10],11],[[12,10],11],[[1,10],11],[-1,-1,[]],[-1,-1,[]],[13,9],[6,9],[-1,-1,[]],[6,12],[14,12],[15,12],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1]],17,18,18,19],[[7,[2,12]]],20],0,0,0,[[-1,[22,[21]]],[[16,[-1]]],20],0,0,0,0,0,0,0,0,0,0,[[[16,[-1]],23],[[7,[1,9]]],20],0,[[1,-1],7,24],0,0,[[[16,[-1]],25],[[7,[2,6]]],20],[9,[[22,[26]]]],[12,[[22,[26]]]],0,[[[16,[-1]],27,27],[[7,[2,6]]],20],[-1,-2,[],[]],[-1,5,[]],[-1,5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[[[16,[-1]],27,29],[[7,[2,6]]],20],[[[16,[-1]],-2,30,-3,31],[[7,[[2,[32,32,32]],6]]],20,33,[34,35]],[[[16,[-1]],36,[37,[-2]],[22,[5]],[22,[5]],[38,[-3]]],[[7,[[22,[5]],9]]],20,[[39,[27]]],[40,41]],[[[16,[-1]],36,[37,[-2]],[22,[5]],[22,[5]],31],[[7,[2,9]]],20,[[39,[27]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[42]],[44,[42]]],[[7,[2,45]]]],[[[43,[42]],[43,[42]],[44,[42]]],2],[[45,45],31],[[45,10],11],[[45,10],11],[-1,-1,[]],[-1,-2,[],[]],[-1,5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,-2]]],[[46,[-1,-2]]],47,47],[[-1,-2],2,[],[]],[[[46,[-1,-2]],10],11,[],[]],[-1,-1,[]],[[-1,23,48],[[7,[49,15]]],50],[-1,-2,[],[]],[[-1,-2,29,51,32],[[46,[-1,-2]]],[52,53,54,47],[34,35,47]],[[[46,[-1,-2]],55],[[7,[[22,[56]],6]]],[52,53,54,47],[34,35,47]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[19,[[22,[57]]]],[[58,59],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[58,58],[19,19],[60,60],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[7,[60]]],8],0,[19,5],[[60,60],31],[[60,10],11],[[59,10],11],[-1,-1,[]],[60,58],[60,58],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[27,[[7,[60]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,5],0,0,0,[[60,-1],7,24],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,61],[56,56],[62,62],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[61,10],11],[[56,10],11],[[62,10],11],[-1,-1,[]],[-1,-1,[]],[63,62],[64,62],[65,62],[66,62],[67,62],[68,62],[69,62],[70,62],[71,62],[-1,-1,[]],[[-1,61],56,[[72,[62]]]],[[73,61],[[7,[56,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,73],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[74]]],8],0,[-1,-1,[]],0,[-1,-2,[],[]],0,[[74,-1],7,24],0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,28,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[2,75]]],[]],[76,[[7,[2,75]]]],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[85,[42]],86],[[7,[81,6]]]],[[[87,[-1,-2]],88],[[7,[[22,[82]],89]]],20,90],[[],76],0,[-1,[[7,[77]]],8],[-1,[[7,[78]]],8],[-1,[[7,[79]]],8],[-1,[[7,[80]]],8],[-1,[[7,[81]]],8],[-1,[[7,[84]]],8],0,0,0,[[77,77],31],[[78,78],31],[[79,79],31],[[80,80],31],[[81,81],31],[[84,84],31],[[[87,[-1,-2]],[85,[42]]],[[7,[86,6]]],20,90],[[75,10],11],[[75,10],11],[[77,10],11],[[78,10],11],[[79,10],11],[[80,10],11],[[81,10],11],[[82,10],11],[[83,10],11],[[84,10],11],[[89,10],11],[[89,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[91,89],[92,89],[-1,-1,[]],[93,89],[94,89],[[-1,95],[[7,[[22,[96]],75]]],[]],[[76,95],[[7,[[22,[96]],75]]]],[[[87,[-1,-2]],97],[[7,[57,6]]],20,90],[[[87,[-1,-2]],97,57],[[7,[81,6]]],20,90],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[98,-1,-2,99],[[87,[-1,-2]]],20,90],0,0,0,0,[[[87,[-1,-2]],27,97],[[7,[[22,[[44,[42]]]],6]]],20,90],0,0,0,0,[[77,-1],7,24],[[78,-1],7,24],[[79,-1],7,24],[[80,-1],7,24],[[81,-1],7,24],[[84,-1],7,24],[89,[[22,[26]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],[-1,5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[100,[[7,[80]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[101,[95,96]]],[[7,[2,75]]],[]],[[76,[101,[95,96]]],[[7,[2,75]]]],0,0,0,0,0,0,0,0,[[[85,[42]]],[[7,[102,15]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[103,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[104,19],105],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,106],[[109,[[108,[107]]]]],[]],[[110,106],[[109,[[108,[107]]]]]],[105,[[0,[111]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[105,104],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[7,[[112,[-2]]]]],8,113],[-1,[[7,[114]]],8],0,[[[112,[-1]],10],11,115],[[114,10],11],[[116,10],11],[[116,10],11],[-1,-1,[]],[-1,-1,[]],[91,116],[-1,-1,[]],[117,116],[[118,[22,[106]]],[[7,[114,116]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[114,[[7,[21,116]]]],0,0,[[[112,[-1]],-2],7,119,24],[[114,-1],7,24],[116,[[22,[26]]]],[-1,5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[120]]],8],[-1,[[7,[121]]],8],[-1,[[7,[122]]],8],[[120,10],11],[[121,10],11],[[123,10],11],[[122,10],11],[[124,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[109,[[108,[107]]]]],[]],[-1,[[109,[[108,[107]]]]],[]],[-1,[[109,[[108,[107]]]]],[]],0,0,0,0,0,0,[[120,-1],7,24],[[123,-1],7,24],[[122,-1],7,24],[[124,-1],7,24],[[-1,32],[[109,[[108,[107]]]]],[]],[[-1,32],[[109,[[108,[107]]]]],[]],[[-1,32],[[109,[[108,[107]]]]],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[125,[[7,[120]]]],[-1,[[7,[-2]]],[],[]],[126,[[7,[123]]]],[-1,[[7,[-2]]],[],[]],[127,[[7,[122]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,128],[51,[[43,[42]]]],[51,[[2,[32,129,129,[43,[42]]]]]],[51,130],[51,[[85,[42]]]],[51,131],[51,132],[51,[[2,[95,95]]]],[51,133],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,128],0,[-1,2,[]],[117,117],[51,51],[48,48],[102,102],[97,97],[21,21],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[51,51],134],[[48,48],134],[[[43,[42]]],21],[-1,[[7,[-2,91]]],135,136],[-1,[[7,[-2,91]]],135,136],[[97,[85,[42]]],[[7,[[44,[42]],93]]]],[[97,[85,[42]]],[[7,[[44,[42]],93]]]],[[97,137,138],[[7,[21,93]]]],[[97,139],[[7,[140,93]]]],[[],51],[[],102],[21,[[43,[42]]]],[102,97],[-1,[[7,[51]]],8],[-1,[[7,[102]]],8],[-1,[[7,[97]]],8],[-1,[[7,[21]]],8],[[-1,-2],[[7,[2,141]]],142,143],[[],[[43,[42]]]],[-1,-2,[],[[145,[144]]]],[-1,-2,[],[[145,[144]]]],[[-1,-2],[[7,[2,141]]],142,143],[-1,[[44,[42]]],142],[-1,[[44,[42]]],142],[-1,146,[]],[[97,[43,[42]],[85,[42]]],[[44,[42]]]],[[97,[43,[42]],[85,[42]],32],[[44,[42]]]],[[97,21,138],137],[[97,[43,[42]],138],137],[[97,140],139],[[97,147],139],[[117,117],31],[[51,51],31],[[48,48],31],[[117,10],[[7,[2,148]]]],[[117,10],[[7,[2,148]]]],[[51,10],[[7,[2,148]]]],[[51,10],[[7,[2,148]]]],[[51,10],[[7,[2,148]]]],[[51,10],[[7,[2,148]]]],[[48,10],[[7,[2,148]]]],[[48,10],[[7,[2,148]]]],[-1,-1,[]],[128,51],[133,51],[-1,-1,[]],[131,51],[130,51],[138,51],[-1,-1,[]],[32,48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[43,[42]]],51],[[[43,[42]]],51],[[[43,[42]]],51],[[32,129,129,[43,[42]]],51],[[32,129,129,[43,[42]]],51],[[[85,[42]]],[[7,[51,117]]]],[[[85,[42]]],[[7,[51,117]]]],[27,[[7,[51]]]],[132,51],[132,51],[[95,95],51],[[[43,[42]]],97],[[[43,[42]]],21],[21,[[43,[42]]]],[[21,138],149],[97,[[43,[42]]]],[97,102],[[21,138],150],[97,151],[51,[[22,[152]]]],[51,153],[51,[[22,[154]]]],[51,146],[[117,-1],2,155],[[51,-1],2,155],[[48,-1],2,155],[51,130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,[[43,[42]]]],[51,31],[51,31],[[],51],[[-1,-2],[[7,[2,91]]],142,135],[[-1,-2],[[7,[2,91]]],142,135],[[[43,[42]]],102],[[],51],[27,[[7,[51,117]]]],[[51,51],[[22,[134]]]],[[48,48],[[22,[134]]]],0,[[51,-1],7,24],[[102,-1],7,24],[[97,-1],7,24],[[21,-1],7,24],[51,131],[51,[[43,[42]]]],[51,[[2,[32,129,129,[43,[42]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[51,132],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[27,[[7,[51]]]],[[[44,[42]]],[[7,[51]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[27,[[7,[51,117]]]],[[[85,[42]]],[[7,[51,117]]]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[51,133],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[156,-1],[[7,[5,13]]],[[39,[[85,[42]]]]]],[[156,[85,[42]]],[[7,[[44,[42]],13]]]],[[156,-1],[[7,[5,13]]],[[39,[[85,[42]]]]]],[[156,-1],[[7,[[22,[[37,[5]]]],13]]],[[39,[[85,[42]]]]]],[[156,5],[[7,[[44,[42]],13]]]],[[156,5],[[7,[[44,[42]],13]]]],[[156,-1],[[7,[[44,[42]],13]]],[[157,[[37,[27]]]]]],[[13,10],11],[[13,10],11],[-1,-1,[]],[21,156],[-1,-1,[]],[158,13],[-1,-2,[],[]],[-1,-2,[],[]],[156,21],[13,[[22,[26]]]],[-1,5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[37,[-1]]],[[37,[27]]],[[39,[27]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[37,[-1]]],[[37,[-1]]],47],[[-1,-2],2,[],[]],[[[85,[42]]],[[7,[[22,[[37,[5]]]],158]]]],[[[85,[42]]],[[7,[[22,[[37,[27]]]],158]]]],[-1,[[7,[[37,[-2]]]]],8,113],[[],[[37,[27]]]],[[[37,[-1]],[37,[-1]]],31,159],0,[[[37,[-1]],10],11,[[39,[27]]]],[[[37,[-1]],10],11,115],[-1,-1,[]],0,[-1,-2,[],[]],[[[37,[-1]]],31,[[39,[27]]]],[[[37,[-1]]],31,[[39,[27]]]],[[[37,[-1]]],[[44,[42]]],[[39,[27]]]],[[[37,[-1]],-2],7,119,24],[-1,-2,[],[]],[-1,5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[104,160],[-1,-2,[],[]],[[160,23,[22,[21]]],[[7,[161,6]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[162,27],[118,27],0,0,[162,[[85,[42]]]],0,[162,[[85,[42]]]],0,0,[66,163],0,0,[164,31],0,[100,165],[166,165],0,0,0,0,0,[71,31],0,0,0,[118,31],[164,31],0,0,0,0,0,0,0,[100,165],0,[167,27],0,0,0,0,0,0,0,0,[118,31],[164,31],0,0,0,[168,27],0,[169,[[85,[42]]]],[170,[[85,[42]]]],[171,[[85,[42]]]],[67,27],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[168,27],0,[168,32],0,[172,[[85,[42]]]],[173,[[85,[42]]]],0,0,0,[4,[[85,[42]]]],0,[169,2],[170,2],[174,2],[172,2],[173,2],[175,2],[167,2],[176,2],[171,2],[162,2],[55,2],[73,2],[70,2],[177,2],[67,2],[64,2],[69,2],[66,2],[71,2],[178,2],[179,2],[180,2],[63,2],[168,2],[181,2],[88,2],[118,2],[164,2],[182,2],[183,2],[68,2],[65,2],[4,2],[184,2],[185,2],[186,2],[187,2],[188,2],[100,2],[86,2],[189,2],[190,2],[191,2],[192,2],[166,2],[193,2],[169,169],[170,170],[174,174],[172,172],[173,173],[175,175],[167,167],[176,176],[171,171],[162,162],[194,194],[55,55],[73,73],[70,70],[177,177],[67,67],[64,64],[69,69],[66,66],[71,71],[178,178],[179,179],[180,180],[63,63],[168,168],[181,181],[88,88],[118,118],[164,164],[182,182],[183,183],[68,68],[65,65],[4,4],[184,184],[185,185],[186,186],[187,187],[188,188],[100,100],[86,86],[189,189],[190,190],[191,191],[192,192],[166,166],[193,193],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[194,194],134],[118,27],[164,27],0,0,0,0,0,0,[55,[[85,[42]]]],0,0,[168,27],0,0,0,0,0,0,0,[178,95],0,0,[[[85,[42]],195,31],[[7,[55,6]]]],[73,[[85,[42]]]],0,[[],169],[[],170],[[],174],[[],172],[[],173],[[],175],[[],167],[[],176],[[],171],[[],162],[[],194],[[],55],[[],73],[[],70],[[],177],[[],67],[[],64],[[],69],[[],66],[[],71],[[],178],[[],179],[[],180],[[],63],[[],168],[[],181],[[],88],[[],118],[[],164],[[],182],[[],183],[[],68],[[],65],[[],4],[[],184],[[],185],[[],186],[[],187],[[],188],[[],100],[[],86],[[],189],[[],190],[[],191],[[],192],[[],166],[[],193],0,[178,27],0,0,0,[180,27],0,[70,32],0,[55,27],0,[183,32],0,[168,[[85,[42]]]],0,0,0,[169,146],[170,146],[174,146],[172,146],[173,146],[175,146],[167,146],[176,146],[171,146],[162,146],[55,146],[73,146],[70,146],[177,146],[67,146],[64,146],[69,146],[66,146],[71,146],[178,146],[179,146],[180,146],[63,146],[168,146],[181,146],[88,146],[118,146],[164,146],[182,146],[183,146],[68,146],[65,146],[4,146],[184,146],[185,146],[186,146],[187,146],[188,146],[100,146],[86,146],[189,146],[190,146],[191,146],[192,146],[166,146],[193,146],[175,[[85,[42]]]],0,[175,[[85,[42]]]],0,0,[175,[[85,[42]]]],[4,[[85,[42]]]],0,0,[[169,169],31],[[170,170],31],[[174,174],31],[[172,172],31],[[173,173],31],[[175,175],31],[[167,167],31],[[176,176],31],[[171,171],31],[[162,162],31],[[194,194],31],[[55,55],31],[[73,73],31],[[70,70],31],[[177,177],31],[[67,67],31],[[64,64],31],[[69,69],31],[[66,66],31],[[71,71],31],[[178,178],31],[[179,179],31],[[180,180],31],[[63,63],31],[[168,168],31],[[181,181],31],[[88,88],31],[[118,118],31],[[164,164],31],[[182,182],31],[[183,183],31],[[68,68],31],[[65,65],31],[[4,4],31],[[184,184],31],[[185,185],31],[[186,186],31],[[187,187],31],[[188,188],31],[[100,100],31],[[86,86],31],[[189,189],31],[[190,190],31],[[191,191],31],[[192,192],31],[[166,166],31],[[193,193],31],[67,32],[118,32],[164,32],0,0,0,0,[168,27],0,[67,32],[168,32],0,0,[[169,10],11],[[170,10],11],[[174,10],11],[[172,10],11],[[173,10],11],[[175,10],11],[[167,10],11],[[176,10],11],[[171,10],11],[[162,10],11],[[194,10],11],[[55,10],11],[[73,10],11],[[70,10],11],[[177,10],11],[[67,10],11],[[64,10],11],[[69,10],11],[[66,10],11],[[71,10],11],[[178,10],11],[[179,10],11],[[180,10],11],[[63,10],11],[[168,10],11],[[181,10],11],[[88,10],11],[[118,10],11],[[164,10],11],[[182,10],11],[[183,10],11],[[68,10],11],[[65,10],11],[[4,10],11],[[184,10],11],[[185,10],11],[[186,10],11],[[187,10],11],[[188,10],11],[[100,10],11],[[86,10],11],[[189,10],11],[[190,10],11],[[191,10],11],[[192,10],11],[[166,10],11],[[193,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[196,[[22,[194]]]],[169,170],0,0,0,0,0,[88,[[85,[42]]]],0,0,0,0,0,[66,[[85,[42]]]],0,0,0,0,[71,31],[67,31],[71,31],[[194,-1],2,155],0,0,[168,32],0,0,[169,95],[170,95],[181,[[85,[42]]]],[164,[[85,[42]]]],0,0,0,0,[180,[[85,[42]]]],0,0,[118,32],[164,32],0,0,[168,[[85,[42]]]],0,[168,32],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[55,31],[169,31],[67,31],[55,31],[169,31],[55,31],[169,31],[55,31],[67,31],[55,31],[55,31],[196,31],[67,31],0,0,[168,[[85,[42]]]],0,0,0,0,[177,32],0,[88,[[85,[42]]]],0,0,0,0,[100,165],0,0,0,0,0,0,[170,27],0,0,[181,27],[118,27],[164,27],0,0,0,[180,[[85,[42]]]],0,0,[162,27],[118,27],0,0,0,0,0,0,[64,[[85,[42]]]],[63,[[85,[42]]]],0,0,[[194,194],[[22,[134]]]],[169,27],0,0,0,0,0,[162,27],[68,[[85,[42]]]],0,0,0,[162,[[85,[42]]]],0,[162,[[85,[42]]]],0,0,0,0,0,0,0,[162,[[85,[42]]]],[67,[[85,[42]]]],[71,[[85,[42]]]],[118,[[85,[42]]]],0,0,0,0,0,0,[162,27],0,[162,32],0,[171,[[85,[42]]]],0,0,0,0,[183,[[85,[42]]]],0,0,0,[162,31],0,0,0,[55,[[85,[42]]]],0,0,0,0,[67,32],0,0,[88,32],0,0,0,[185,197],0,0,[73,[[85,[42]]]],0,0,0,[55,27],0,0,[55,95],0,[[66,163],2],[[100,165],2],[[166,165],2],[[100,165],2],[[100,165],2],[[185,197],2],[[180,198],2],[[179,199],2],[[174,200],2],[[55,201],2],[[69,202],2],[[181,203],2],[172,[[85,[42]]]],[173,[[85,[42]]]],[68,[[85,[42]]]],0,0,0,0,[168,32],0,[55,23],[55,32],0,[55,27],0,[177,32],0,[180,198],0,[170,32],0,0,0,0,[55,31],0,0,0,0,0,0,[4,[[85,[42]]]],0,[65,95],0,[179,27],0,0,[179,32],0,[179,32],0,[179,199],0,[168,[[85,[42]]]],0,[55,95],[67,95],[66,95],[183,95],0,0,0,0,0,0,0,0,[167,27],[178,27],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[74,[[7,[55]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[174,200],[55,201],[69,202],[181,203],0,0,0,0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,[168,95],0,[55,31],0,[178,27],0,[162,27],0,0,0,0,[176,27],0,[169,27],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[168,32],0,[[],63],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[165,165],[[-1,-2],2,[],[]],[[165,165],134],[[],165],[[165,165],31],[[165,10],11],[-1,-1,[]],[196,[[22,[165]]]],[[165,-1],2,155],[-1,-2,[],[]],[196,31],[[165,165],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[204,204],[205,205],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[204,204],134],[[],204],[[205,-1],2,143],[205,146],[[204,204],31],[[205,205],31],[[204,10],11],[[205,10],11],[-1,-1,[]],[-1,-1,[]],[196,[[22,[204]]]],[[204,-1],2,155],[-1,-2,[],[]],[-1,-2,[],[]],[196,31],[[[22,[205]],32,206,-1,207],[[7,[2,91]]],135],[[204,204],[[22,[134]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[208,208],[209,209],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[208,208],134],[[],208],[[209,-1],2,143],[209,146],[[208,208],31],[[209,209],31],[[208,10],11],[[209,10],11],[-1,-1,[]],[-1,-1,[]],[196,[[22,[208]]]],[[208,-1],2,155],[-1,-2,[],[]],[-1,-2,[],[]],[196,31],[[[22,[209]],32,206,-1,207],[[7,[2,91]]],135],[[208,208],[[22,[134]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[210,2],[211,2],[212,2],[213,2],[214,2],[215,2],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[215,[[85,[42]]]],0,[[],210],[[],211],[[],212],[[],213],[[],214],[[],215],[214,32],0,[210,146],[211,146],[212,146],[213,146],[214,146],[215,146],[[210,210],31],[[211,211],31],[[212,212],31],[[213,213],31],[[214,214],31],[[215,215],31],[[210,10],11],[[211,10],11],[[212,10],11],[[213,10],11],[[214,10],11],[[215,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[210,95],[211,95],[212,95],[213,95],[214,95],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[212,32],0,[212,27],0,0,0,[210,[[85,[42]]]],[211,[[85,[42]]]],[212,[[85,[42]]]],0,0,0,[210,27],[211,27],[212,27],0,0,0,[[210,216],2],[[214,217],2],[[215,218],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[210,216],[214,217],0,0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[215,218],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[217,217],[[-1,-2],2,[],[]],[[217,217],134],[[],217],[[217,217],31],[[217,10],11],[-1,-1,[]],[196,[[22,[217]]]],[[217,-1],2,155],[-1,-2,[],[]],[196,31],[[217,217],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[216,216],[[-1,-2],2,[],[]],[[216,216],134],[[],216],[[216,216],31],[[216,10],11],[-1,-1,[]],[196,[[22,[216]]]],[[216,-1],2,155],[-1,-2,[],[]],[196,31],[[216,216],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[218,218],[[-1,-2],2,[],[]],[[218,218],134],[[],218],[[218,218],31],[[218,10],11],[-1,-1,[]],[196,[[22,[218]]]],[[218,-1],2,155],[-1,-2,[],[]],[196,31],[[218,218],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[219,2],[219,219],[[-1,-2],2,[],[]],[219,27],0,[[],219],[219,146],[[219,219],31],[[219,10],11],[-1,-1,[]],[-1,-2,[],[]],[219,32],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[220,27],[221,27],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[220,2],[222,2],[223,2],[224,2],[225,2],[226,2],[221,2],[227,2],[228,2],[220,220],[222,222],[223,223],[224,224],[225,225],[226,226],[221,221],[227,227],[228,228],[229,229],[230,230],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[229,229],134],[[230,230],134],0,0,[[],220],[[],222],[[],223],[[],224],[[],225],[[],226],[[],221],[[],227],[[],228],[[],229],[[],230],0,[223,27],[224,27],0,0,[220,146],[222,146],[223,146],[224,146],[225,146],[226,146],[221,146],[227,146],[228,146],[[220,220],31],[[222,222],31],[[223,223],31],[[224,224],31],[[225,225],31],[[226,226],31],[[221,221],31],[[227,227],31],[[228,228],31],[[229,229],31],[[230,230],31],[226,27],0,[[220,10],11],[[222,10],11],[[223,10],11],[[224,10],11],[[225,10],11],[[226,10],11],[[221,10],11],[[227,10],11],[[228,10],11],[[229,10],11],[[230,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[196,[[22,[229]]]],[196,[[22,[230]]]],[[229,-1],2,155],[[230,-1],2,155],[220,95],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[196,31],[196,31],0,0,0,[222,27],0,[223,[[85,[42]]]],0,[223,[[85,[42]]]],0,[[229,229],[[22,[134]]]],[[230,230],[[22,[134]]]],0,0,[228,[[85,[42]]]],0,[224,31],0,[221,95],0,[[220,231],2],[223,32],0,[224,27],0,[224,95],[225,95],0,0,[220,27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[220,231],0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[232,27],0,[233,2],[234,2],[235,2],[232,2],[236,2],[233,233],[234,234],[235,235],[232,232],[236,236],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[232,27],0,[[],233],[[],234],[[],235],[[],232],[[],236],[233,27],0,0,[233,146],[234,146],[235,146],[232,146],[236,146],[[233,233],31],[[234,234],31],[[235,235],31],[[232,232],31],[[236,236],31],[233,27],0,[[233,10],11],[[234,10],11],[[235,10],11],[[232,10],11],[[236,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[233,27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[236,31],0,[234,27],[235,27],[232,27],0,0,0,[233,27],0,[232,27],0,0,[232,27],0,0,[232,27],0,[233,27],0,[232,27],0,[[234,237],2],[[235,238],2],[[232,239],2],[232,27],0,[233,27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[234,237],[235,238],[232,239],0,0,0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[234,27],[235,27],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[238,238],[[-1,-2],2,[],[]],[[238,238],134],[[],238],[[238,238],31],[[238,10],11],[-1,-1,[]],[196,[[22,[238]]]],[[238,-1],2,155],[-1,-2,[],[]],[196,31],[[238,238],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[237,237],[[-1,-2],2,[],[]],[[237,237],134],[[],237],[[237,237],31],[[237,10],11],[-1,-1,[]],[196,[[22,[237]]]],[[237,-1],2,155],[-1,-2,[],[]],[196,31],[[237,237],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[239,239],[[-1,-2],2,[],[]],[[239,239],134],[[],239],[[239,239],31],[[239,10],11],[-1,-1,[]],[196,[[22,[239]]]],[[239,-1],2,155],[-1,-2,[],[]],[196,31],[[239,239],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[240,2],[241,2],[242,2],[240,240],[241,241],[242,242],[243,243],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],240],[[],241],[[],242],[[243,-1],2,143],[240,146],[241,146],[242,146],[243,146],[[240,240],31],[[241,241],31],[[242,242],31],[[243,243],31],[[240,10],11],[[241,10],11],[[242,10],11],[[243,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[243]],32,206,-1,207],[[7,[2,91]]],135],[241,27],0,0,[[242,244],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[242,244],0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[244,244],[[-1,-2],2,[],[]],[[244,244],134],[[],244],[[244,244],31],[[244,10],11],[-1,-1,[]],[196,[[22,[244]]]],[[244,-1],2,155],[-1,-2,[],[]],[196,31],[[244,244],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[245,2],[245,245],[246,246],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],245],[[246,-1],2,143],[245,146],[246,146],[[245,245],31],[[246,246],31],[[245,10],11],[[246,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[246]],32,206,-1,207],[[7,[2,91]]],135],[245,95],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[247,2],[247,247],[248,248],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],247],[[248,-1],2,143],[247,146],[248,146],[[247,247],31],[[248,248],31],[[247,10],11],[[248,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[248]],32,206,-1,207],[[7,[2,91]]],135],[247,[[85,[42]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[249,2],[249,249],[231,231],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[231,231],134],[249,27],0,[[],249],[[],231],[249,146],[[249,249],31],[[231,231],31],[249,27],0,[[249,10],11],[[231,10],11],[-1,-1,[]],[-1,-1,[]],[196,[[22,[231]]]],[[231,-1],2,155],[-1,-2,[],[]],[-1,-2,[],[]],[196,31],[[231,231],[[22,[134]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[201,201],[[-1,-2],2,[],[]],[[201,201],134],[[],201],[[201,201],31],[[201,10],11],[-1,-1,[]],[196,[[22,[201]]]],[[201,-1],2,155],[-1,-2,[],[]],[196,31],[[201,201],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[250,250],[[-1,-2],2,[],[]],[[250,-1],2,143],[250,146],[[250,250],31],[[250,10],11],[-1,-1,[]],[-1,-2,[],[]],[[[22,[250]],32,206,-1,207],[[7,[2,91]]],135],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[251,2],[251,251],[[-1,-2],2,[],[]],[[],251],0,0,0,0,[251,146],[[251,251],31],[[251,10],11],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[252,165],0,0,0,0,0,0,[253,165],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[254,2],[255,2],[256,2],[257,2],[258,2],[259,2],[260,2],[261,2],[262,2],[263,2],[264,2],[265,2],[266,2],[267,2],[268,2],[269,2],[270,2],[253,2],[271,2],[252,2],[272,2],[273,2],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[253,253],[271,271],[252,252],[272,272],[273,273],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],254],[[],255],[[],256],[[],257],[[],258],[[],259],[[],260],[[],261],[[],262],[[],263],[[],264],[[],265],[[],266],[[],267],[[],268],[[],269],[[],270],[[],253],[[],271],[[],252],[[],272],[[],273],0,0,0,0,0,[254,146],[255,146],[256,146],[257,146],[258,146],[259,146],[260,146],[261,146],[262,146],[263,146],[264,146],[265,146],[266,146],[267,146],[268,146],[269,146],[270,146],[253,146],[271,146],[252,146],[272,146],[273,146],[[254,254],31],[[255,255],31],[[256,256],31],[[257,257],31],[[258,258],31],[[259,259],31],[[260,260],31],[[261,261],31],[[262,262],31],[[263,263],31],[[264,264],31],[[265,265],31],[[266,266],31],[[267,267],31],[[268,268],31],[[269,269],31],[[270,270],31],[[253,253],31],[[271,271],31],[[252,252],31],[[272,272],31],[[273,273],31],[[254,10],11],[[255,10],11],[[256,10],11],[[257,10],11],[[258,10],11],[[259,10],11],[[260,10],11],[[261,10],11],[[262,10],11],[[263,10],11],[[264,10],11],[[265,10],11],[[266,10],11],[[267,10],11],[[268,10],11],[[269,10],11],[[270,10],11],[[253,10],11],[[271,10],11],[[252,10],11],[[272,10],11],[[273,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[271,165],0,0,0,0,0,0,0,0,[256,197],[264,197],0,0,[[252,165],2],[[253,165],2],[[271,165],2],[[256,197],2],[[264,197],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[274,2],[274,274],[[-1,-2],2,[],[]],[[],274],[274,146],[[274,274],31],[[274,10],11],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[275,2],[275,275],[203,203],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[203,203],134],[[],275],[[],203],[275,27],0,[275,146],[[275,275],31],[[203,203],31],[[275,10],11],[[203,10],11],[-1,-1,[]],[-1,-1,[]],[196,[[22,[203]]]],[[203,-1],2,155],[-1,-2,[],[]],[-1,-2,[],[]],[196,31],[[203,203],[[22,[134]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[276,2],[277,2],[276,276],[277,277],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[276,27],0,[[],276],[[],277],[277,27],0,[276,146],[277,146],[[276,276],31],[[277,277],31],[[276,10],11],[[277,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[276,32],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[278,2],[278,278],[279,279],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],278],[[279,-1],2,143],[278,146],[279,146],[[278,278],31],[[279,279],31],[[278,10],11],[[279,10],11],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[[22,[279]],32,206,-1,207],[[7,[2,91]]],135],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[197,197],[[-1,-2],2,[],[]],[[197,197],134],[[],197],[[197,197],31],[[197,10],11],[-1,-1,[]],[196,[[22,[197]]]],[[197,-1],2,155],[-1,-2,[],[]],[196,31],[[197,197],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[280,2],[280,280],[[-1,-2],2,[],[]],[280,27],0,[[],280],[280,27],0,[280,146],[[280,280],31],[[280,10],11],[-1,-1,[]],[280,32],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,[281,[[85,[42]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[281,2],[281,281],[282,282],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],281],[[282,-1],2,143],[281,146],[282,146],[[281,281],31],[[282,282],31],[[281,10],11],[[282,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[282]],32,206,-1,207],[[7,[2,91]]],135],[281,[[85,[42]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[202,202],[[-1,-2],2,[],[]],[[202,202],134],[[],202],[[202,202],31],[[202,10],11],[-1,-1,[]],[196,[[22,[202]]]],[[202,-1],2,155],[-1,-2,[],[]],[196,31],[[202,202],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[283,2],[283,283],[[-1,-2],2,[],[]],[[],283],[283,146],[[283,283],31],[283,95],0,[[283,10],11],[-1,-1,[]],[283,[[85,[42]]]],0,[-1,-2,[],[]],[283,32],0,[283,27],0,[283,27],0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[284,2],[284,284],[[-1,-2],2,[],[]],[[],284],[284,146],[[284,284],31],[[284,10],11],[-1,-1,[]],[284,32],0,[-1,-2,[],[]],[284,[[85,[42]]]],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[285,285],[[-1,-2],2,[],[]],[[285,-1],2,143],[285,146],[[285,285],31],[[285,10],11],[-1,-1,[]],[-1,-2,[],[]],[[[22,[285]],32,206,-1,207],[[7,[2,91]]],135],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[286,[[85,[42]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[287,2],[288,2],[289,2],[290,2],[291,2],[292,2],[293,2],[294,2],[295,2],[296,2],[297,2],[298,2],[299,2],[300,2],[301,2],[286,2],[302,2],[287,287],[288,288],[289,289],[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[301,301],[286,286],[302,302],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[288,31],0,[301,[[85,[42]]]],0,[[],287],[[],288],[[],289],[[],290],[[],291],[[],292],[[],293],[[],294],[[],295],[[],296],[[],297],[[],298],[[],299],[[],300],[[],301],[[],286],[[],302],[287,27],0,[287,27],0,[301,303],0,0,[287,146],[288,146],[289,146],[290,146],[291,146],[292,146],[293,146],[294,146],[295,146],[296,146],[297,146],[298,146],[299,146],[300,146],[301,146],[286,146],[302,146],[[287,287],31],[[288,288],31],[[289,289],31],[[290,290],31],[[291,291],31],[[292,292],31],[[293,293],31],[[294,294],31],[[295,295],31],[[296,296],31],[[297,297],31],[[298,298],31],[[299,299],31],[[300,300],31],[[301,301],31],[[286,286],31],[[302,302],31],[301,304],0,[287,95],0,0,[[287,10],11],[[288,10],11],[[289,10],11],[[290,10],11],[[291,10],11],[[292,10],11],[[293,10],11],[[294,10],11],[[295,10],11],[[296,10],11],[[297,10],11],[[298,10],11],[[299,10],11],[[300,10],11],[[301,10],11],[[286,10],11],[[302,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[298,[[85,[42]]]],0,0,[301,95],0,[300,[[85,[42]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[287,31],0,[300,[[85,[42]]]],0,[293,31],0,0,0,[300,27],0,[299,27],0,0,0,[294,[[85,[42]]]],0,[294,[[85,[42]]]],0,0,[293,32],0,[293,31],0,[299,27],0,[300,32],0,0,[286,[[85,[42]]]],0,[291,27],[292,27],[295,27],0,0,0,0,[[301,303],2],[[301,304],2],[[290,305],2],[[294,306],2],[[296,307],2],[[298,308],2],[[301,309],2],[[302,310],2],[300,[[85,[42]]]],0,0,[297,[[85,[42]]]],0,0,0,[298,27],0,[287,95],[291,95],[292,95],[295,95],[301,95],[302,95],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[290,305],[294,306],[296,307],[298,308],[301,309],[302,310],0,0,0,0,0,0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[293,31],0,[293,31],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[309,309],[303,303],[304,304],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[309,309],134],[[303,303],134],[[304,304],134],[[],309],[[],303],[[],304],[[309,309],31],[[303,303],31],[[304,304],31],[[309,10],11],[[303,10],11],[[304,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[196,[[22,[309]]]],[196,[[22,[303]]]],[196,[[22,[304]]]],[[309,-1],2,155],[[303,-1],2,155],[[304,-1],2,155],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[196,31],[196,31],[196,31],[[309,309],[[22,[134]]]],[[303,303],[[22,[134]]]],[[304,304],[[22,[134]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[310,310],[[-1,-2],2,[],[]],[[310,310],134],[[],310],[[310,310],31],[[310,10],11],[-1,-1,[]],[196,[[22,[310]]]],[[310,-1],2,155],[-1,-2,[],[]],[196,31],[[310,310],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[307,307],[[-1,-2],2,[],[]],[[307,307],134],[[],307],[[307,307],31],[[307,10],11],[-1,-1,[]],[196,[[22,[307]]]],[[307,-1],2,155],[-1,-2,[],[]],[196,31],[[307,307],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[308,308],[[-1,-2],2,[],[]],[[308,308],134],[[],308],[[308,308],31],[[308,10],11],[-1,-1,[]],[196,[[22,[308]]]],[[308,-1],2,155],[-1,-2,[],[]],[196,31],[[308,308],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,[311,95],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[311,2],[311,311],[312,312],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],311],[[312,-1],2,143],[311,146],[312,146],[[311,311],31],[[312,312],31],[311,95],0,[[311,10],11],[[312,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[311,95],0,[311,95],0,[[[22,[312]],32,206,-1,207],[[7,[2,91]]],135],0,[311,[[85,[42]]]],0,[311,[[85,[42]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[305,305],[[-1,-2],2,[],[]],[[305,305],134],[[],305],[[305,305],31],[[305,10],11],[-1,-1,[]],[196,[[22,[305]]]],[[305,-1],2,155],[-1,-2,[],[]],[196,31],[[305,305],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[313,2],[314,2],[313,313],[314,314],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],313],[[],314],[313,27],[314,27],0,0,0,[313,146],[314,146],[[313,313],31],[[314,314],31],[[313,10],11],[[314,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[314,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[313,31],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[306,306],[[-1,-2],2,[],[]],[[306,306],134],[[],306],[[306,306],31],[[306,10],11],[-1,-1,[]],[196,[[22,[306]]]],[[306,-1],2,155],[-1,-2,[],[]],[196,31],[[306,306],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[315,32],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[315,2],[315,315],[199,199],[316,316],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[199,199],134],0,[[],315],[[],199],[[316,-1],2,143],[315,146],[316,146],[315,32],0,[[315,315],31],[[199,199],31],[[316,316],31],[[315,10],11],[[199,10],11],[[316,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[196,[[22,[199]]]],[[199,-1],2,155],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[196,31],[[[22,[316]],32,206,-1,207],[[7,[2,91]]],135],[[199,199],[[22,[134]]]],0,[315,32],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[163,163],[[-1,-2],2,[],[]],[[163,163],134],[[],163],[[163,163],31],[[163,10],11],[-1,-1,[]],[196,[[22,[163]]]],[[163,-1],2,155],[-1,-2,[],[]],[196,31],[[163,163],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[317,2],[317,317],[[-1,-2],2,[],[]],[317,[[85,[42]]]],0,[317,318],0,[[],317],[317,146],[[317,317],31],[[317,10],11],[-1,-1,[]],[317,[[85,[42]]]],0,[-1,-2,[],[]],0,0,[[317,318],2],[[317,319],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[317,319],0,[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[319,319],[318,318],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[319,319],134],[[318,318],134],[[],319],[[],318],[[319,319],31],[[318,318],31],[[319,10],11],[[318,10],11],[-1,-1,[]],[-1,-1,[]],[196,[[22,[319]]]],[196,[[22,[318]]]],[[319,-1],2,155],[[318,-1],2,155],[-1,-2,[],[]],[-1,-2,[],[]],[196,31],[196,31],[[319,319],[[22,[134]]]],[[318,318],[[22,[134]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[198,198],[[-1,-2],2,[],[]],[[198,198],134],[[],198],[[198,198],31],[[198,10],11],[-1,-1,[]],[196,[[22,[198]]]],[[198,-1],2,155],[-1,-2,[],[]],[196,31],[[198,198],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[200,200],[[-1,-2],2,[],[]],[[200,200],134],[[],200],[[200,200],31],[[200,10],11],[-1,-1,[]],[196,[[22,[200]]]],[[200,-1],2,155],[-1,-2,[],[]],[196,31],[[200,200],[[22,[134]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[320,171],[[7,[162,14]]]],[-1,[[7,[321]]],8],0,[[320,162],[[7,[171,14]]]],[[320,10],11],[[14,10],11],[[14,10],11],[[321,10],11],[[322,10],11],[[323,10],11],[-1,-1,[]],[91,14],[15,14],[6,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[324,320],[29,320],[-1,[[7,[320,14]]],[34,35]],[-1,32,[34,35]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-3,-4,27,27,[325,[322]]],[[7,[2,14]]],33,33,[34,35],20],0,0,0,0,0,[320,29],0,0,[14,[[22,[26]]]],0,[-1,5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[98,36],0,0,0,0,0,0,[326,27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[327,31],0,[30,30],[98,98],[328,328],[57,57],[329,329],[330,330],[[[38,[-1]]],[[38,[-1]]],47],[327,327],[326,326],[331,331],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[-1,27,[22,[27]],[22,[27]],[22,[27]]],[[109,[[108,[107]]]]],[]],0,[[161,156],[[7,[1,13]]]],[[],328],[[],332],[[],333],[[-1,59,27,[85,[[2,[27,27]]]]],[[109,[[108,[107]]]]],[]],[-1,[[7,[98]]],8],[-1,[[7,[334]]],8],[-1,[[7,[335]]],8],[-1,[[7,[25]]],8],[-1,[[7,[328]]],8],[-1,[[7,[336]]],8],[-1,[[7,[337]]],8],[-1,[[7,[332]]],8],[-1,[[7,[57]]],8],[-1,[[7,[329]]],8],[-1,[[7,[338]]],8],[-1,[[7,[339]]],8],[-1,[[7,[327]]],8],[-1,[[7,[340]]],8],[-1,[[7,[341]]],8],[-1,[[7,[342]]],8],[-1,[[7,[343]]],8],[-1,[[7,[344]]],8],[-1,[[7,[345]]],8],[-1,[[7,[161]]],8],[-1,[[7,[333]]],8],0,0,0,[-1,[[109,[[108,[107]]]]],[]],0,0,[[30,30],31],[[328,328],31],[[[38,[-1]],[38,[-1]]],31,159],[[326,326],31],0,0,0,[[30,10],11],[[30,10],11],[[98,10],11],[[98,10],11],[[334,10],11],[[335,10],11],[[25,10],11],[[328,10],11],[[336,10],11],[[337,10],11],[[332,10],11],[[57,10],11],[[329,10],11],[[330,10],11],[[[38,[-1]],10],11,115],[[338,10],11],[[339,10],11],[[327,10],11],[[340,10],11],[[341,10],11],[[326,10],11],[[331,10],11],[[342,10],11],[[343,10],11],[[344,10],11],[[346,10],11],[[347,10],11],[[348,10],11],[[345,10],11],[[161,10],11],[[333,10],11],[[6,10],11],[[6,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[349,6],[89,6],[91,6],[350,6],[15,6],[-1,-1,[]],[75,6],[351,6],[92,6],[[-1,168],[[109,[[108,[107]]]]],[]],[[-1,27,32],[[109,[[108,[107]]]]],[]],[-1,[[109,[[108,[107]]]]],[]],[[-1,32,27],[[109,[[108,[107]]]]],[]],[[-1,57],[[109,[[108,[107]]]]],[]],[[-1,59,27,[85,[[2,[27,27]]]],330],[[109,[[108,[107]]]]],[]],[[-1,31],[[109,[[108,[107]]]]],[]],[[-1,23,32],[[109,[[108,[107]]]]],[]],[[-1,30],[[109,[[108,[107]]]]],[]],[[-1,23,32],[[109,[[108,[107]]]]],[]],[[-1,59,27,[85,[[2,[27,27]]]],330],[[109,[[108,[107]]]]],[]],[-1,[[109,[[108,[107]]]]],[]],[[-1,27,32],[[109,[[108,[107]]]]],[]],[[-1,27],[[109,[[108,[107]]]]],[]],[-1,[[109,[[108,[107]]]]],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,346,57],[[109,[[108,[107]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,59,27,[85,[[2,[27,27]]]],330,-2],[[109,[[108,[107]]]]],[],[352,119]],[[-1,27,[22,[27]],[22,[27]],[22,[27]],[22,[27]],[22,[27]]],[[109,[[108,[107]]]]],[]],0,[98,353],0,0,0,0,0,0,0,0,0,0,[[-1,59,27,[85,[[2,[27,27]]]],330,-2],[[109,[[108,[107]]]]],[],[352,119]],[[-1,27,[85,[[2,[27,27]]]],[22,[[2,[27,-2]]]]],[[109,[[108,[107]]]]],[],[40,41]],0,0,0,[327,31],[[-1,59,27,[85,[[2,[27,27]]]],330,-2],[[109,[[108,[107]]]]],[],[352,119]],[[-1,59,27,[85,[[2,[27,27]]]],-2],[[109,[[108,[107]]]]],[],[142,354]],[331,[[22,[27]]]],[[-1,30,124],[[109,[[108,[107]]]]],[]],0,0,0,0,[[-1,27,27,326],[[109,[[108,[107]]]]],[]],0,[[-1,27],[[109,[[108,[107]]]]],[]],[[-1,27],[[109,[[108,[107]]]]],[]],[[-1,23,[22,[21]]],[[109,[[108,[107]]]]],[]],[[-1,355],[[109,[[108,[107]]]]],[]],0,[[98,-1],7,24],[[334,-1],7,24],[[335,-1],7,24],[[25,-1],7,24],[[328,-1],7,24],[[336,-1],7,24],[[337,-1],7,24],[[57,-1],7,24],[[329,-1],7,24],[[346,-1],7,24],[[347,-1],7,24],[[348,-1],7,24],[331,[[22,[27]]]],[[-1,25],[[109,[[108,[107]]]]],[]],0,0,[6,[[22,[26]]]],0,0,0,0,[[-1,331,25,31],[[109,[[108,[107]]]]],[]],[[-1,27,27],[[109,[[108,[107]]]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,[[-1,356],[[109,[[108,[107]]]]],[]],0,0,[[-1,333,-2],[[109,[[108,[107]]]]],[],[40,41]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[109,[[108,[107]]]]],[]],[[-1,150,[85,[42]],[85,[42]],[85,[42]],149,[38,[-2]]],[[109,[[108,[107]]]]],[],[40,41]],[[-1,27,27,[85,[[2,[27,27]]]],[22,[19]]],[[109,[[108,[107]]]]],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[357,[-1]]],[[357,[-1]]],47],[[-1,-2],2,[],[]],[[[357,[-1]],19,31],[[7,[105,6]]],20],[-1,-1,[]],[-1,-2,[],[]],[-1,[[357,[-1]]],20],[[[357,[-1]],288],[[7,[[0,[358]],6]]],20],[[[357,[-1]],31],[[7,[[44,[55]],6]]],20],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[359,359],[[[360,[-1,-2,-3]]],[[360,[-1,-2,-3]]],47,47,47],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[-1,[[7,[361]]],8],0,0,0,[[362,10],11],[[355,10],11],[[361,10],11],[[359,10],11],[[363,10],11],[[364,10],11],[[364,10],11],[[365,10],11],[[365,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,364],[-1,-1,[]],[366,364],[6,365],[-1,-1,[]],[15,365],[364,365],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[104,104,-1,[46,[-2,-3]],-3,-2,23,48],[[360,[-1,-2,-3]]],[20,47],[52,54,367,368,47],[34,35,47]],0,0,0,0,[[[360,[-1,-2,-3]],23,[22,[369]],-4,31,31],[[7,[2,365]]],[20,47],[52,54,367,368,47],[34,35,47],370],[[[360,[-1,-2,-3]],23,[22,[369]],-4,95,31],371,[20,47],[52,54,367,368,47],[34,35,47],[[72,[62]]]],[[[360,[-1,-2,-3]],-4,-5,95,31],[[44,[371]]],[20,47],[52,54,367,368,47],[34,35,47],[[39,[[85,[[2,[23,[22,[369]]]]]]]]],[[72,[62]]]],[[362,-1],7,24],[[355,-1],7,24],[364,[[22,[26]]]],[365,[[22,[26]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],[-1,5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[[[360,[-1,-2,-3]],363,[44,[42]]],[[7,[168,364]]],[20,47],[52,54,367,368,47],[34,35,47]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[23,36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[351,351],[23,23],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[7,[23]]],8],[[23,23],31],[[351,10],11],[[351,10],11],[[23,10],11],[-1,-1,[]],[117,351],[51,23],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,353],[[23,-1],7,24],[351,[[22,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,-1],49,[[72,[48]]]],[-1,5,[]],[-1,[[7,[-2]]],[],[]],[27,[[7,[23]]]],[-1,[[7,[-2]]],[],[]],[[[22,[[85,[42]]]]],[[7,[23]]]],[[[22,[27]]],[[7,[23]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,23,23],[[109,[[108,[107]]]]],[142,18]],[[-1,23],[[109,[[108,[107]]]]],[]],[[-1,49],[[109,[[108,[107]]]]],[]],[[-1,49],[[109,[[108,[107]]]]],[]],[[-1,23],[[109,[[108,[107]]]]],[]],0,0,[[[85,[42]]],[[7,[[43,[42]],45]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,[[7,[[44,[42]]]]],8],[[-1,-2],7,[[39,[[85,[42]]]]],24],[-1,[[7,[[22,[[44,[42]]]]]]],8],[[[22,[-1]],-2],7,[[39,[[85,[42]]]]],24],[-1,[[7,[[22,[3]]]]],8],[[[22,[3]],-1],7,24],[-1,[[7,[[22,[29]]]]],8],[[[22,[29]],-1],7,24],[-1,[[7,[372]]],8],[[372,-1],7,24],[-1,[[7,[3]]],8],[[3,-1],7,24],[-1,[[7,[29]]],8],[[29,-1],7,24],[-1,[[7,[195]]],8],[[195,-1],7,24],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[104,104],[[-1,-2],2,[],[]],[-1,-1,[]],[-1,-1,[]],[[-1,5],[[2,[104,[0,[107]]]]],373],[104,[[7,[333,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[104,31],[104,31],[[[109,[374]],375],[[376,[22]]]],[[104,169],[[0,[107]]]],[[104,355],[[7,[361,6]]]],[[104,355,369],[[7,[361,6]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[104,-1],-2,377,[]]],"c":[463],"p":[[3,"Profile",0],[15,"tuple"],[3,"PrivateKey",5981],[3,"DeviceName",1055],[3,"String",5982],[4,"ServiceError",5129],[4,"Result",5983],[8,"Deserializer",5984],[4,"ProfileManagerError",0],[3,"Formatter",5985],[6,"Result",5985],[4,"LinkError",0],[4,"ProfileCipherError",982],[4,"ProvisioningError",5036],[4,"SignalProtocolError",5986],[3,"AccountManager",0],[3,"Url",5987],[8,"IdentityKeyStore",5988],[3,"ServiceCredentials",139],[8,"PushService",5129],[3,"ProfileKey",767],[4,"Option",5989],[3,"ServiceAddress",5863],[8,"Serializer",5990],[3,"AccountAttributes",5129],[8,"Error",5991],[15,"str"],[3,"TypeId",5992],[3,"PublicKey",5981],[4,"ServiceIdType",5129],[15,"bool"],[15,"u32"],[8,"PreKeysStore",687],[8,"Rng",5993],[8,"CryptoRng",5994],[6,"Aci",5995],[3,"ProfileName",1017],[4,"AvatarWrite",5129],[8,"AsRef",5996],[8,"Read",5997],[8,"Send",5998],[15,"u8"],[15,"array"],[3,"Vec",5999],[4,"AttachmentCipherError",106],[3,"ServiceCipher",123],[8,"Clone",6000],[3,"DeviceId",767],[3,"ProtocolAddress",5995],[8,"SessionStore",5988],[3,"Uuid",767],[8,"ProtocolStore",5988],[8,"KyberPreKeyStore",5988],[8,"SenderKeyStore",5988],[3,"Envelope",1055],[3,"Content",213],[3,"HttpAuth",5129],[3,"ServiceConfiguration",139],[4,"Endpoint",139],[4,"SignalServers",139],[3,"Metadata",213],[4,"ContentBody",213],[3,"SyncMessage",1055],[3,"NullMessage",1055],[3,"EditMessage",1055],[3,"TypingMessage",1055],[3,"DataMessage",1055],[3,"PniSignatureMessage",1055],[3,"ReceiptMessage",1055],[3,"CallMessage",1055],[3,"StoryMessage",1055],[8,"Into",5996],[3,"Content",1055],[3,"EnvelopeEntity",299],[4,"CredentialsCacheError",323],[3,"InMemoryCredentialsCache",323],[3,"Member",323],[3,"PendingMember",323],[3,"RequestingMember",323],[3,"AccessControl",323],[3,"Group",323],[3,"GroupChanges",323],[4,"GroupChange",323],[3,"Timer",323],[15,"slice"],[3,"Group",1055],[3,"GroupsManager",323],[3,"GroupContextV2",1055],[4,"GroupDecodingError",323],[8,"CredentialsCache",323],[3,"DecodeError",6001],[6,"Error",6002],[3,"ZkGroupVerificationFailure",6003],[3,"ZkGroupDeserializationFailure",6003],[15,"u64"],[3,"AuthCredentialWithPniResponse",6004],[3,"GroupSecretParams",767],[3,"ServiceIds",5129],[3,"ServerPublicParams",6005],[3,"AccessControl",1055],[3,"HashMap",6006],[3,"GroupMasterKey",767],[4,"Incoming",574],[3,"SignalWebSocket",5951],[3,"MessagePipe",574],[3,"Bytes",6007],[8,"Future",6008],[3,"Box",6009],[3,"Pin",6010],[3,"PanicingWebSocketService",574],[8,"Stream",6011],[3,"Attachment",628],[8,"Deserialize",5984],[3,"Contact",628],[8,"Debug",5985],[4,"ParseContactError",628],[3,"UuidError",767],[3,"ContactDetails",1055],[8,"Serialize",5990],[3,"PreKeyEntity",687],[3,"SignedPreKeyEntity",687],[3,"KyberPreKeyEntity",687],[3,"SignedPreKey",687],[3,"PreKeyState",687],[3,"PreKeyRecord",6012],[3,"SignedPreKeyRecord",6013],[3,"KyberPreKeyRecord",6014],[3,"Braced",6015],[15,"u16"],[3,"Hyphenated",6015],[3,"Simple",6015],[15,"u128"],[3,"Urn",6015],[4,"Ordering",6016],[8,"Buf",6017],[8,"Default",6018],[3,"ProfileKeyCiphertext",6019],[3,"SpecificServiceId",5995],[3,"UuidCiphertext",6020],[4,"ServiceId",5995],[3,"EncodeError",6001],[8,"Sized",5998],[8,"BufMut",6021],[15,"char"],[8,"FromIterator",6022],[15,"usize"],[3,"UidStruct",6023],[3,"Error",5985],[3,"ProfileKeyCommitment",6024],[3,"ProfileKeyVersion",6025],[3,"GroupPublicParams",6026],[3,"Timestamp",6027],[4,"Variant",6028],[4,"Version",6028],[8,"Hasher",6029],[3,"ProfileCipher",982],[8,"Borrow",6030],[3,"Utf8Error",6031],[8,"PartialEq",6016],[3,"ProfileService",1044],[3,"SignalServiceProfile",5129],[3,"ProvisionMessage",1055],[4,"Action",4892],[3,"GroupDetails",1055],[4,"AccessRequired",2291],[3,"GroupJoinInfo",1055],[3,"Pack",1055],[3,"AttachmentPointer",1055],[3,"WebSocketRequestMessage",1055],[3,"WebSocketResponseMessage",1055],[3,"ProvisionEnvelope",1055],[3,"ServerCertificate",1055],[3,"SenderCertificate",1055],[3,"WebSocketMessage",1055],[3,"UnidentifiedSenderMessage",1055],[3,"ProvisioningUuid",1055],[3,"BodyRange",1055],[3,"Preview",1055],[3,"TextAttachment",1055],[3,"Verified",1055],[3,"GroupContext",1055],[3,"PaymentAddress",1055],[3,"DecryptionErrorMessage",1055],[3,"AvatarUploadAttributes",1055],[3,"Member",1055],[3,"PendingMember",1055],[3,"RequestingMember",1055],[3,"BannedMember",1055],[3,"GroupChange",1055],[3,"GroupChanges",1055],[3,"GroupAttributeBlob",1055],[3,"GroupInviteLink",1055],[3,"GroupExternalCredential",1055],[4,"ProvisioningVersion",1055],[6,"SignalingKey",139],[15,"i32"],[4,"Role",3963],[4,"State",4990],[4,"Style",4822],[4,"Type",5013],[4,"Type",3317],[4,"Type",4048],[4,"Type",3842],[4,"Flags",2316],[4,"AttachmentIdentifier",2316],[4,"WireType",6032],[3,"DecodeContext",6032],[4,"Style",2358],[4,"AssociatedValue",2358],[3,"Offer",2403],[3,"Answer",2403],[3,"IceUpdate",2403],[3,"Busy",2403],[3,"Hangup",2403],[3,"Opaque",2403],[4,"Type",2572],[4,"Type",2547],[4,"Urgency",2594],[3,"Avatar",2616],[3,"Quote",2637],[3,"StoryContext",2637],[3,"Contact",2637],[3,"Sticker",2637],[3,"Reaction",2637],[3,"Delete",2637],[3,"GroupCallUpdate",2637],[3,"Payment",2637],[3,"GiftBadge",2637],[4,"Flags",2637],[4,"ProtocolVersion",2637],[4,"Type",3273],[3,"PostalAddress",2890],[3,"Name",2890],[3,"Phone",2890],[3,"Email",2890],[3,"Avatar",2890],[4,"Type",3050],[4,"Type",3026],[4,"Type",3074],[3,"Amount",3097],[3,"Notification",3097],[3,"Activation",3097],[4,"Item",3097],[4,"Type",3177],[3,"MobileCoin",3199],[4,"Amount",3199],[3,"MobileCoin",3236],[4,"Transaction",3236],[3,"QuotedAttachment",3273],[4,"Content",3344],[3,"Actions",3365],[3,"ModifyAddFromInviteLinkAccessControlAction",3407],[3,"ModifyAttributesAccessControlAction",3407],[3,"AddMemberAction",3407],[3,"DeleteMemberAction",3407],[3,"ModifyMemberRoleAction",3407],[3,"ModifyMemberProfileKeyAction",3407],[3,"AddPendingMemberAction",3407],[3,"DeletePendingMemberAction",3407],[3,"PromotePendingMemberAction",3407],[3,"PromotePendingPniAciMemberProfileKeyAction",3407],[3,"AddRequestingMemberAction",3407],[3,"DeleteRequestingMemberAction",3407],[3,"PromoteRequestingMemberAction",3407],[3,"AddBannedMemberAction",3407],[3,"DeleteBannedMemberAction",3407],[3,"ModifyTitleAction",3407],[3,"ModifyDescriptionAction",3407],[3,"ModifyAvatarAction",3407],[3,"ModifyDisappearingMessagesTimerAction",3407],[3,"ModifyMembersAccessControlAction",3407],[3,"ModifyInviteLinkPasswordAction",3407],[3,"ModifyAnnouncementsOnlyAction",3407],[3,"GroupChangeState",3823],[3,"Member",3842],[3,"Avatar",3886],[3,"Member",3886],[3,"GroupInviteLinkContentsV1",3926],[4,"Contents",3926],[3,"Sticker",3986],[3,"MobileCoinAddress",4009],[4,"Address",4009],[3,"Certificate",4071],[3,"Certificate",4099],[4,"Attachment",4120],[3,"CallLinkUpdate",4139],[3,"Sent",4139],[3,"Contacts",4139],[3,"Blocked",4139],[3,"Request",4139],[3,"Read",4139],[3,"Viewed",4139],[3,"Configuration",4139],[3,"StickerPackOperation",4139],[3,"ViewOnceOpen",4139],[3,"FetchLatest",4139],[3,"Keys",4139],[3,"MessageRequestResponse",4139],[3,"OutgoingPayment",4139],[3,"PniChangeNumber",4139],[3,"CallEvent",4139],[3,"CallLogEvent",4139],[4,"Direction",4540],[4,"Event",4540],[4,"Type",4731],[4,"Type",4800],[4,"Type",4633],[4,"Type",4657],[4,"Type",4540],[4,"Type",4612],[3,"MobileCoin",4682],[4,"PaymentDetail",4682],[3,"UnidentifiedDeliveryStatus",4757],[3,"StoryMessageRecipient",4757],[3,"Gradient",4822],[4,"Background",4822],[3,"Message",4914],[4,"ContentHint",4943],[4,"Type",4943],[3,"ProvisioningCipher",5036],[3,"ConfirmCodeResponse",5036],[4,"SecondaryDeviceProvisioning",5036],[3,"NewDeviceRegistration",5036],[3,"KeyPair",5981],[3,"Sender",6033],[4,"VerificationTransport",5129],[3,"RegistrationSessionMetadataResponse",5129],[3,"DeviceCapabilities",5129],[3,"AuthCredentials",5129],[4,"HttpAuthOverride",5129],[4,"RegistrationMethod",5129],[3,"PreKeyStatus",5129],[3,"AttachmentV2UploadAttributes",5129],[3,"DeviceId",5129],[3,"DeviceInfo",5129],[3,"RecaptchaAttributes",5129],[3,"ProofRequired",5129],[3,"PreKeyResponse",5129],[3,"WhoAmIResponse",5129],[3,"RegistrationLockFailure",5129],[3,"VerifyAccountResponse",5129],[3,"PreKeyResponseItem",5129],[3,"MismatchedDevices",5129],[3,"StaleDevices",5129],[3,"LinkResponse",5129],[3,"LinkRequest",5129],[3,"LinkAccountAttributes",5129],[3,"LinkCapabilities",5129],[4,"ParseError",6034],[4,"DecodeError",6035],[4,"ParseServiceAddressError",5863],[8,"MaybeSend",0],[6,"Pni",5995],[8,"ProtobufMessage",767],[3,"OutgoingPushMessages",5719],[15,"i64"],[3,"MessageReceiver",5703],[8,"Iterator",6036],[3,"SentMessage",5719],[3,"MessageSender",5719],[3,"SendMessageResponse",5719],[3,"OutgoingPushMessage",5719],[3,"AttachmentSpec",5719],[4,"AttachmentUploadError",5719],[4,"MessageSenderError",5719],[3,"Error",6037],[8,"SessionStoreExt",5906],[8,"Sync",5998],[3,"UnidentifiedAccess",5916],[8,"IntoIterator",6022],[6,"SendMessageResult",5719],[3,"PhoneNumber",6038],[8,"WebSocketService",574],[3,"SignalRequestStream",5951],[3,"Context",6039],[4,"Poll",6040],[8,"FnOnce",6041],[13,"ModifyMemberProfileKey",565],[13,"PromotePendingMember",565],[13,"ModifyMemberRole",565],[13,"PromoteRequestingMember",565],[4,"WebSocketStreamItem",574],[13,"InvalidData",5126],[13,"WsError",5126],[13,"WsClosing",5126],[13,"UnhandledResponseCode",5695],[13,"Timeout",5695],[13,"SendError",5695],[13,"ResponseError",5695],[13,"JsonDecodeError",5695],[13,"WsError",5695],[13,"WsClosing",5695],[13,"InvalidFrameError",5695],[13,"UntrustedIdentity",5859],[13,"ProofRequired",5859],[13,"NotFound",5859]],"b":[[35,"impl-Debug-for-ProfileManagerError"],[36,"impl-Display-for-ProfileManagerError"],[37,"impl-Debug-for-LinkError"],[38,"impl-Display-for-LinkError"],[42,"impl-From%3CProfileCipherError%3E-for-ProfileManagerError"],[43,"impl-From%3CServiceError%3E-for-ProfileManagerError"],[45,"impl-From%3CServiceError%3E-for-LinkError"],[46,"impl-From%3CProvisioningError%3E-for-LinkError"],[47,"impl-From%3CSignalProtocolError%3E-for-LinkError"],[114,"impl-Display-for-AttachmentCipherError"],[115,"impl-Debug-for-AttachmentCipherError"],[175,"impl-From%3CSignalServers%3E-for-ServiceConfiguration"],[176,"impl-From%3C%26SignalServers%3E-for-ServiceConfiguration"],[260,"impl-From%3CSyncMessage%3E-for-ContentBody"],[261,"impl-From%3CNullMessage%3E-for-ContentBody"],[262,"impl-From%3CEditMessage%3E-for-ContentBody"],[263,"impl-From%3CTypingMessage%3E-for-ContentBody"],[264,"impl-From%3CDataMessage%3E-for-ContentBody"],[265,"impl-From%3CPniSignatureMessage%3E-for-ContentBody"],[266,"impl-From%3CReceiptMessage%3E-for-ContentBody"],[267,"impl-From%3CCallMessage%3E-for-ContentBody"],[268,"impl-From%3CStoryMessage%3E-for-ContentBody"],[432,"impl-Display-for-CredentialsCacheError"],[433,"impl-Debug-for-CredentialsCacheError"],[442,"impl-Display-for-GroupDecodingError"],[443,"impl-Debug-for-GroupDecodingError"],[455,"impl-From%3CDecodeError%3E-for-GroupDecodingError"],[456,"impl-From%3CBox%3CErrorKind%3E%3E-for-GroupDecodingError"],[458,"impl-From%3CZkGroupVerificationFailure%3E-for-GroupDecodingError"],[459,"impl-From%3CZkGroupDeserializationFailure%3E-for-GroupDecodingError"],[652,"impl-Debug-for-ParseContactError"],[653,"impl-Display-for-ParseContactError"],[656,"impl-From%3CDecodeError%3E-for-ParseContactError"],[658,"impl-From%3CError%3E-for-ParseContactError"],[871,"impl-Debug-for-Error"],[872,"impl-Display-for-Error"],[873,"impl-Debug-for-Uuid"],[874,"impl-LowerHex-for-Uuid"],[875,"impl-UpperHex-for-Uuid"],[876,"impl-Display-for-Uuid"],[877,"impl-Debug-for-DeviceId"],[878,"impl-Display-for-DeviceId"],[880,"impl-From%3CBraced%3E-for-Uuid"],[881,"impl-From%3CUrn%3E-for-Uuid"],[883,"impl-From%3CSimple%3E-for-Uuid"],[884,"impl-From%3CHyphenated%3E-for-Uuid"],[885,"impl-From%3CSpecificServiceId%3CKIND%3E%3E-for-Uuid"],[955,"impl-TryFrom%3C%26str%3E-for-Uuid"],[956,"impl-TryFrom%3CVec%3Cu8%3E%3E-for-Uuid"],[998,"impl-Display-for-ProfileCipherError"],[999,"impl-Debug-for-ProfileCipherError"],[1023,"impl-ProfileName%3CString%3E"],[1024,"impl-ProfileName%3C%26str%3E"],[1025,"impl-Deserialize%3C\'de%3E-for-ProfileName%3CS%3E"],[1029,"impl-Display-for-ProfileName%3CS%3E"],[1030,"impl-Debug-for-ProfileName%3CS%3E"],[1036,"impl-ProfileName%3CS%3E"],[1037,"impl-Serialize-for-ProfileName%3CS%3E"],[5071,"impl-Display-for-ProvisioningError"],[5072,"impl-Debug-for-ProvisioningError"],[5077,"impl-From%3CDecodeError%3E-for-ProvisioningError"],[5078,"impl-From%3CSignalProtocolError%3E-for-ProvisioningError"],[5079,"impl-From%3CServiceError%3E-for-ProvisioningError"],[5342,"impl-Debug-for-ServiceIdType"],[5343,"impl-Display-for-ServiceIdType"],[5344,"impl-Debug-for-ServiceIds"],[5345,"impl-Display-for-ServiceIds"],[5373,"impl-Debug-for-ServiceError"],[5374,"impl-Display-for-ServiceError"],[5404,"impl-From%3CParseError%3E-for-ServiceError"],[5405,"impl-From%3CGroupDecodingError%3E-for-ServiceError"],[5406,"impl-From%3CDecodeError%3E-for-ServiceError"],[5407,"impl-From%3CDecodeError%3E-for-ServiceError"],[5408,"impl-From%3CSignalProtocolError%3E-for-ServiceError"],[5410,"impl-From%3CCredentialsCacheError%3E-for-ServiceError"],[5411,"impl-From%3CParseServiceAddressError%3E-for-ServiceError"],[5412,"impl-From%3CBox%3CErrorKind%3E%3E-for-ServiceError"],[5775,"impl-Debug-for-AttachmentUploadError"],[5776,"impl-Display-for-AttachmentUploadError"],[5777,"impl-Debug-for-MessageSenderError"],[5778,"impl-Display-for-MessageSenderError"],[5785,"impl-From%3CServiceError%3E-for-AttachmentUploadError"],[5787,"impl-From%3CError%3E-for-AttachmentUploadError"],[5788,"impl-From%3CServiceError%3E-for-MessageSenderError"],[5790,"impl-From%3CSignalProtocolError%3E-for-MessageSenderError"],[5791,"impl-From%3CAttachmentUploadError%3E-for-MessageSenderError"],[5878,"impl-Display-for-ParseServiceAddressError"],[5879,"impl-Debug-for-ParseServiceAddressError"],[5895,"impl-TryFrom%3C%26str%3E-for-ServiceAddress"],[5897,"impl-TryFrom%3COption%3C%26%5Bu8%5D%3E%3E-for-ServiceAddress"],[5898,"impl-TryFrom%3COption%3C%26str%3E%3E-for-ServiceAddress"]]},\
"libsignal_service_actix":{"doc":"","t":"AAADLLLLLLLLLLLLLLLLLLLLLLDENNLLLLLLLLLLLLLLLLLLLLLLL","n":["prelude","push_service","websocket","AwcPushService","borrow","borrow_mut","clone","clone_into","delete_json","from","get_from_cdn","get_json","get_protobuf","into","new","patch_json","post_json","post_to_cdn0","put_json","put_protobuf","to_owned","try_from","try_into","type_id","vzip","ws","AwcWebSocket","AwcWebSocketError","ConnectionError","ProtocolError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","into","into","send_message","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"libsignal_service_actix"],[3,"libsignal_service_actix::push_service"],[26,"libsignal_service_actix::websocket"],[53,"libsignal_service::configuration"],[54,"core::future::future"],[55,"alloc::boxed"],[56,"core::pin"],[57,"libsignal_service::push_service"],[58,"libsignal_service::configuration"],[59,"alloc::string"],[60,"libsignal_service::configuration"],[61,"serde::ser"],[62,"std::io"],[63,"core::marker"],[64,"core::marker"],[65,"core::result"],[66,"core::any"],[67,"core::fmt"],[68,"core::fmt"],[69,"awc::error"],[70,"bytes::bytes"],[71,"core::error"]],"d":["","","","","","","","","Deletes a resource through the HTTP DELETE verb.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,23,23,28,23,28,23,23,23,28,23,23,23,28,23,28,23,23,28,23,28,23,28,23,28,23],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,3,4,[5,[[2,[4,4]]]]],[[8,[[7,[6]]]]]],[-1,-1,[]],[[1,9,4],[[8,[[7,[6]]]]]],[[1,3,4,[5,[[2,[4,4]]]],10],[[8,[[7,[6]]]]]],[[1,3,4,[5,[[2,[4,4]]]],10],[[8,[[7,[6]]]]]],[-1,-2,[],[]],[[-1,[12,[11]],13],1,[[15,[14]]]],[[1,3,4,[5,[[2,[4,4]]]],10,-1],[[8,[[7,[6]]]]],16],[[1,3,4,[5,[[2,[4,4]]]],10,-1],[[8,[[7,[6]]]]],16],[[1,4,[5,[[2,[4,4]]]],[12,[[2,[4,-1]]]]],[[8,[[7,[6]]]]],[17,18]],[[1,3,4,[5,[[2,[4,4]]]],10,-1],[[8,[[7,[6]]]]],16],[[1,3,4,[5,[[2,[4,4]]]],-1],[[8,[[7,[6]]]]],[19,20]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[1,4,4,[5,[[2,[4,4]]]],[12,[11]]],[[8,[[7,[6]]]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,24],25],[[23,24],25],[-1,-1,[]],[26,23],[27,23],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,29],[[8,[[7,[6]]]]]],[23,[[12,[30]]]],[-1,13,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"AwcPushService",3],[15,"tuple"],[4,"Endpoint",53],[15,"str"],[15,"slice"],[8,"Future",54],[3,"Box",55],[3,"Pin",56],[15,"u32"],[4,"HttpAuthOverride",57],[3,"ServiceCredentials",53],[4,"Option",58],[3,"String",59],[3,"ServiceConfiguration",53],[8,"Into",60],[8,"Serialize",61],[8,"Read",62],[8,"Send",63],[8,"Sized",63],[8,"Message",64],[4,"Result",65],[3,"TypeId",66],[4,"AwcWebSocketError",26],[3,"Formatter",67],[6,"Result",67],[4,"ProtocolError",68],[4,"WsClientError",69],[3,"AwcWebSocket",26],[3,"Bytes",70],[8,"Error",71]],"b":[[34,"impl-Display-for-AwcWebSocketError"],[35,"impl-Debug-for-AwcWebSocketError"],[37,"impl-From%3CWsProtocolError%3E-for-AwcWebSocketError"],[38,"impl-From%3CWsClientError%3E-for-AwcWebSocketError"]]},\
"libsignal_service_hyper":{"doc":"","t":"AAADLLLLLLLLLLLLLLLLLLLLLLNDELLLLLLLLLLLLLLLLLLLLLL","n":["prelude","push_service","websocket","HyperPushService","borrow","borrow_mut","clone","clone_into","delete_json","from","get_from_cdn","get_json","get_protobuf","into","new","patch_json","post_json","post_to_cdn0","put_json","put_protobuf","to_owned","try_from","try_into","type_id","vzip","ws","ConnectionError","TungsteniteWebSocket","TungsteniteWebSocketError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","into","into","send_message","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"libsignal_service_hyper"],[3,"libsignal_service_hyper::push_service"],[26,"libsignal_service_hyper::websocket"],[51,"libsignal_service::configuration"],[52,"core::future::future"],[53,"alloc::boxed"],[54,"core::pin"],[55,"libsignal_service::push_service"],[56,"libsignal_service::configuration"],[57,"alloc::string"],[58,"libsignal_service::configuration"],[59,"libsignal_service"],[60,"serde::ser"],[61,"std::io"],[62,"core::marker"],[63,"core::marker"],[64,"core::result"],[65,"core::any"],[66,"core::fmt"],[67,"core::fmt"],[68,"bytes::bytes"],[69,"core::error"]],"d":["","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,0,0,28,24,28,24,24,24,28,24,24,28,24,28,24,24,28,24,28,24,28,24,28,24],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,3,4,[5,[[2,[4,4]]]]],[[8,[[7,[6]]]]]],[-1,-1,[]],[[1,9,4],[[8,[[7,[6]]]]]],[[1,3,4,[5,[[2,[4,4]]]],10],[[8,[[7,[6]]]]]],[[1,3,4,[5,[[2,[4,4]]]],10],[[8,[[7,[6]]]]]],[-1,-2,[],[]],[[-1,[12,[11]],13],1,[[15,[14]]]],[[1,3,4,[5,[[2,[4,4]]]],10,-1],[[8,[[7,[6]]]]],[16,17]],[[1,3,4,[5,[[2,[4,4]]]],10,-1],[[8,[[7,[6]]]]],[16,17]],[[1,4,[5,[[2,[4,4]]]],[12,[[2,[4,-1]]]]],[[8,[[7,[6]]]]],[18,19]],[[1,3,4,[5,[[2,[4,4]]]],10,-1],[[8,[[7,[6]]]]],[16,17]],[[1,3,4,[5,[[2,[4,4]]]],-1],[[8,[[7,[6]]]]],[20,21]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[1,4,4,[5,[[2,[4,4]]]],[12,[11]]],[[8,[[7,[6]]]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,25],26],[[24,25],26],[-1,-1,[]],[27,24],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,29],[[8,[[7,[6]]]]]],[24,[[12,[30]]]],[-1,13,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"HyperPushService",3],[15,"tuple"],[4,"Endpoint",51],[15,"str"],[15,"slice"],[8,"Future",52],[3,"Box",53],[3,"Pin",54],[15,"u32"],[4,"HttpAuthOverride",55],[3,"ServiceCredentials",51],[4,"Option",56],[3,"String",57],[3,"ServiceConfiguration",51],[8,"Into",58],[8,"MaybeSend",59],[8,"Serialize",60],[8,"Read",61],[8,"Send",62],[8,"Sized",62],[8,"Message",63],[4,"Result",64],[3,"TypeId",65],[4,"TungsteniteWebSocketError",26],[3,"Formatter",66],[6,"Result",66],[4,"Error",67],[3,"TungsteniteWebSocket",26],[3,"Bytes",68],[8,"Error",69]],"b":[[33,"impl-Display-for-TungsteniteWebSocketError"],[34,"impl-Debug-for-TungsteniteWebSocketError"]]},\
"zkgroup":{"doc":"","t":"AAACCAAAAAAACCCCCCCAAAAADLLLLLLLLLLLLLEDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLDLLLLLLLLLLLLLDLLLLLLLLLLDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLCCCCCAAADDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLCCCCCCCCCCCAAAAAAAADLLLLLLLLLLLLLLLDLLLLLLLLLLDLLMLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLEDDDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLDLLLLLLLLLLLDLLLLLLLLLLLLCCCCCAAAAADLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLDLLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAISDLLLLKLLLLLLLLKLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLGGGGGGGGGGGGGGGFFAAAAAAAAAAAAIDDDDDDDDSDDDDQDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLL","n":["api","common","crypto","ServerPublicParams","ServerSecretParams","auth","call_links","generic_server_params","groups","profiles","receipts","server_params","AnyAuthCredentialPresentation","AuthCredential","AuthCredentialPresentationV2","AuthCredentialResponse","AuthCredentialWithPni","AuthCredentialWithPniPresentation","AuthCredentialWithPniResponse","auth_credential","auth_credential_presentation","auth_credential_response","auth_credential_with_pni","auth_credential_with_pni_response","AuthCredential","borrow","borrow_mut","clone","clone_into","deserialize","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","AnyAuthCredentialPresentation","AuthCredentialPresentationV2","AuthCredentialWithPniPresentation","V2","V3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","from","from","from","from","from","get_aci_ciphertext","get_pni_ciphertext","get_pni_ciphertext","get_redemption_time","get_redemption_time","get_redemption_time","get_uuid_ciphertext","get_uuid_ciphertext","into","into","into","new","serialize","serialize","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AuthCredentialResponse","borrow","borrow_mut","deserialize","from","into","serialize","try_from","try_into","type_id","vzip","AuthCredentialWithPni","borrow","borrow_mut","clone","clone_into","deserialize","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","AuthCredentialWithPniResponse","borrow","borrow_mut","deserialize","from","into","serialize","try_from","try_into","type_id","vzip","CallLinkAuthCredential","CallLinkAuthCredentialPresentation","CallLinkAuthCredentialResponse","CallLinkPublicParams","CallLinkSecretParams","CreateCallLinkCredential","CreateCallLinkCredentialPresentation","CreateCallLinkCredentialRequest","CreateCallLinkCredentialRequestContext","CreateCallLinkCredentialResponse","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decrypt_uid","derive_from_root_key","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encrypt_uid","from","from","from","from","from","from","from","from","from","from","get_public_params","get_request","get_user_id","get_user_id","into","into","into","into","into","into","into","into","into","into","issue","issue_credential","new","present","present","receive","receive","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GenericServerPublicParams","GenericServerSecretParams","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","from","from","generate","get_public_params","into","into","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GroupMasterKey","GroupPublicParams","GroupSecretParams","ProfileKeyCiphertext","UuidCiphertext","group_params","profile_key_ciphertext","uuid_ciphertext","GroupMasterKey","GroupPublicParams","GroupSecretParams","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decrypt_blob","decrypt_blob_with_padding","decrypt_profile_key","decrypt_service_id","default","derive_from_master_key","deserialize","deserialize","deserialize","encrypt_blob","encrypt_blob_with_padding","encrypt_profile_key","encrypt_profile_key_bytes","encrypt_service_id","encrypt_uid_struct","from","from","from","generate","get_group_identifier","get_group_identifier","get_master_key","get_public_params","into","into","into","new","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ProfileKeyCiphertext","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","UuidCiphertext","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","AnyProfileKeyCredentialPresentation","ExpiringProfileKeyCredential","ExpiringProfileKeyCredentialPresentation","ExpiringProfileKeyCredentialResponse","ProfileKey","ProfileKeyCommitment","ProfileKeyCredentialPresentationV1","ProfileKeyCredentialPresentationV2","ProfileKeyCredentialRequest","ProfileKeyCredentialRequestContext","ProfileKeyVersion","expiring_profile_key_credential","expiring_profile_key_credential_response","profile_key","profile_key_commitment","profile_key_credential_presentation","profile_key_credential_request","profile_key_credential_request_context","profile_key_version","ExpiringProfileKeyCredential","aci","borrow","borrow_mut","clone","clone_into","deserialize","from","get_expiration_time","into","serialize","to_owned","try_from","try_into","type_id","vzip","ExpiringProfileKeyCredentialResponse","borrow","borrow_mut","deserialize","from","into","serialize","try_from","try_into","type_id","vzip","ProfileKey","borrow","borrow_mut","bytes","clone","clone_into","create","derive_access_key","deserialize","from","generate","get_bytes","get_commitment","get_profile_key_version","into","serialize","to_owned","try_from","try_into","type_id","vzip","ProfileKeyCommitment","borrow","borrow_mut","clone","clone_into","deserialize","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","AnyProfileKeyCredentialPresentation","ExpiringProfileKeyCredentialPresentation","ProfileKeyCredentialPresentationV1","ProfileKeyCredentialPresentationV2","V1","V2","V3","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","from","from","from","from","from","from","from","get_expiration_time","get_profile_key_ciphertext","get_profile_key_ciphertext","get_profile_key_ciphertext","get_profile_key_ciphertext","get_uuid_ciphertext","get_uuid_ciphertext","get_uuid_ciphertext","get_uuid_ciphertext","into","into","into","into","new","serialize","serialize","serialize","serialize","to_structurally_valid_v1_presentation_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ProfileKeyCredentialRequest","borrow","borrow_mut","deserialize","from","into","serialize","try_from","try_into","type_id","vzip","ProfileKeyCredentialRequestContext","borrow","borrow_mut","deserialize","from","get_request","into","serialize","try_from","try_into","type_id","vzip","ProfileKeyVersion","borrow","borrow_mut","clone","clone_into","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","ReceiptCredential","ReceiptCredentialPresentation","ReceiptCredentialRequest","ReceiptCredentialRequestContext","ReceiptCredentialResponse","receipt_credential","receipt_credential_presentation","receipt_credential_request","receipt_credential_request_context","receipt_credential_response","ReceiptCredential","borrow","borrow_mut","clone","clone_into","deserialize","from","get_receipt_expiration_time","get_receipt_level","into","serialize","to_owned","try_from","try_into","type_id","vzip","ReceiptCredentialPresentation","borrow","borrow_mut","deserialize","from","get_receipt_expiration_time","get_receipt_level","get_receipt_serial_bytes","get_receipt_struct","into","serialize","try_from","try_into","type_id","vzip","ReceiptCredentialRequest","borrow","borrow_mut","deserialize","from","into","serialize","try_from","try_into","type_id","vzip","ReceiptCredentialRequestContext","borrow","borrow_mut","deserialize","from","get_request","into","serialize","try_from","try_into","type_id","vzip","ReceiptCredentialResponse","borrow","borrow_mut","deserialize","from","into","serialize","try_from","try_into","type_id","vzip","ServerPublicParams","ServerSecretParams","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_auth_credential_presentation","create_auth_credential_presentation_v2","create_auth_credential_with_pni_presentation","create_expiring_profile_key_credential_presentation","create_profile_key_credential_request_context","create_receipt_credential_presentation","create_receipt_credential_request_context","deserialize","deserialize","from","from","generate","get_public_params","into","into","issue_auth_credential","issue_auth_credential_with_pni_as_aci","issue_auth_credential_with_pni_as_service_id","issue_expiring_profile_key_credential","issue_receipt_credential","receive_auth_credential","receive_auth_credential_with_pni_as_aci","receive_auth_credential_with_pni_as_service_id","receive_expiring_profile_key_credential","receive_receipt_credential","serialize","serialize","sign","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify_auth_credential_presentation","verify_auth_credential_presentation_v2","verify_auth_credential_with_pni_presentation","verify_expiring_profile_key_credential_presentation","verify_profile_key_credential_presentation","verify_receipt_credential_presentation","verify_signature","vzip","vzip","array_utils","constants","errors","sho","simple_types","ArrayLike","LEN","OneBased","borrow","borrow_mut","clone","clone_into","create","create","default","deserialize","eq","fmt","from","index","into","iter","iter","serialize","to_owned","try_from","try_into","type_id","vzip","ACCESS_KEY_LEN","AESGCM_NONCE_LEN","AESGCM_TAG_LEN","AES_KEY_LEN","AUTH_CREDENTIAL_LEN","AUTH_CREDENTIAL_PRESENTATION_V2_LEN","AUTH_CREDENTIAL_RESPONSE_LEN","AUTH_CREDENTIAL_WITH_PNI_LEN","AUTH_CREDENTIAL_WITH_PNI_RESPONSE_LEN","EXPIRING_PROFILE_KEY_CREDENTIAL_LEN","EXPIRING_PROFILE_KEY_CREDENTIAL_RESPONSE_LEN","GROUP_IDENTIFIER_LEN","GROUP_MASTER_KEY_LEN","GROUP_PUBLIC_PARAMS_LEN","GROUP_SECRET_PARAMS_LEN","NUM_AUTH_CRED_ATTRIBUTES","NUM_PROFILE_KEY_CRED_ATTRIBUTES","NUM_RECEIPT_CRED_ATTRIBUTES","PRESENTATION_VERSION_1","PRESENTATION_VERSION_2","PRESENTATION_VERSION_3","PROFILE_KEY_CIPHERTEXT_LEN","PROFILE_KEY_COMMITMENT_LEN","PROFILE_KEY_CREDENTIAL_PRESENTATION_V2_LEN","PROFILE_KEY_CREDENTIAL_REQUEST_CONTEXT_LEN","PROFILE_KEY_CREDENTIAL_REQUEST_LEN","PROFILE_KEY_LEN","PROFILE_KEY_VERSION_ENCODED_LEN","PROFILE_KEY_VERSION_LEN","RANDOMNESS_LEN","RECEIPT_CREDENTIAL_LEN","RECEIPT_CREDENTIAL_PRESENTATION_LEN","RECEIPT_CREDENTIAL_REQUEST_CONTEXT_LEN","RECEIPT_CREDENTIAL_REQUEST_LEN","RECEIPT_CREDENTIAL_RESPONSE_LEN","RECEIPT_SERIAL_LEN","RESERVED_LEN","SECONDS_PER_DAY","SERVER_PUBLIC_PARAMS_LEN","SERVER_SECRET_PARAMS_LEN","SIGNATURE_LEN","TEST_ARRAY_16","TEST_ARRAY_16_1","TEST_ARRAY_32","TEST_ARRAY_32_1","TEST_ARRAY_32_2","TEST_ARRAY_32_3","TEST_ARRAY_32_4","TEST_ARRAY_32_5","UUID_CIPHERTEXT_LEN","UUID_LEN","ZkGroupDeserializationFailure","ZkGroupVerificationFailure","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","into","into","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Sho","absorb_and_ratchet","borrow","borrow_mut","from","get_point","get_point_single_elligator","get_scalar","into","new","squeeze","try_from","try_into","type_id","vzip","AesKeyBytes","CoarseRedemptionTime","GroupIdentifierBytes","GroupMasterKeyBytes","NotarySignatureBytes","ProfileKeyBytes","ProfileKeyVersionBytes","ProfileKeyVersionEncodedBytes","RandomnessBytes","ReceiptLevel","ReceiptSerialBytes","ReservedBytes","SignatureBytes","Timestamp","UidBytes","encode_receipt_serial_bytes","encode_redemption_time","credentials","profile_key_commitment","profile_key_credential_request","profile_key_encryption","profile_key_struct","proofs","receipt_credential_request","receipt_struct","signature","timestamp_struct","uid_encryption","uid_struct","AttrScalars","AuthCredential","AuthCredentialWithPni","BlindedExpiringProfileKeyCredential","BlindedExpiringProfileKeyCredentialWithSecretNonce","BlindedReceiptCredential","BlindedReceiptCredentialWithSecretNonce","ExpiringProfileKeyCredential","KeyPair","NUM_ATTRS","PniCredential","ProfileKeyCredential","PublicKey","ReceiptCredential","Storage","SystemParams","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_auth_credential","create_auth_credential_with_pni","create_blinded_expiring_profile_key_credential","create_blinded_receipt_credential","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","generate","get_blinded_expiring_profile_key_credential","get_blinded_receipt_credential","get_hardcoded","get_public_key","into","into","into","into","into","into","into","into","into","into","into","into","into","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Commitment","CommitmentWithSecretNonce","SystemParams","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calc_j3","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","from","from","from","generate","get_hardcoded","get_profile_key_commitment","into","into","into","new","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Ciphertext","CiphertextWithSecretNonce","KeyPair","PublicKey","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decrypt_blinded_expiring_profile_key_credential","deserialize","deserialize","deserialize","deserialize","encrypt","eq","eq","eq","eq","from","from","from","from","generate","get_ciphertext","get_public_key","into","into","into","into","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Ciphertext","KeyPair","PublicKey","SystemParams","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decrypt","default","derive_from","deserialize","deserialize","deserialize","deserialize","encrypt","eq","eq","eq","eq","from","from","from","from","generate","get_hardcoded","get_public_key","into","into","into","into","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ProfileKeyStruct","borrow","borrow_mut","calc_M3","clone","clone_into","conditional_select","default","deserialize","eq","from","into","new","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","AuthCredentialIssuanceProof","AuthCredentialPresentationProofV2","AuthCredentialWithPniIssuanceProof","AuthCredentialWithPniPresentationProof","ExpiringProfileKeyCredentialIssuanceProof","ExpiringProfileKeyCredentialPresentationProof","ProfileKeyCredentialPresentationProofV1","ProfileKeyCredentialPresentationProofV2","ProfileKeyCredentialRequestProof","ReceiptCredentialIssuanceProof","ReceiptCredentialPresentationProof","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","from","from","from","from","from","from","from","from","from","from","from","get_poksho_statement","get_poksho_statement","get_poksho_statement","get_poksho_statement","get_poksho_statement","get_poksho_statement","get_poksho_statement","get_poksho_statement","get_poksho_statement","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","verify","verify","verify","verify","verify","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Ciphertext","CiphertextWithSecretNonce","KeyPair","PublicKey","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decrypt_blinded_receipt_credential","deserialize","deserialize","deserialize","deserialize","encrypt","eq","eq","eq","eq","from","from","from","from","generate","get_ciphertext","get_public_key","into","into","into","into","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ReceiptStruct","borrow","borrow_mut","calc_m1","calc_m1_from","clone","clone_into","deserialize","eq","from","into","new","serialize","to_owned","try_from","try_into","type_id","vzip","KeyPair","PublicKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","from","from","generate","get_public_key","into","into","serialize","serialize","sign","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","TimestampStruct","borrow","borrow_mut","calc_m","calc_m_from","clone","clone_into","deserialize","eq","from","into","new","serialize","to_owned","try_from","try_into","type_id","vzip","A","A","Ciphertext","G_a","G_a","KeyPair","PublicKey","SystemParams","a","as_points","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decrypt","default","derive_from","deserialize","deserialize","deserialize","deserialize","encrypt","eq","eq","eq","eq","from","from","from","from","generate","get_hardcoded","get_public_key","id","id","into","into","into","into","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","UidStruct","as_points","borrow","borrow_mut","calc_M1","clone","clone_into","deserialize","eq","from","from_service_id","into","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"zkgroup"],[3,"zkgroup::api"],[12,"zkgroup::api::auth"],[24,"zkgroup::api::auth::auth_credential"],[38,"zkgroup::api::auth::auth_credential_presentation"],[83,"zkgroup::api::auth::auth_credential_response"],[94,"zkgroup::api::auth::auth_credential_with_pni"],[108,"zkgroup::api::auth::auth_credential_with_pni_response"],[119,"zkgroup::api::call_links"],[251,"zkgroup::api::generic_server_params"],[275,"zkgroup::api::groups"],[283,"zkgroup::api::groups::group_params"],[343,"zkgroup::api::groups::profile_key_ciphertext"],[359,"zkgroup::api::groups::uuid_ciphertext"],[375,"zkgroup::api::profiles"],[394,"zkgroup::api::profiles::expiring_profile_key_credential"],[410,"zkgroup::api::profiles::expiring_profile_key_credential_response"],[421,"zkgroup::api::profiles::profile_key"],[442,"zkgroup::api::profiles::profile_key_commitment"],[456,"zkgroup::api::profiles::profile_key_credential_presentation"],[516,"zkgroup::api::profiles::profile_key_credential_request"],[527,"zkgroup::api::profiles::profile_key_credential_request_context"],[539,"zkgroup::api::profiles::profile_key_version"],[552,"zkgroup::api::receipts"],[562,"zkgroup::api::receipts::receipt_credential"],[578,"zkgroup::api::receipts::receipt_credential_presentation"],[593,"zkgroup::api::receipts::receipt_credential_request"],[604,"zkgroup::api::receipts::receipt_credential_request_context"],[616,"zkgroup::api::receipts::receipt_credential_response"],[627,"zkgroup::api::server_params"],[682,"zkgroup::common"],[687,"zkgroup::common::array_utils"],[711,"zkgroup::common::constants"],[762,"zkgroup::common::errors"],[786,"zkgroup::common::sho"],[801,"zkgroup::common::simple_types"],[818,"zkgroup::crypto"],[830,"zkgroup::crypto::credentials"],[1038,"zkgroup::crypto::profile_key_commitment"],[1088,"zkgroup::crypto::profile_key_credential_request"],[1153,"zkgroup::crypto::profile_key_encryption"],[1220,"zkgroup::crypto::profile_key_struct"],[1240,"zkgroup::crypto::proofs"],[1421,"zkgroup::crypto::receipt_credential_request"],[1486,"zkgroup::crypto::receipt_struct"],[1504,"zkgroup::crypto::signature"],[1538,"zkgroup::crypto::timestamp_struct"],[1556,"zkgroup::crypto::uid_encryption"],[1631,"zkgroup::crypto::uid_struct"],[1649,"core::result"],[1650,"serde::de"],[1651,"serde::ser"],[1652,"core::any"],[1653,"core::option"],[1654,"libsignal_protocol::address"],[1655,"alloc::vec"],[1656,"libsignal_protocol::address"],[1657,"core::ops::function"],[1658,"core::default"],[1659,"serde::de"],[1660,"core::fmt"],[1661,"core::fmt"],[1662,"core::slice::iter"],[1663,"serde::ser"],[1664,"curve25519_dalek::ristretto"],[1665,"curve25519_dalek::scalar"],[1666,"subtle"],[1667,"poksho::statement"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Like <code>ProfileKeyCredentialPresentationV1</code>, but with an …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Abstracts over fixed-length arrays (and similar types) …","","A wrapper around an array or slice to use one-based …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Seconds in a 24-hour cycle (ignoring leap seconds).","","","","","","","","","","","","","","Deserialization failure in zkgroup","Verification failure in zkgroup","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Measured in days past the epoch.","","","","","","","","","","","","Measured in seconds past the epoch.","","","","","","","","","","","","","","","","Used to specialize a <code>KeyPair&lt;S&gt;</code> to support a certain …","","","","","","","","","The number of attributes supported in this system.","Unused, kept only because ServerSecretParams contains a …","Unused, kept only because ServerSecretParams contains a …","","","The storage (should be a fixed-size array of Scalar).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Deprecated; use …","Deprecated; use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The full set of information known by the client after …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,9,9,9,7,8,9,7,8,7,8,9,9,9,7,8,8,9,8,9,7,8,9,7,9,7,8,9,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,0,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,24,25,26,27,28,29,30,31,20,21,24,25,26,27,28,29,30,31,20,21,20,21,20,21,20,20,24,25,26,27,28,29,30,31,20,21,20,24,25,26,27,28,29,30,31,20,21,20,27,26,31,24,25,26,27,28,29,30,31,20,21,28,24,27,25,30,24,27,24,25,26,27,28,29,30,31,20,21,20,21,24,25,26,27,28,29,30,31,20,21,24,25,26,27,28,29,30,31,20,21,24,25,26,27,28,29,30,31,20,21,26,31,24,25,26,27,28,29,30,31,20,21,0,0,32,34,32,34,32,34,32,34,32,32,32,34,32,34,32,34,32,34,32,34,32,34,0,0,0,0,0,0,0,0,0,0,0,35,36,37,35,36,37,35,36,37,35,36,37,36,36,36,36,35,36,35,36,37,36,36,36,36,36,36,35,36,37,36,36,37,36,36,35,36,37,35,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,55,55,55,55,52,53,54,55,52,53,54,52,53,54,55,55,55,55,52,53,54,54,55,52,53,54,55,52,53,54,55,52,53,54,55,55,52,53,54,55,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,0,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,0,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,63,63,63,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,65,65,65,65,65,65,65,0,0,66,67,66,67,66,67,66,67,67,67,67,67,67,67,67,66,67,66,67,66,66,66,67,66,66,66,66,66,67,67,67,67,67,66,67,66,66,67,66,67,66,67,66,67,66,66,66,66,66,66,67,66,67,0,0,0,0,0,0,73,0,70,70,70,70,73,70,70,70,70,70,70,70,70,73,70,70,70,70,70,70,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,16,23,16,23,23,16,16,23,16,23,16,23,16,23,16,23,16,23,16,23,16,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,90,0,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,89,89,89,89,88,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,89,96,100,88,89,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,88,89,91,92,93,94,95,96,97,98,99,100,101,0,0,0,107,108,109,107,108,109,108,107,108,109,107,108,109,107,108,109,107,108,109,107,108,109,107,107,108,107,108,109,108,107,108,109,107,108,109,107,108,109,107,108,109,107,108,109,107,108,109,0,0,0,0,111,102,112,103,111,102,112,103,111,102,112,103,111,102,112,103,111,111,102,112,103,111,111,102,112,103,111,102,112,103,111,112,111,111,102,112,103,111,102,112,103,111,102,112,103,111,102,112,103,111,102,112,103,111,102,112,103,111,102,112,103,0,0,0,0,113,114,115,116,113,114,115,116,113,114,115,116,113,114,115,116,114,116,114,113,114,115,116,114,113,114,115,116,113,114,115,116,113,113,114,113,114,115,116,113,114,115,116,113,114,115,116,113,114,115,116,113,114,115,116,113,114,115,116,113,114,115,116,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,0,0,0,0,0,0,0,0,0,0,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,125,126,127,128,118,119,120,121,122,123,124,127,128,118,119,120,121,122,123,124,125,126,127,128,0,0,0,0,133,104,134,105,133,104,134,105,133,104,134,105,133,104,134,105,133,133,104,134,105,133,133,104,134,105,133,104,134,105,133,134,133,133,104,134,105,133,104,134,105,133,104,134,105,133,104,134,105,133,104,134,105,133,104,134,105,133,104,134,105,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,135,136,135,136,135,136,135,136,135,136,135,136,135,136,135,135,135,136,135,136,135,135,136,135,136,135,136,135,136,136,135,136,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,130,132,0,130,132,0,0,0,130,131,139,130,132,131,139,130,132,131,139,130,132,131,139,130,132,131,130,131,130,139,130,132,131,130,139,130,132,131,139,130,132,131,139,139,130,130,132,139,130,132,131,139,130,132,131,139,130,132,131,139,130,132,131,139,130,132,131,139,130,132,131,139,130,132,131,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[-1,[[3,[1]]],4],[-1,-1,[]],[-1,-2,[],[]],[[1,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[7]]],4],[-1,[[3,[8]]],4],[-1,-1,[]],[7,9],[8,9],[-1,-1,[]],[-1,-1,[]],[8,10],[9,[[11,[10]]]],[8,10],[9,12],[7,13],[8,12],[9,10],[7,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[14]]],[[3,[9,16]]]],[[9,-1],3,5],[[7,-1],3,5],[[8,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[17]]],4],[-1,-1,[]],[-1,-2,[],[]],[[17,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[18,18],[[-1,-2],2,[],[]],[-1,[[3,[18]]],4],[-1,-1,[]],[-1,-2,[],[]],[[18,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[19]]],4],[-1,-1,[]],[-1,-2,[],[]],[[19,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[21,21],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[20,10],[[3,[22,23]]]],[[[15,[14]]],20],[-1,[[3,[24]]],4],[-1,[[3,[25]]],4],[-1,[[3,[26]]],4],[-1,[[3,[27]]],4],[-1,[[3,[28]]],4],[-1,[[3,[29]]],4],[-1,[[3,[30]]],4],[-1,[[3,[31]]],4],[-1,[[3,[20]]],4],[-1,[[3,[21]]],4],[[20,22],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,21],[27,28],[26,10],[31,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,22,12,32,33],29],[[22,12,32,33],24],[[[15,[14]],33],27],[[25,22,12,34,20,33],26],[[30,[15,[14]],22,34,20,33],31],[[24,22,12,34],[[3,[25,23]]]],[[27,29,22,34],[[3,[30,23]]]],[[24,-1],3,5],[[25,-1],3,5],[[26,-1],3,5],[[27,-1],3,5],[[28,-1],3,5],[[29,-1],3,5],[[30,-1],3,5],[[31,-1],3,5],[[20,-1],3,5],[[21,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[26,12,32,21],[[3,[2,23]]]],[[31,[15,[14]],12,32,21],[[3,[2,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[32]]],4],[-1,[[3,[34]]],4],[-1,-1,[]],[-1,-1,[]],[33,32],[32,34],[-1,-2,[],[]],[-1,-2,[],[]],[[32,-1],3,5],[[34,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[36,36],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[36,[15,[14]]],[[3,[[38,[14]],23]]]],[[36,[15,[14]]],[[3,[[38,[14]],23]]]],[[36,39,22],[[3,[40,23]]]],[[36,10],[[3,[41,23]]]],[[],35],[35,36],[-1,[[3,[35]]],4],[-1,[[3,[36]]],4],[-1,[[3,[37]]],4],[[36,33,[15,[14]]],[[38,[14]]]],[[36,33,[15,[14]],42],[[38,[14]]]],[[36,40,22],39],[[36,43,22],39],[[36,41],10],[[36,44],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[33,36],[36,45],[37,45],[36,35],[36,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[14]]],35],[[35,-1],3,5],[[36,-1],3,5],[[37,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[39,39],[[-1,-2],2,[],[]],[[],39],[-1,[[3,[39]]],4],[[39,39],47],[-1,-1,[]],[-1,-2,[],[]],[[39,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[[-1,-2],2,[],[]],[[],10],[-1,[[3,[10]]],4],[[10,10],47],[-1,-1,[]],[-1,-2,[],[]],[[10,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[48,22],[-1,-2,[],[]],[-1,-2,[],[]],[48,48],[[-1,-2],2,[],[]],[-1,[[3,[48]]],4],[-1,-1,[]],[48,12],[-1,-2,[],[]],[[48,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[49]]],4],[-1,-1,[]],[-1,-2,[],[]],[[49,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[40,40],[[-1,-2],2,[],[]],[43,40],[40,[[46,[14]]]],[-1,[[3,[40]]],4],[-1,-1,[]],[33,40],[40,43],[[40,22],50],[[40,22],51],[-1,-2,[],[]],[[40,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[50,50],[[-1,-2],2,[],[]],[-1,[[3,[50]]],4],[-1,-1,[]],[-1,-2,[],[]],[[50,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[52]]],4],[-1,[[3,[53]]],4],[-1,[[3,[54]]],4],[53,55],[-1,-1,[]],[54,55],[52,55],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[54,12],[55,39],[52,39],[53,39],[54,39],[55,10],[52,10],[53,10],[54,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[14]]],[[3,[55,16]]]],[[55,-1],3,5],[[52,-1],3,5],[[53,-1],3,5],[[54,-1],3,5],[55,[[38,[14]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[56]]],4],[-1,-1,[]],[-1,-2,[],[]],[[56,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[57]]],4],[-1,-1,[]],[57,56],[-1,-2,[],[]],[[57,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[51,51],[[-1,-2],2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[51,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[[-1,-2],2,[],[]],[-1,[[3,[58]]],4],[-1,-1,[]],[58,12],[58,59],[-1,-2,[],[]],[[58,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[60]]],4],[-1,-1,[]],[60,12],[60,59],[60,61],[60,62],[-1,-2,[],[]],[[60,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[63]]],4],[-1,-1,[]],[-1,-2,[],[]],[[63,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[64]]],4],[-1,-1,[]],[64,63],[-1,-2,[],[]],[[64,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[65]]],4],[-1,-1,[]],[-1,-2,[],[]],[[65,-1],3,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[67,67],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[67,33,36,1],9],[[67,33,36,1],7],[[67,33,36,18],8],[[67,33,36,48],54],[[67,33,22,40],57],[[67,33,58],60],[[67,33,61],64],[-1,[[3,[66]]],4],[-1,[[3,[67]]],4],[-1,-1,[]],[-1,-1,[]],[33,66],[66,67],[-1,-2,[],[]],[-1,-2,[],[]],[[66,33,22,13],17],[[66,33,22,68,12],19],[[66,33,22,68,12],19],[[66,33,56,22,50,12],[[3,[49,23]]]],[[66,33,63,12,59],65],[[67,22,13,17],[[3,[1,23]]]],[[67,22,68,12,19],[[3,[18,23]]]],[[67,22,68,12,19],[[3,[18,23]]]],[[67,57,49,12],[[3,[48,23]]]],[[67,64,65],[[3,[58,23]]]],[[66,-1],3,5],[[67,-1],3,5],[[66,33,[15,[14]]],69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[[66,37,9,12],[[3,[2,23]]]],[[66,37,7,13],[[3,[2,23]]]],[[66,37,8,12],[[3,[2,23]]]],[[66,37,54,12],[[3,[2,23]]]],[[66,37,55,12],[[3,[2,23]]]],[[66,60],[[3,[2,23]]]],[[67,[15,[14]],69],[[3,[2,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[70,[-1]]],[[70,[-1]]],71],[[-1,-2],2,[],[]],[-1,-2,72,[]],[-1,[[70,[-3]]],72,[],[[73,[-2]]]],[[],[[70,[-1]]],74],[-1,[[3,[[70,[-2]]]]],4,75],[[[70,[-1]],[70,[-1]]],47,76],[[[70,[-1]],77],78,79],[-1,-1,[]],[[[70,[-1]],80],[],[[81,[80]]]],[-1,-2,[],[]],[-1,[[82,[-2]]],[],[]],[[[70,[-2]]],[[82,[-1]]],[],[[73,[-1]]]],[[[70,[-1]],-2],3,83,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,77],78],[[23,77],78],[[16,77],78],[[16,77],78],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,84,[]],[-1,84,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[85,[15,[14]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[85,86],[85,86],[85,87],[-1,-2,[],[]],[[[15,[14]],[15,[14]]],85],[[85,80],[[38,[14]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,87],[42,87],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[88,88],[[[89,[-1]]],[[89,[-1]]],90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[89,[92]],44,13,85],92],[[[89,[93]],44,44,12,85],93],[[[89,[95]],44,102,103,12,85],96],[[[89,[99]],104,105,12,59,85],100],[[],88],[-1,[[3,[88]]],4],[-1,[[3,[[89,[-2]]]]],4,90],[-1,[[3,[91]]],4],[-1,[[3,[92]]],4],[-1,[[3,[93]]],4],[-1,[[3,[94]]],4],[-1,[[3,[95]]],4],[-1,[[3,[96]]],4],[-1,[[3,[97]]],4],[-1,[[3,[98]]],4],[-1,[[3,[99]]],4],[-1,[[3,[100]]],4],[-1,[[3,[101]]],4],[[88,88],47],[[[89,[-1]],[89,[-1]]],47,90],[[91,91],47],[[92,92],47],[[93,93],47],[[94,94],47],[[95,95],47],[[96,96],47],[[97,97],47],[[98,98],47],[[99,99],47],[[100,100],47],[[101,101],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[85,[[89,[-1]]],90],[96,97],[100,101],[[],88],[[[89,[-1]]],91,90],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[88,-1],3,5],[[[89,[-1]],-2],3,90,5],[[91,-1],3,5],[[92,-1],3,5],[[93,-1],3,5],[[94,-1],3,5],[[95,-1],3,5],[[96,-1],3,5],[[97,-1],3,5],[[98,-1],3,5],[[99,-1],3,5],[[100,-1],3,5],[[101,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[43,106],87],[107,107],[108,108],[109,109],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[3,[107]]],4],[-1,[[3,[108]]],4],[-1,[[3,[109]]],4],[[107,107],47],[[108,108],47],[[109,109],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],107],[[],107],[108,109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[110,106],108],[[107,-1],3,5],[[108,-1],3,5],[[109,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,111],[102,102],[112,112],[103,103],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[111,97],95],[-1,[[3,[111]]],4],[-1,[[3,[102]]],4],[-1,[[3,[112]]],4],[-1,[[3,[103]]],4],[[111,110,85],112],[[111,111],47],[[102,102],47],[[112,112],47],[[103,103],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[85,111],[112,103],[111,102],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,-1],3,5],[[102,-1],3,5],[[112,-1],3,5],[[103,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[113,113],[114,114],[115,115],[116,116],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[114,116,106],[[3,[110,23]]]],[[],116],[85,114],[-1,[[3,[113]]],4],[-1,[[3,[114]]],4],[-1,[[3,[115]]],4],[-1,[[3,[116]]],4],[[114,110],116],[[113,113],47],[[114,114],47],[[115,115],47],[[116,116],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],113],[[],113],[114,115],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[113,-1],3,5],[[114,-1],3,5],[[115,-1],3,5],[[116,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[43,106],86],[110,110],[[-1,-2],2,[],[]],[[110,110,117],110],[[],110],[-1,[[3,[110]]],4],[[110,110],47],[-1,-1,[]],[-1,-2,[],[]],[[43,106],110],[[110,-1],3,5],[110,43],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[3,[118]]],4],[-1,[[3,[119]]],4],[-1,[[3,[120]]],4],[-1,[[3,[121]]],4],[-1,[[3,[122]]],4],[-1,[[3,[123]]],4],[-1,[[3,[124]]],4],[-1,[[3,[125]]],4],[-1,[[3,[126]]],4],[-1,[[3,[127]]],4],[-1,[[3,[128]]],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[92]],92,44,13,85],118],[[[89,[93]],93,44,44,12,85],119],[[111,112,108,85],120],[[[89,[95]],102,103,96,44,12,85],121],[[[89,[99]],104,105,100,12,59,85],122],[[91,130,92,44,131,13,85],123],[[91,130,93,44,131,44,131,12,85],124],[[130,114,91,95,131,116,106,43,85],127],[[91,99,85],128],[[118,-1],3,5],[[119,-1],3,5],[[120,-1],3,5],[[121,-1],3,5],[[122,-1],3,5],[[123,-1],3,5],[[124,-1],3,5],[[125,-1],3,5],[[126,-1],3,5],[[127,-1],3,5],[[128,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[118,91,92,44,13],[[3,[2,23]]]],[[119,91,93,44,44,12],[[3,[2,23]]]],[[120,102,103,109],[[3,[2,23]]]],[[121,91,102,106,103,97,12],[[3,[2,23]]]],[[122,91,104,105,101,62],[[3,[2,23]]]],[[123,[89,[92]],132,131,13],[[3,[2,23]]]],[[124,[89,[93]],132,131,131,12],[[3,[2,23]]]],[[127,[89,[95]],131,132,116,115,12],[[3,[2,23]]]],[[128,[89,[99]],62],[[3,[2,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[133,133],[104,104],[134,134],[105,105],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[133,101],99],[-1,[[3,[133]]],4],[-1,[[3,[104]]],4],[-1,[[3,[134]]],4],[-1,[[3,[105]]],4],[[133,61,85],134],[[133,133],47],[[104,104],47],[[134,134],47],[[105,105],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[85,133],[134,105],[133,104],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[133,-1],3,5],[[104,-1],3,5],[[134,-1],3,5],[[105,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[62,87],[[12,59],87],[62,62],[[-1,-2],2,[],[]],[-1,[[3,[62]]],4],[[62,62],47],[-1,-1,[]],[-1,-2,[],[]],[[61,12,59],62],[[62,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[135,135],[136,136],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[3,[135]]],4],[-1,[[3,[136]]],4],[[135,135],47],[[136,136],47],[-1,-1,[]],[-1,-1,[]],[85,135],[135,136],[-1,-2,[],[]],[-1,-2,[],[]],[[135,-1],3,5],[[136,-1],3,5],[[135,[15,[14]],85],137],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[[136,[15,[14]],137],[[3,[2,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[138,87],[12,87],[138,138],[[-1,-2],2,[],[]],[-1,[[3,[138]]],4],[[138,138],47],[-1,-1,[]],[-1,-2,[],[]],[12,138],[[138,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],[130,86],[132,86],0,[130,[[46,[86]]]],[132,[[46,[86]]]],0,0,0,[130,[[46,[87]]]],[131,[[46,[86]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,139],[130,130],[132,132],[131,131],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[130,131],[[3,[41,23]]]],[[],131],[85,130],[-1,[[3,[139]]],4],[-1,[[3,[130]]],4],[-1,[[3,[132]]],4],[-1,[[3,[131]]],4],[[130,44],131],[[139,139],47],[[130,130],47],[[132,132],47],[[131,131],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],139],[[],139],[130,132],[130,140],[132,140],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[139,-1],3,5],[[130,-1],3,5],[[132,-1],3,5],[[131,-1],3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[44,[[46,[86]]]],[-1,-2,[],[]],[-1,-2,[],[]],[41,86],[44,44],[[-1,-2],2,[],[]],[-1,[[3,[44]]],4],[[44,44],47],[-1,-1,[]],[41,44],[-1,-2,[],[]],[[44,-1],3,5],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"AuthCredential",24],[15,"tuple"],[4,"Result",1649],[8,"Deserializer",1650],[8,"Serializer",1651],[3,"TypeId",1652],[3,"AuthCredentialPresentationV2",38],[3,"AuthCredentialWithPniPresentation",38],[4,"AnyAuthCredentialPresentation",38],[3,"UuidCiphertext",359],[4,"Option",1653],[6,"Timestamp",801],[6,"CoarseRedemptionTime",801],[15,"u8"],[15,"slice"],[3,"ZkGroupDeserializationFailure",762],[3,"AuthCredentialResponse",83],[3,"AuthCredentialWithPni",94],[3,"AuthCredentialWithPniResponse",108],[3,"CallLinkSecretParams",119],[3,"CallLinkPublicParams",119],[6,"Aci",1654],[3,"ZkGroupVerificationFailure",762],[3,"CallLinkAuthCredentialResponse",119],[3,"CallLinkAuthCredential",119],[3,"CallLinkAuthCredentialPresentation",119],[3,"CreateCallLinkCredentialRequestContext",119],[3,"CreateCallLinkCredentialRequest",119],[3,"CreateCallLinkCredentialResponse",119],[3,"CreateCallLinkCredential",119],[3,"CreateCallLinkCredentialPresentation",119],[3,"GenericServerSecretParams",251],[6,"RandomnessBytes",801],[3,"GenericServerPublicParams",251],[3,"GroupMasterKey",283],[3,"GroupSecretParams",283],[3,"GroupPublicParams",283],[3,"Vec",1655],[3,"ProfileKeyCiphertext",343],[3,"ProfileKey",421],[4,"ServiceId",1654],[15,"u32"],[6,"ProfileKeyBytes",801],[3,"UidStruct",1631],[6,"GroupIdentifierBytes",801],[15,"array"],[15,"bool"],[3,"ExpiringProfileKeyCredential",394],[3,"ExpiringProfileKeyCredentialResponse",410],[3,"ProfileKeyCommitment",442],[3,"ProfileKeyVersion",539],[3,"ProfileKeyCredentialPresentationV1",456],[3,"ProfileKeyCredentialPresentationV2",456],[3,"ExpiringProfileKeyCredentialPresentation",456],[4,"AnyProfileKeyCredentialPresentation",456],[3,"ProfileKeyCredentialRequest",516],[3,"ProfileKeyCredentialRequestContext",527],[3,"ReceiptCredential",562],[6,"ReceiptLevel",801],[3,"ReceiptCredentialPresentation",578],[6,"ReceiptSerialBytes",801],[3,"ReceiptStruct",1486],[3,"ReceiptCredentialRequest",593],[3,"ReceiptCredentialRequestContext",604],[3,"ReceiptCredentialResponse",616],[3,"ServerSecretParams",627],[3,"ServerPublicParams",627],[6,"Pni",1654],[6,"NotarySignatureBytes",801],[3,"OneBased",687],[8,"Clone",1656],[8,"FnMut",1657],[8,"ArrayLike",687],[8,"Default",1658],[8,"Deserialize",1650],[8,"PartialEq",1659],[3,"Formatter",1660],[6,"Result",1660],[8,"Debug",1660],[15,"usize"],[8,"Index",1661],[3,"Iter",1662],[8,"Serialize",1651],[3,"String",1663],[3,"Sho",786],[3,"RistrettoPoint",1664],[3,"Scalar",1665],[3,"SystemParams",830],[3,"KeyPair",830],[8,"AttrScalars",830],[3,"PublicKey",830],[3,"AuthCredential",830],[3,"AuthCredentialWithPni",830],[3,"ProfileKeyCredential",830],[3,"ExpiringProfileKeyCredential",830],[3,"BlindedExpiringProfileKeyCredentialWithSecretNonce",830],[3,"BlindedExpiringProfileKeyCredential",830],[3,"PniCredential",830],[3,"ReceiptCredential",830],[3,"BlindedReceiptCredentialWithSecretNonce",830],[3,"BlindedReceiptCredential",830],[3,"PublicKey",1088],[3,"Ciphertext",1088],[3,"PublicKey",1421],[3,"Ciphertext",1421],[6,"UidBytes",801],[3,"SystemParams",1038],[3,"CommitmentWithSecretNonce",1038],[3,"Commitment",1038],[3,"ProfileKeyStruct",1220],[3,"KeyPair",1088],[3,"CiphertextWithSecretNonce",1088],[3,"SystemParams",1153],[3,"KeyPair",1153],[3,"PublicKey",1153],[3,"Ciphertext",1153],[3,"Choice",1666],[3,"AuthCredentialIssuanceProof",1240],[3,"AuthCredentialWithPniIssuanceProof",1240],[3,"ProfileKeyCredentialRequestProof",1240],[3,"ExpiringProfileKeyCredentialIssuanceProof",1240],[3,"ReceiptCredentialIssuanceProof",1240],[3,"AuthCredentialPresentationProofV2",1240],[3,"AuthCredentialWithPniPresentationProof",1240],[3,"ProfileKeyCredentialPresentationProofV1",1240],[3,"ProfileKeyCredentialPresentationProofV2",1240],[3,"ExpiringProfileKeyCredentialPresentationProof",1240],[3,"ReceiptCredentialPresentationProof",1240],[3,"Statement",1667],[3,"KeyPair",1556],[3,"Ciphertext",1556],[3,"PublicKey",1556],[3,"KeyPair",1421],[3,"CiphertextWithSecretNonce",1421],[3,"KeyPair",1504],[3,"PublicKey",1504],[6,"SignatureBytes",801],[3,"TimestampStruct",1538],[3,"SystemParams",1556],[15,"str"]],"b":[[52,"impl-From%3CAuthCredentialPresentationV2%3E-for-AnyAuthCredentialPresentation"],[53,"impl-From%3CAuthCredentialWithPniPresentation%3E-for-AnyAuthCredentialPresentation"],[474,"impl-From%3CProfileKeyCredentialPresentationV2%3E-for-AnyProfileKeyCredentialPresentation"],[476,"impl-From%3CExpiringProfileKeyCredentialPresentation%3E-for-AnyProfileKeyCredentialPresentation"],[477,"impl-From%3CProfileKeyCredentialPresentationV1%3E-for-AnyProfileKeyCredentialPresentation"],[768,"impl-Display-for-ZkGroupVerificationFailure"],[769,"impl-Debug-for-ZkGroupVerificationFailure"],[770,"impl-Display-for-ZkGroupDeserializationFailure"],[771,"impl-Debug-for-ZkGroupDeserializationFailure"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
